{"version":3,"sources":["webpack:///../node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/FolderUsageBarChart.scss?f8af","webpack:///./progeny/modules/nimble/components/NamedNimbleIcon/style.scss","webpack:///./progeny/modules/nimble/volumes/common/style.scss?f341","webpack:///./progeny/util/genericQuery/granularities.js","webpack:///./progeny/util/genericQuery/responseTransformers.js","webpack:///./progeny/util/genericQuery/index.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/Trends.scss?2f14","webpack:///./progeny/modules/charts/DataUsageDonut/styles.scss?7f81","webpack:///./app/views/components/asset/SoftwareUpgradesView.html","webpack:///./app/views/components/asset/SoftwareUpgradePaths.html","webpack:///./app/views/components/asset/BlacklistTooltip.html","webpack:///./progeny/components/GridView/DataTablesRenderer.js","webpack:///./app/views/components/grid/GridFilterView.js","webpack:///./app/views/components/grid/GridFilterView.html","webpack:///./app/views/components/grid/GridSortCollection.js","webpack:///./app/views/components/grid/GridSortModel.js","webpack:///./app/views/components/grid/GridView.html","webpack:///./app/common/ModalRegion.js","webpack:///./app/AppRequestHandlers.js","webpack:///./app/modules/assets_report/collections/AssetCollection.js","webpack:///./app/modules/software/NimbleOsReleaseCollection.js","webpack:///./app/modules/software/NimbleOsReleaseModel.js","webpack:///./app/models/SessionModel.js","webpack:///./app/modules/header/AccountSelection.js","webpack:///./app/modules/notification/AssetSupportRenewalController.js","webpack:///./app/modules/notification/templates/AssetSupportRenewal.html","webpack:///./app/modules/notification/NoncompliantReleaseController.js","webpack:///./app/modules/notification/templates/NoncompliantRelease.html","webpack:///./progeny/modules/nimble/volumes/detail/components/headline/styles.scss","webpack:///./progeny/modules/charts/PointTrackingChart/styles.scss","webpack:///./progeny/modules/nimble/arrays/detail/components/hardwareStatus.scss?23ca","webpack:///./progeny/layouts/FacetedCollectionPage/style.scss?416e","webpack:///./progeny/modules/nimble/arrays/detail/components/shelves.scss","webpack:///./progeny/modules/nimble/arrays/detail/components/hardwareRecommendations.scss?2269","webpack:///./app/modules/asset_details/performance/PerformanceView.js","webpack:///./app/modules/asset_details/performance/PerformanceChartView.js","webpack:///./app/common/ErrorView.html","webpack:///./app/modules/asset_details/performance/PerformanceTimeseries.js","webpack:///./app/modules/asset_details/performance/IopsChartGroup.js","webpack:///./app/modules/asset_details/performance/IopsChart.js","webpack:///./app/modules/asset_details/performance/IopsChart.html","webpack:///./app/modules/asset_details/performance/IopsChartTooltip.html","webpack:///./app/modules/asset_details/performance/IopsChartGroup.html","webpack:///./app/modules/asset_details/performance/LatencyChart.js","webpack:///./app/modules/asset_details/performance/FactorsChart.js","webpack:///./app/modules/asset_details/performance/FactorsHistogram.js","webpack:///./app/modules/asset_details/performance/FactorsHistogram.html","webpack:///./app/modules/asset_details/performance/FactorsChart.html","webpack:///./app/modules/asset_details/performance/LatencyChart.html","webpack:///./app/modules/asset_details/performance/MbpsChart.js","webpack:///./app/modules/asset_details/performance/MbpsChart.html","webpack:///./app/modules/asset_details/performance/EventsChart.js","webpack:///./app/modules/asset_details/performance/EventsChart.html","webpack:///./app/collections/events/PoolEventsCollection.js","webpack:///./app/modules/asset_details/performance/PerformanceChartView.html","webpack:///./app/modules/asset_details/performance/Tooltip.html","webpack:///./app/modules/asset_details/performance/ArrayEventsTooltip.html","webpack:///./progeny/modules/nimble/inventory/constants.js","webpack:///./app/common/OverlaySpinner.js","webpack:///./app/common/OverlaySpinner.html","webpack:///./app/modules/asset_details/performance/PerformanceView.html","webpack:///./progeny/modules/nimble/pools/detail/components/performance/style.scss?234f","webpack:///./progeny/modules/nimble/pools/detail/components/overview/flagStyle.scss?f857","webpack:///./progeny/modules/nimble/groups/collection/components/list/style.scss?2f9e","webpack:///./app/models/grid/CollectionGridModel.js","webpack:///./progeny/modules/nimble/volumes/detail/reducer.js","webpack:///./vendor/backbone.marionette.js","webpack:///./progeny/modules/nimble/arrays/collection/reducer.js","webpack:///./progeny/modules/nimble/volumes/detail/actionCreators.js","webpack:///./progeny/modules/nimble/volumes/detail/components/headline/PastGrowthList.js","webpack:///./progeny/modules/nimble/volumes/detail/components/headline/VolumeHeadline.js","webpack:///./progeny/modules/nimble/volumes/detail/components/headline/VolumeHeadlineContainer.js","webpack:///./progeny/modules/charts/CapacityTimeSeries/unavailableDataPlotBands.js","webpack:///./progeny/modules/charts/mixins/dateTimeAxis.js","webpack:///./progeny/modules/charts/mixins/applyMixins.js","webpack:///./progeny/modules/charts/mixins/dragZoom.js","webpack:///./progeny/modules/charts/CapacityTimeSeries/CapacityTimeSeries.js","webpack:///./progeny/modules/charts/CapacityTimeSeries/index.js","webpack:///./progeny/modules/nimble/volumes/detail/components/capacity/capacityChartOptions.js","webpack:///./progeny/modules/nimble/volumes/detail/components/capacity/VolumeCapacityChart.js","webpack:///./progeny/modules/nimble/volumes/detail/queryParams.js","webpack:///./progeny/modules/nimble/volumes/detail/components/capacity/VolumeCapacityContainer.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/queryParams.js","webpack:///./progeny/modules/charts/util/ValueWithUnits.js","webpack:///./progeny/modules/charts/util/formatterLibrary.js","webpack:///./progeny/modules/charts/mixins/legend.js","webpack:///./progeny/modules/charts/mixins/plotOptions.js","webpack:///./progeny/modules/charts/mixins/title.js","webpack:///./progeny/modules/charts/Iops/index.js","webpack:///./progeny/modules/charts/mixins/dimensions.js","webpack:///./progeny/modules/charts/Performance/index.js","webpack:///./progeny/modules/charts/PerformanceChartsPage/layout/LayoutGenerator.js","webpack:///./progeny/modules/charts/PerformanceChartsPage/layout/ChartSummaryLayout.js","webpack:///./progeny/modules/charts/PerformanceChartsPage/index.js","webpack:///./progeny/modules/nimble/volumes/detail/components/performance/VolumePerformanceContainer.js","webpack:///./progeny/modules/nimble/volumes/detail/components/VolumeDetailContainer.js","webpack:///./progeny/modules/nimble/volumes/detail/index.js","webpack:///./progeny/modules/charts/mixins/stackedAreaChart.js","webpack:///./progeny/modules/charts/MouseOutTrackingHighchart.js","webpack:///./progeny/modules/charts/PointTrackingChart/ChartProvider.js","webpack:///./progeny/modules/charts/PointTrackingChart/ChartLayout.js","webpack:///./progeny/modules/nimble/volumes/collection/components/capacity/TopVolumesChart.js","webpack:///./progeny/modules/charts/mixins/tooltip.js","webpack:///./progeny/modules/charts/PointTrackingChart/providePointTracking.js","webpack:///./progeny/modules/nimble/volumes/collection/components/capacity/CapacityContainer.js","webpack:///./progeny/modules/charts/util/synchronization.js","webpack:///./progeny/modules/charts/CorrelationHeatmapTimeSeries/HighchartsWrapper.js","webpack:///./progeny/modules/charts/CorrelationHeatmapTimeSeries/CorrelationHeatmapTimeSeries.js","webpack:///./progeny/modules/charts/SyncChart/SyncChart.js","webpack:///./progeny/modules/charts/SyncChart/SynchronizedChartMediator.js","webpack:///./progeny/util/cartesianProductOf.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/buildPerspectives.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/VolumePerformance.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/PoolPerformanceSnapShotView.js","webpack:///./progeny/modules/charts/ResponsiveChartWrapper.js","webpack:///./progeny/modules/charts/MultiObjectChart.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/PoolPerformanceChart.js","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/VolumePerformanceContainer.js","webpack:///./progeny/modules/nimble/arrays/detail/actionCreators.js","webpack:///./progeny/modules/nimble/arrays/detail/components/MonitorServices.js","webpack:///./progeny/modules/nimble/arrays/detail/components/HardwareStatus.js","webpack:///./progeny/modules/nimble/arrays/detail/components/ArrayHeadline.js","webpack:///./progeny/layouts/FacetedCollectionPage/Tabs.js","webpack:///./progeny/layouts/FacetedCollectionPage/Table.js","webpack:///./progeny/layouts/FacetedCollectionPage/FacetedCollectionPage.js","webpack:///./progeny/layouts/FacetedCollectionPage/index.js","webpack:///./progeny/modules/nimble/arrays/detail/components/ArrayShelves.js","webpack:///./progeny/modules/nimble/arrays/detail/components/HardwareRecommendations.js","webpack:///./progeny/modules/nimble/arrays/detail/components/SoftwareRecommendationsMarionetteWrapper.js","webpack:///./progeny/modules/nimble/arrays/detail/components/ArrayDetailContainer.js","webpack:///./progeny/modules/nimble/pools/detail/queryParams.js","webpack:///./progeny/modules/nimble/pools/detail/actionCreators.js","webpack:///./progeny/modules/nimble/pools/detail/components/headline/PoolHeadline.js","webpack:///./progeny/modules/nimble/pools/detail/components/headline/PoolHeadlineContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/capacity/CapacityChart/capacityChartOptions.js","webpack:///./progeny/modules/nimble/pools/detail/components/capacity/CapacityChart/CapacityChart.js","webpack:///./progeny/modules/nimble/pools/detail/components/capacity/CapacityChart/CapacityChartContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/capacity/CapacityChart/index.js","webpack:///./progeny/modules/nimble/pools/detail/components/capacity/PoolCapacityContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/performance/ArrayPerformanceContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/performance/PoolPerformanceContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/util.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/OverviewCapacityChart.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/PoolSaturationChart.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/EventFlag.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/EventsChart.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/OverviewContainer.js","webpack:///./progeny/modules/nimble/pools/detail/components/overview/index.js","webpack:///./progeny/modules/nimble/pools/detail/components/PoolDetailContainer.js","webpack:///./progeny/modules/nimble/groups/collection/actionCreators.js","webpack:///./progeny/modules/nimble/groups/collection/components/list/getConfig.js","webpack:///./progeny/modules/nimble/groups/collection/components/list/ListContainer.js","webpack:///./progeny/modules/nimble/arrays/collection/components/list/getConfig.js","webpack:///./progeny/modules/nimble/arrays/collection/components/list/ListContainer.js","webpack:///./progeny/modules/nimble/arrays/collection/components/list/index.js","webpack:///./progeny/modules/nimble/components/DetailPageTitle.js","webpack:///./progeny/modules/nimble/config.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/style.scss?52f8","webpack:///./app/models/grid/BaseGridModel.js","webpack:///./progeny/modules/nimble/arrays/collection/actionCreators.js","webpack:///./progeny/modules/nimble/arrays/collection/components/list/ArrayHealth.js","webpack:///./progeny/modules/nimble/pools/detail/reducer.js","webpack:///./progeny/modules/nimble/volumes/common/DataProtection.js","webpack:///./progeny/modules/nimble/volumes/util.js","webpack:///./progeny/modules/nimble/volumes/common/DaysUntilFull.js","webpack:///./progeny/modules/nimble/volumes/common/VolumeStatus.js","webpack:///./progeny/modules/nimble/volumes/common/VolumeDataUsageInfo.js","webpack:///./progeny/modules/nimble/volumes/common/index.js","webpack:///./progeny/modules/nimble/components/NamedNimbleIcon/NamedNimbleIcon.js","webpack:///./progeny/modules/nimble/components/NamedNimbleIcon/index.js","webpack:///./progeny/components/Dropdown/style.scss?9b3e","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/nodeDecorators/style.scss?6c39","webpack:///./progeny/modules/capacityReport/reducer/objectRelationships.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/index.js","webpack:///./progeny/modules/nimble/pools/collection/constants.js","webpack:///./progeny/modules/constants.js","webpack:///./progeny/modules/nimble/volumes/collection/constants.js","webpack:///./progeny/modules/nimble/volumes/collection/reducer.js","webpack:///./app/models/grid/BulkLoadGridModel.js","webpack:///./app/views/components/grid/GridFilterModel.js","webpack:///./app/modules/api/Api.js","webpack:///./progeny/modules/support/reducer/core.js","webpack:///./app/Application.js","webpack:///./progeny/modules/preferences/actionCreators.js","webpack:///./app/modules/preferences/UserPreferencesController.js","webpack:///./progeny/services/axios.js","webpack:///./progeny/services/Request.js","webpack:///./progeny/modules/user/constants.js","webpack:///./progeny/modules/nimble/highchartsProxy.js","webpack:///./progeny/modules/user/util.js","webpack:///./progeny/modules/capacityReport/components/savings/style.scss?a42d","webpack:///./progeny/util/numeralHelpers.js","webpack:///./progeny/modules/nimble/volumes/collection/actionCreators.js","webpack:///./progeny/modules/capacityReport/components/shared.scss?27ee","webpack:///./app/views/components/asset/SoftwareUpgradesView.js","webpack:///./app/models/grid/LocalGridModel.js","webpack:///./progeny/modules/nimble/arrays/collection/constants.js","webpack:///./progeny/modules/nimble/arrays/detail/reducer.js","webpack:///./progeny/modules/capacityReport/reducer/poolContext/selectors.js","webpack:///./progeny/modules/support/reducer/support-cases.js","webpack:///./progeny/modules/bulletins/actionCreators.js","webpack:///./progeny/modules/user/index.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/constants.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/ArrayFan.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/ArrayPowerSupply.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/ArraySSD.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/ArrayHDD.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/ArrayController.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/NimbleIcon.js","webpack:///./progeny/modules/charts/DataUsageDonut/chartOptions.js","webpack:///./progeny/modules/charts/DataUsageDonut/Donut.js","webpack:///./progeny/modules/charts/DataUsageDonut/DonutChart.js","webpack:///./progeny/modules/charts/DataUsageDonut/index.js","webpack:///./progeny/store/utils/createItemUpdateReducersForAction.js","webpack:///./progeny/modules/nimble/address/reducer.js","webpack:///./progeny/modules/nimble/pools/detail/components/headline/SavingsDetail.js","webpack:///./progeny/modules/nimble/pools/detail/components/headline/Savings.js","webpack:///./progeny/config.js","webpack:///./progeny/modules/user/reducer.js","webpack:///./progeny/util/chartColors.js","webpack:///./progeny/util/storeProvider.js","webpack:///./progeny/util/url.js","webpack:///./progeny/containers/NimbleLegacyContainer.js","webpack:///./app/common/AsyncView.js","webpack:///./progeny/store/indexeddb.js","webpack:///./progeny/modules/notifications/actionCreators.js","webpack:///./progeny/modules/notifications/reducer.js","webpack:///./progeny/modules/notifications/GlobalNotificationContainer.js","webpack:///./progeny/modules/infrastructure/factories.js","webpack:///./progeny/modules/nimble/inventory/actionCreators.js","webpack:///./progeny/modules/nimble/inventory/index.js","webpack:///./progeny/modules/capacityReport/constants.js","webpack:///./progeny/modules/capacityReport/components/layout/style.scss?ad3e","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/style.scss?73b9","webpack:///./progeny/modules/nimble/rootStateSelector.js","webpack:///./progeny/util/formatter/index.js","webpack:///./progeny/modules/nimble/pools/collection/reducer.js","webpack:///./progeny/util/formatter/constants.js","webpack:///./app/models/grid/RemoteGridModel.js","webpack:///./progeny/modules/nimble/arrays/collection/components/list/ArraySupportStatus.js","webpack:///./progeny/modules/nimble/arrays/detail/components/NetworkInfo.js","webpack:///./progeny/store/middleware/legacyEventEmitterActions.js","webpack:///./app/modules/assets_report/models/AssetModel.js","webpack:///./app/modules/header/AccountController.js","webpack:///./app/modules/header/AccountModel.js","webpack:///./progeny/modules/preferences/constants.js","webpack:///./progeny/modules/preferences/reducer.js","webpack:///./progeny/modules/nimble/arrays/detail/constants.js","webpack:///./progeny/modules/nimble/volumes/detail/constants.js","webpack:///./app/modules/asset_details/performance/ImpactScoreImpl.js","webpack:///./progeny/modules/charts/PerformanceChartsPage/layout/styles.scss?d6b6","webpack:///./progeny/modules/nimble/volumes/collection/components/performance/style.scss?37ef","webpack:///./progeny/modules/charts/mixins/xAxis.js","webpack:///./progeny/modules/nimble/pools/detail/constants.js","webpack:///./app/modules/asset_details/performance/RangeModel.js","webpack:///./app/common/Spinner.html","webpack:///./app/common/ErrorView.js","webpack:///./app/modules/asset_details/performance/ImpactScore.js","webpack:///./app/modules/asset_details/performance/ChartColors.js","webpack:///./app/collections/events/ArrayEventsCollection.js","webpack:///./app/models/ArrayEventModel.js","webpack:///./progeny/modules/nimble/groups/collection/constants.js","webpack:///./progeny/modules/nimble/groups/collection/reducer.js","webpack:///./progeny/modules/bulletins/constants.js","webpack:///./progeny/modules/bulletins/components/BulletinsModal.js","webpack:///./progeny/modules/bulletins/components/Bulletins.scss?0757","webpack:///./progeny/modules/nimble/address/constants.js","webpack:///./progeny/modules/nimble/resellerDashboard/reducer.js","webpack:///./progeny/modules/nimble/resellerDashboard/constants.js","webpack:///./progeny/modules/nimble/settings/user/constants.js","webpack:///./progeny/modules/user/actionsCreators.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/TreeView/TreeView.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/TreeView/Caret.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/TreeView/index.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/nodeDecorators/Pool.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/nodeDecorators/Folder.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/nodeDecorators/ArrayGroup.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/nodeDecorators/Container.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/createTree.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/createObjectGraph.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/PoolFolderTreeView.js","webpack:///./progeny/modules/capacityReport/components/containers/Selection.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/PoolFolderTreeViewDropdown.js","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/index.js","webpack:///./progeny/modules/capacityReport/actionCreators/folder.js","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/chartOptions.js","webpack:///./progeny/util/colors.js","webpack:///./progeny/modules/capacityReport/util.js","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/PoolUsageChart.js","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/FolderUsageChart.js","webpack:///./progeny/modules/capacityReport/components/usageSummaryCharts/FolderUsageBarChart.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/gridViewOptions.js","webpack:///./progeny/components/Progress/Bar.js","webpack:///./progeny/components/Progress/calcPercent.js","webpack:///./progeny/components/Progress/Progress.js","webpack:///./progeny/components/Progress/StackedProgress.js","webpack:///./progeny/components/Progress/ProgressWithValue.js","webpack:///./progeny/components/util/bem.js","webpack:///./progeny/modules/capacityReport/components/savings/SavingsDetail.js","webpack:///./progeny/modules/capacityReport/components/savings/Popover.js","webpack:///./progeny/modules/capacityReport/components/savings/SavingsBreakdownPopover.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/applicationsConfig.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/ApplicationsTable.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/foldersConfig.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/FoldersTable.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/PoolsTable.js","webpack:///./progeny/modules/capacityReport/components/usageDetailTable/VolumesTable.js","webpack:///./progeny/modules/capacityReport/components/timeSeries/FolderCapacityTimeSeries.js","webpack:///./progeny/modules/capacityReport/components/timeSeries/PoolCapacityTimeSeries.js","webpack:///./progeny/modules/capacityReport/components/timeSeries/TopPoolsCapacityTimeSeries.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/TotalUsage.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/Volumes.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/RecentIssues.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/Trends.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/DaysUntilFull.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/FolderTrends.js","webpack:///./progeny/modules/capacityReport/components/layout/FolderCapacity.js","webpack:///./progeny/modules/capacityReport/reducer/folderContext/selectors.js","webpack:///./progeny/modules/capacityReport/components/containers/FolderCapacityContainer.js","webpack:///./progeny/modules/capacityReport/actionCreators/pool.js","webpack:///./progeny/modules/capacityReport/components/layout/summary/PoolTrends.js","webpack:///./progeny/modules/capacityReport/components/NimbleOSVersionLink.js","webpack:///./progeny/modules/capacityReport/components/layout/PoolCapacity.js","webpack:///./progeny/modules/capacityReport/components/containers/PoolCapacityContainer.js","webpack:///./progeny/modules/capacityReport/actionCreators/objectRelationships.js","webpack:///./progeny/modules/capacityReport/components/containers/CapacityContainer.js","webpack:///./progeny/components/Dropdown/Menu.js","webpack:///./progeny/components/Dropdown/ComplexToggle.js","webpack:///./progeny/components/Dropdown/Toggle.js","webpack:///./progeny/components/Dropdown/Dropdown.js","webpack:///./progeny/components/Dropdown/ComplexDropdown.js","webpack:///./progeny/components/Dropdown/index.js","webpack:///./progeny/modules/nimble/pools/collection/actionCreators.js","webpack:///./progeny/modules/nimble/pools/collection/components/table/getConfig.js","webpack:///./progeny/modules/nimble/pools/collection/components/table/PoolsTableView.js","webpack:///./progeny/modules/nimble/volumes/collection/components/list/getConfig.js","webpack:///./progeny/modules/nimble/volumes/collection/components/list/ListContainer.js","webpack:///./progeny/modules/nimble/volumes/collection/components/list/index.js","webpack:///./progeny/modules/nimble/settings/user/reducer.js","webpack:///./progeny/modules/nimble/settings/rootSelector.js","webpack:///./progeny/modules/capacityReport/components/containers/style.scss?75fa","webpack:///./progeny/modules/capacityReport/components/PoolFolderTreeViewDropdown/style.scss?1375","webpack:///./progeny/modules/nimble/tenantSelection/NimbleUserTenantHelpers.js","webpack:///./progeny/modules/nimble/tenantSelection/index.js","webpack:///./progeny/modules/nimble/inventory/reducer.js","webpack:///./app/views/components/grid/GridView.js","webpack:///./progeny/modules/support/actions/constants.js","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-sharepoint-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-virtual-server-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-virtual-desktop-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-file-server-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-other-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-unassigned-app-category.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-remote-replica.png","webpack:///./progeny/modules/nimble/components/NimbleIcon/icons/nmbl-local-replication.png","webpack:///./images/nmbl-dashboard-heartbeat-down.png","webpack:///./images/nmbl-dashboard-heartbeat-up.png","webpack:///./images/nmbl-dashboard-asup-down.png","webpack:///./images/nmbl-dashboard-asup-up.png"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","legend","legend-name","legend-value","legend-unit","striped","bar-chart","bar","caret","swatch","is-zero","icon","superscript","off","GRANULARITIES","moment","duration","byIso8601Duration","reduce","memo","g","_extends","_defineProperty","toJSON","findGranularity","iso8601Duration","determineGranularityFromSampleCount","startTime","endTime","maxSamples","isValid","chartRange","diff","find","pointSize","asMilliseconds","firstOrNullTransform","response","payload","data","getPayload","responseTransformers_extends","replacePayloadData","length","firstOrNullData","firstOrNull","d","__webpack_exports__","trend","popover-link","tooltip","donut","donut-pie","donut-title","percentUsed","percentUsedWarning","percentageGrowth","strongText","DataTable","$","fn","preventDefault","func","event","extend","ext","classes","sWrapper","sProcessing","defaults","renderer","Pagination","_ref","start","end","total","onPrevious","onNext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","role","aria-label","classnames","disabled","href","onClick","aria-hidden","propTypes","PropTypes","isRequired","number","pageButton","infosight","settings","host","api","Api","pageInfo","page","info","recordsDisplay","ReactDOM","render","draw","_","require","Marionette","GridFilterModel","tpl","ItemView","template","ui","toggleFiltersLink","filterWrapper","clearFiltersLink","filterSection","events","click @ui.toggleFiltersLink","click @ui.clearFiltersLink","modelEvents","change","gridInitialized","initialize","options","this","columnIndexMap","grid","console","assert","model","filterModel","filterValueHasMatchingRowsByColumn","unfilteredRowCache","filteredRowCache","listenTo","createFilters","onRender","$el","hide","toggle","values","every","x","isNull","isEmpty","resetMultiselectFilters","empty","getDataTableApi","init","columns","each","createFilter","bind","attributes","columnDef","columnIndex","filter","filterValues","column","columnDisplayName","header","html","columnName","name","splitValueOn","cache","unique","toArray","arr","val","concat","split","str","trim","uniqueVals","union","get","sort","s1","s2","toUpperCase","localeCompare","label","select","attr","i","len","append","set","self","multipleSelect","filterClearOption","forEach","$clearEl","parent","css","width","selectAll","selectAllText","allSelected","onCheckAll","onUncheckAll","instance","getSelects","onOpen","currentColumnName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","unfilteredRow","value","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","cn","rv","index","row","enabled","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","filteredRow","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","col","filterResult","filterWithoutCurrentColumn","filterLogic","filterColumnOptionsByOtherColumns","addBinding","observe","selectOptions","collection","defaultOption","toggleFilters","toggleClass","clearFilters","clearValues","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","onChange","redraw","rowIndex","rowObject","rowSearchData","ignoreColumnName","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","rowValue","allowedValue","columnFilterOptions","_typeof","chain","some","v","indexOf","contains","isRowIncluded","push","Backbone","GridSortModel","Collection","Model","order","Region","constructor","prototype","apply","arguments","onShow","hasClass","on","modal","onEmpty","r","handlers","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_progeny_modules_nimble_arrays_collection_constants__WEBPACK_IMPORTED_MODULE_1__","_progeny_modules_nimble_arrays_collection_actionCreators__WEBPACK_IMPORTED_MODULE_2__","_progeny_util_storeProvider__WEBPACK_IMPORTED_MODULE_3__","_progeny_store_middleware_legacyEventEmitterActions__WEBPACK_IMPORTED_MODULE_4__","_infosight_elmer_dist_utils_redux__WEBPACK_IMPORTED_MODULE_5__","_progeny_services_Request__WEBPACK_IMPORTED_MODULE_6__","_progeny_modules_user__WEBPACK_IMPORTED_MODULE_7__","_modules_assets_report_collections_AssetCollection__WEBPACK_IMPORTED_MODULE_8__","_modules_assets_report_collections_AssetCollection__WEBPACK_IMPORTED_MODULE_8___default","_modules_software_NimbleOsReleaseCollection__WEBPACK_IMPORTED_MODULE_9__","_modules_software_NimbleOsReleaseCollection__WEBPACK_IMPORTED_MODULE_9___default","_models_SessionModel__WEBPACK_IMPORTED_MODULE_10__","_models_SessionModel__WEBPACK_IMPORTED_MODULE_10___default","_progeny_modules_nimble_tenantSelection_NimbleUserTenantHelpers__WEBPACK_IMPORTED_MODULE_11__","App","sessionModel","SessionModel","userSelector","getStore","getState","assetCollection","AssetCollection","nimbleOsReleases","NimbleOsReleaseCollection","asAsync","promise","type","toLowerCase","Deferred","defer","then","catch","reject","asjQueryDeferrered","assetCollectionPromise","handleRequest","NimbleUserTenantHelpers","currentTenantIsNimbleTenant","Promise","getArrays","dispatch","assets","reset","parse","releasesPromise","Request","urlSegments","releases","handleEvent","emitEventForAction","getSuccessActionType","ARRAYS_LIST_FETCH","clear","silent","AssetModel","url","pod","account","segment","NimbleOsReleaseModel","toComparableVersion","version","slice","part","join","comparator","b","release","shortVersion","displayStatus","status","description","supported","AuthorizationEvaluator","AUTHORITIES","deepGet","assertionError","userLogin","internal","acmPurchased","arrays","ndaSigned","firstLogin","vmImageApproved","vmImageLicenseLimit","object","username","sync","fetch","save","isInternal","evaluate","access","authorities","REALM_INTERNAL","isExternal","REALM_EXTERNAL","AccountModel","default","mode","setAccount","getCurrentTenant","getAccount","isSingle","isAll","isPrimary","primaryAccount","request","React","objectHash","addBanner","removeBanner","NIMBLE_APP_ID","UserPreferencesController","buildUrlFromBase","arraySelector","notificationIds","shouldRenderNotification","asset","SupportStatus","CURRENT","lastDismissedForSupportEndDate","getNotification","subtype","isFirstEncounter","isForCurrentSupportEndDate","onDismiss","notifications","setNotifications","renderNotification","statusMessage","EXPIRING","EXPIRED","content","appId","severity","dangerouslySetInnerHTML","__html","_this","onPreferencesLoaded","renderNotifications","_asyncToGenerator","regeneratorRuntime","mark","_callee","arrayCount","wrap","_context","prev","array","t0","sent","splice","stop","versionSupported","lastDismissedForVersion","isForCurrentVersion","softwareLink","serialNumber","groups","findWhere","group","Map","error","dayCount","chart-column","partitionBorder","leftPartitionBorder","controllerBox","badController","capitalize","addTopPadding","tags","container","csv-button","raw-facets","head-shelf","headerRow","valueRow","cacheRow","cacheValueRow","upgradeNotesContainer","upgradeNotes","RangeModel","PerformanceChartView","LayoutView","moreHelpToggle","show.bs.collapse #coral-view-more-help","text","hide.bs.collapse #coral-view-more-help","regions","chart","childEvents","dragZoom","getOption","renderChart","showChildView","poolUid","arrayModel","rangeModel","onDragZoom","view","range","trigger","numeral","AsyncView","PerformanceTimeseries","IopsChartGroup","LatencyChart","MbpsChart","EventsChart","ArrayEventsCollection","PoolEventsCollection","ErrorView","tooltipTpl","arrayEventsTooltipTpl","OverlaySpinner","tooltipTemplate","arrayEventsTooltipTemplate","LOCAL_TIMEZONE","tz","guess","format","TIMESTAMP_FORMATS","View","templateHelpers","iops","latency","mbps","arrayEvents","spinner","noData","crosshairContainer","chartDefaults","resolution","timestampFormat","at","asDays","asHours","global","useUTC","credits","rangeSelector","navigator","scrollbar","animation","backgroundColor","height","title","spacingLeft","marginLeft","marginTop","panning","zoomType","selection","onChartSelect","reflow","plotOptions","series","enableMouseTracking","dataGrouping","turboThreshold","cursor","pointRange","pointPlacement","pointPadding","groupPadding","borderWidth","minPointLength","colorByPoint","line","area","stacking","scatter","align","floating","y","useHTML","margin","style","fontSize","padding","hideDelay","shadow","shared","positioner","plotLeft","formatter","points","plotWidth","timestamp","yAxis","opposite","showLastLabel","min","xAxis","first","max","last","ordinal","mousemove [data-chart-synchronized]","mouseleave [data-chart-synchronized]","bindAll","eventsCollection","document","onDocumentMouseMove","onRangeModelChange","window","onWindowResize","startTimestamp","endTimestamp","setActualDataRange","renderCharts","rendered","useCustomCrosshair","eventsChart","addClass","removeClass","hasCharts","childViewOptions","allFlash","getRegion","closest","show","$charts","onAttach","highcharts","createCrosshair","noRefresh","fetching","showSpinner","when","onCollectionSync","fail","onError","hideSpinner","hideCrosshair","crosshairEl","visibility","showCrosshairAt","location","offsetLeft","el","getBoundingClientRect","left","showEventsOnCrosshair","point","eventFlagsEl","getAttribute","innerHTML","classList","remove","childElementCount","color","date","add","border-left-color","widthOverflows","right","innerWidth","hideCrosshairEvents","parentNode","removeChild","viewTop","top","segmentOptions","isEventsChart","tooltipHeight","bottom","querySelector","linkTooltip","setAttribute","appendChild","bounds","clientHeight","onMouseMove","pointerCoordinate","toValue","offsetX","proximalPoints","normalizedEvent","pointer","normalize","originalEvent","searchPoint","compact","proximity","Math","abs","Infinity","minProximity","property","crosshairDrawn","onMouseOver","refresh","leftEdge","scrollX","crosshairLocation","plotX","eventAtPoint","getPointsAt","drawCrosshair","stopPropagation","onMouseLeave","debounce","onDestroy","triggerMethod","toDate","jqXhr","message","responseJSON","ViewConstructor","load","deferred","models","addQuery","getQueryParams","calculateAverages","metrics","metric","times","constant","mapObject","sum","calculateMaximums","getSeries","iopsTotal","iopsRead","iopsWrite","latencyTotal","latencyRead","latencyWrite","mbpsTotal","mbpsRandomRead","mbpsRandomWrite","mbpsSequentialRead","mbpsSequentialWrite","IopsChart","Read","Write","maxIops","showChild","ImpactScore","impactScoreColor","percentile","barPercent","buildModel","totals","severityPercentile","averageIops","weightedAverageSeverityPercentile","impactScore","FactorsChart","chartColors","METRICS","read","toHexString","write","factors","maxLatency","pluck","averages","average","percent","FactorsHistogram","FACTORS","abbreviation","threshold","histogram","bindings","input[name=\"threshold\"]","onSet","Number","parseFloat","change:threshold","stickit","renderTimeseriesChart","renderHistogram","getFactorSeries","minRange","factor","onChangeThreshold","primaryFactor","sortBy","spacing","categories","labels","minorTickLength","tickLength","visible","totalWeight","factorValues","totalIops","reverse","lighten","darken","metricKeys","maxMbps","totalAverage","totalRatio","highestRatio","metricPrefix","METRIC","ratio","popover","getSeriesData","marker","symbol","states","hover","minTimestamp","maxTimestamp","indexOfLastPoint","searchVal","distance","memoDistance","MAX_SAFE_INTEGER","getFlagConfig","overlap","propertyOf","xCoordinate","ArrayEventModel","getCache","category","monthRange","call","poolId","cached","FETCH_INVENTORY","RESET","OBJECTS","_infosight_elmer_dist_utils_redux__WEBPACK_IMPORTED_MODULE_0__","ns","actionNamespacer","GROUP","ARRAY","POOL","FOLDER","VOLUME","APP_CATEGORY","overlay","toggle-container","flagContainer","eventDate","eventList","center-align-column","table","right-align-column","large-column","medium-column","small-column","BaseGridModel","validate","attrs","initialState","getInitialState","ACTION_HANDLERS","USER_CONTEXT_CHANGED","_extends2","createReducersForAction","VOLUME_FETCH","stateKey","VOLUME_DETAIL_CAPACITY_FETCH","VOLUME_DETAIL_PERFORMANCE_FETCH","reducer","state","action","handler","baseSelector","rootState","volumeDetail","volumeSelector","createSelector","capacitySelector","performanceSelector","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","Mn","previousChildViewContainer","ChildViewContainer","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","customIndex","viewCid","cid","findByModel","findByModelCid","modelCid","findByCid","findByCustom","findByIndex","any","key","method","tail","args","isFunction","size","VERSION","noConflict","previousWreqr","Wreqr","Handlers","_wreqrHandlers","Events","setHandlers","context","isObject","callback","setHandler","config","hasHandler","getHandler","removeHandler","removeAllHandlers","CommandStorage","_commands","getCommands","commandName","commands","command","instances","addCommand","clearCommands","Commands","storageType","_initializeStorage","_executeCommands","execute","rest","storage","StorageType","RequestResponse","EventAggregator","EA","Channel","channelName","vent","reqres","stopListening","connectEvents","hash","_connect","connectCommands","connectRequests","eventName","radio","Radio","_channels","_proxyMethods","channel","_getChannel","system","messageSystems","proxyMethod","messageSystem","previousMarionette","previousMn","isNodeAttached","documentElement","mergeOptions","pick","target","optionName","proxyGetOption","_getValue","params","normalizeMethods","normalizedHash","normalizeUIString","uiString","replace","normalizeUIKeys","normalizedKey","normalizeUIValues","properties","isString","isArray","propertyVal","actAsCollection","listProperty","list","result","deprecate","test","_cache","_warn","warn","log","_triggerMethod","splitter","getEventName","match","prefix","noEventArg","methodName","drop","triggerMethodOn","fnc","MonitorDOMRefresh","triggerDOMRefresh","_isShown","_isRendered","bindFromStrings","entity","evt","methods","methodNames","bindToFunction","unbindFromStrings","unbindToFunction","iterateEvents","functionCallback","stringCallback","bindEntityEvents","unbindEntityEvents","proxyBindEntityEvents","proxyUnbindEntityEvents","errorProps","urlRoot","captureStackTrace","toString","Callbacks","_deferred","_callbacks","contextOverride","cb","ctx","run","callbacks","Controller","destroy","getEl","_ensureElement","_ensureViewIsIntact","showOptions","isDifferentView","currentView","preventDestroy","forceShow","isChangingView","_shouldDestroyView","_shouldShowView","_parent","once","attachedRegion","displayedViews","attachOptions","triggerBeforeAttach","triggerAttach","_displayedViews","_triggerAttach","attachHtml","selector","isDestroyed","parentEl","contents","detach","_destroyView","attachView","hasView","buildRegion","regionConfig","DefaultRegionClass","_buildRegionFromSelector","regionClass","_buildRegionFromObject","_buildRegionFromRegionClass","RegionClass","omit","RegionManager","_regions","addRegions","regionDefinitions","definition","addRegion","region","_store","getRegions","clone","removeRegion","_remove","removeRegions","emptyRegions","invoke","TemplateCache","templateId","templateCaches","cachedTemplate","compiledTemplate","loadTemplate","compileTemplate","rawTemplate","Renderer","_behaviors","Behaviors","delegateEntityEvents","getTemplate","serializeModel","mixinTemplateHelpers","uiBindings","configureTriggers","triggers","_buildViewTrigger","delegateEvents","eventsArg","isUndefined","combinedEvents","behaviorEvents","behaviorTriggers","undelegateEntityEvents","behavior","unbindUIElements","isRendered","bindUIElements","_bindUIElements","_uiBindings","_unbindUIElements","triggerDef","hasOptions","setElement","ret","_triggerEventOnBehaviors","_triggerEventOnParentLayout","behaviors","layoutView","_parentLayoutView","prefixedEventName","normalizedChildEvents","_getImmediateChildren","_getNestedViews","children","_getAncestors","ancestors","serializeData","items","serializeCollection","_renderTemplate","attachElContent","CollectionView","childViewEventPrefix","_initialEvents","_initChildViewStorage","before:show","_onBeforeShowCalled","_onShowCalled","before:attach","_onBeforeAttachCalled","attach","_onAttachCalled","initRenderBuffer","_bufferedChildren","startBuffering","isBuffering","endBuffering","nestedViews","canTriggerAttach","_triggerMethodMany","_triggerBeforeAttach","attachBuffer","_createBuffer","targets","source","_onCollectionAdd","_onCollectionRemove","_sortViews","child","opts","_filteredSortedModels","_shouldAddChild","destroyEmptyView","ChildView","getChildView","addChild","removeChildView","checkEmpty","childView","_renderChildren","reorder","els","_index","_appendReorderedChildren","resortView","item","_emptyViewIndex","destroyChildren","showEmptyView","showCollection","viewComparator","getViewComparator","EmptyView","getEmptyView","_showingEmptyView","addEmptyView","emptyViewOptions","buildChildView","proxyChildEvents","renderChildView","_updateIndices","_addChildView","increment","laterView","ChildViewClass","collectionView","buffer","elBuffer","createDocumentFragment","_insertBefore","_insertAfter","before","destroyOptions","shouldCheckEmpty","childViews","identity","rootEvent","CompositeView","partial","_isRendering","resetChildViewContainer","compositeView","getChildViewContainer","containerView","$childViewContainer","childViewContainer","charAt","substr","destroyImmediate","_firstRender","_initializeRegions","_reInitializeRegions","regionManager","regionName","_buildRegions","_initRegionManager","regionOptions","getRegionManager","Behavior","proxyViewProperties","delegateEventSplitter","parseBehaviors","BehaviorTriggersBuilder","buildBehaviorTriggers","_behaviorsEvents","_events","getBehaviorsUI","j","behaviour","eventKey","_view","_triggers","behaviorsLookup","getBehaviorClass","behaviorClass","nestedBehaviors","flatten","_buildTriggerHandlersForBehavior","triggersHash","_setHandlerForBehavior","triggerKey","triggerName","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","appRoute","route","_addAppRoute","routeName","routeArgs","onRoute","routePath","invert","routeNames","Application","_initCallbacks","submodules","_initChannel","addInitializer","initializer","_regionManager","moduleNames","moduleDefinition","ModuleClass","Module","getClass","unshift","create","optionRegions","moduleName","app","_setupInitializersAndFinalizers","startWithParent","_initializerCallbacks","addFinalizer","_finalizerCallbacks","_isInitialized","mod","addDefinition","customArgs","_runModuleDefinition","moduleDefinitions","parentModule","_getModule","_addModuleDefinition","def","moduleClass","_getDefine","_getStartWithParent","_addStartWithParent","swp","define","startWithParentIsConfigured","ARRAYS_CSV_FETCH","arrayCollection","listSelector","csvSelector","getVolume","volumeSn","_actionsFor","actionsFor","dispatchStart","dispatchSuccess","dispatchError","genericQuery","post","scope","getVolumeCapacity","timeRange","_actionsFor2","getVolumePerformance","time","_actionsFor4","cx","styles","PastGrowthList","last90daysGrowth","last60daysGrowth","last30daysGrowth","external_React_default","growth","growthValue","PercentGrowth_default","isPercent","percentGrowthRenderer","numeralPerSec","valueAndUnit","getValueAndUnit","unit","INFO_NOT_AVAILABLE","VolumeHeadline","appCategory","dataUsageBytes","snapshotBytes","allocatedBytes","protectionLevel","daysUntilFull","avgIopsPerWeek","avgReadLatencyMs","avgWriteLatencyMs","avgThroughput","dedupeEnabled","_getByteValueAndUnit","getByteValueAndUnit","_getByteValueAndUnit2","_slicedToArray","volumeUsedValue","usedUnit","_getByteValueAndUnit3","_getByteValueAndUnit4","snapshotUsedValue","snapshotUnit","_getByteValueAndUnit5","_getByteValueAndUnit6","volumeCapacityValue","capacityUnit","daysUntilFullDataExists","Headline_default","Section","NamedNimbleIcon","iconName","KeyStatistic_default","headline_PastGrowthList","common","days","StatusIndicator_default","formatValue","NUMBER_ABBREVIATE_FORMAT","NUMBER_FORMAT_PRECISION","string","bool","VolumeHeadlineContainer","PureComponent","props","loadingVolume","loadedVolume","_props","volume","Async_default","loading","headline_VolumeHeadline","shape","applicationCategory","perWeekIops","perWeekMibs","perWeekLatencyRead","perWeekLatencyWrite","localRecoveryPoint","remoteRecoveryPoint","defaultProps","connect","VolumeHeadlineContainer_extends","bindActionCreators","unavailableDataPlotBands","chartRangeStart","chartRangeEnd","timeSeriesStart","timeSeriesEnd","valueOf","CHART_COLORS","plotBandGrey","from","to","initialPlotBand","finalPlotBand","dateTimeAxisSnippet","lineWidth","convertPhpFormatToMomentFormat","dateTimeLabelFormat","mixinReducer","accumulation","mixin","Highstock","merge","applyMixins","_len","mixins","Array","_key","dragZoomMixin","Chart","mergeSharedTooltip","valueFormatter","xValueFormatter","Timestamp","DAY_MOMENT_FORMAT","ForecastChart","low","high","CapacityTimeSeries","_Component","CapacityTimeSeries_classCallCheck","CapacityTimeSeries_possibleConstructorReturn","__proto__","getPrototypeOf","CapacityTimeSeries_inherits","Component","CapacityTimeSeries_createClass","timeSeries","chartConfig","containerHeight","containerWidth","isSame","getTotalCapacity","sizes","maxSize","getForecastedCapacity","yAxisTitle","enableYAxisTitle","maxTotalCapacity","getMaxTotalCapacity","storageUnit","getUnitPrefix","BINARY_BASE","displayUnit","convertBytes","getUsedCapacity","seriesName","legendItemClick","_props2","getSnapshotUsage","fillColor","snapshotSeriesTitle","_props3","totalCapacityColor","_props4","showUnavailableDataBands","dateTimeFormat","includeSnapshotUsageSeries","includeTotalCapacityUsageSeries","capacityUsageSeries","snapshotSeries","totalCapacitySeries","spacingTop","getXAxis","getYAxis","_this2","_props5","forecastChart","hasData","NoData_default","CapacityTimeSeries_extends","xAxisDataRange","plotBands","getUnavailableDataBands","arrayOf","oneOfType","usedCapacity","totalCapacity","ReactDimensions","CapacityTimeSeriesChart","elementResize","legendIndex","getLegendIndex","capacityChartOptions","timeseries","forecastRangeId","lastActualDataPoint","findLastIndex","dataSource","redOrange","isNumber","step","allocatedCapacitySeries","teal","tealLight","snapshotUsageBytes","snapshotUsageSeries","blue","blueLight","dataUsageSeries","linkedTo","forecastedLowerBoundBytes","forecastedUpperBoundBytes","fillOpacity","zIndex","usageRangeForecastSeries","dashStyle","forecastedUsageBytes","usageForecastSeries","VolumeCapacityChart","volumeCapacity","Card_default","charts_CapacityTimeSeries","meta","chartOptions","sizeBytes","capacityTimeRangeParam","param","capacityParam","CapacityChartContainer","loadingVolumeCapacity","loadedVolumeCapacity","fetchData","nextProps","equals","asFixedRange","toGenericQueryTime","history","displayTimeRange","hasCapacityData","TimeRangeSelection","toTimeRangeSelection","onSelectRange","makeRangeSelector","makeChartSelector","TimeRangeSelector","parameterPrefix","presets","QueryTimeRangeSelector","PRESETS","NONVOLATILE","displayValue","card","capacity_VolumeCapacityChart","instanceOf","VolumeCapacityContainer_extends","deserialize","DEFAULTS","mapUrlToProps","buildParam","timeParam","perspectiveParam","performanceTimeRangeParam","performanceParam","ValueWithUnits","units","separator","ValueWithUnits_classCallCheck","toIops","toLatency","toThroughput","formatted","legendConfigMixin","legendDisabled","disableLegendMixin","plotOptionsMixin","MAX_VALUE","titleMixin","fontFamily","fontWeight","iOpsChart","colorDefault","timeSeriesKey","severityScore","score","percentileToScore","scoreToColor","hex","classification","scoreToClassification","Highcharts","spacingBottom","spacingRight","xopt","xAxisMixin","yAxisLabel","yAxisMax","mergeSharedTooltipConfig","pointFormatter","chartPt","ReactHighcharts","localDate","PerfChart","titles","timeSeriesKeys","colorList","invisibleSeries","stroke","fill","includes","customDimensions","formatByUnit","toPercent","COLOR_SETS","purple","green","totalColumns","generateColumnConfig","columnRatios","colCount","gridColumnsInColumn","floor","Layout","columnRatiosSmall","columnCountSmall","columnRatiosMedium","columnCountMedium","columnRatiosLarge","columnCountLarge","rowClasses","colCountSmall","colCountMedium","colCountLarge","sm","md","lg","getResponsiveGridColumnClassName","obj","node","LayoutGenerator","transparentFirstColorList","transparent","seriesLen","charts","currentTarget","renderTo","assign","hoverPoints","hasValue","_toConsumableArray","POSITIVE_INFINITY","num","avg","weightedAverage","weights","weightedTotal","minVal","maxVal","weightedAvg","accumulator","currentValue","currentIndex","PerformanceChartsPage","PerformanceChartsPage_classCallCheck","PerformanceChartsPage_possibleConstructorReturn","autobind","missingSeverity","useDeviceLatency","hostLatencyMs","hostLatencyMsCompact","hostLatencyMsAvg","networkLatencyMs","networkLatencyMsCompact","networkLatencyMsAvg","storageLatencyMs","storageLatencyMsCompact","storageLatencyMsAvg","deviceLatencyMs","deviceLatencyMsCompact","deviceLatencyMsAvg","latencyFactors","maxTotalLatency","latencyFactorsComapct","latencyFactorsMin","latencyFactorsMax","readLatencyMs","writeLatencyMs","totalLatencyMs","latencyRaw","latencyRawMin","latencyRawMax","readIops","readIopsAvg","writeIops","writeIopsAvg","iopsMin","iopsMax","totalReadIops","totalWriteIops","readLatencyMsAvg","writeLatencyMsAvg","readMbps","readMbpsAvg","writeMbps","writeMbpsAvg","mbpsMin","mbpsMax","latencyTitles","latencyTimeSeriesKeys","latencyCard","ChartSummaryLayout","Performance","Progress","leftLabel","iopsCard","Iops","iopsCardWithoutSeverity","throughputCard","timeRangePresets","VolumePerformanceContainer","loadingVolumePerformance","loadedVolumePerformance","volumePerformance","transformedVolumePerformance","iopsRandomSequentialRead","iopsRandomSequentialWrite","mbpsRandomSequentialRead","pow","mbpsRandomSequentialWrite","charts_PerformanceChartsPage","VolumePerformanceContainer_extends","VOLATILE","VolumeDetailContainer","_objectWithoutProperties","headline_VolumeHeadlineContainer","components_Tabs","performance_VolumePerformanceContainer","VolumeDetailContainer_extends","VolumeCapacityContainer","stackedAreaMixin","stack","stickyTracking","MouseOutTrackingHighchart","MouseOutTrackingHighchart_classCallCheck","MouseOutTrackingHighchart_possibleConstructorReturn","containerElementId","uniqueId","getElementById","removeEventListener","onMouseOut","addEventListener","MouseOutTrackingHighchart_extends","domProps","ChartProvider","buildConfig","onAfterChartRendered","charts_MouseOutTrackingHighchart","ChartProvider_extends","PointTrackingChart","pointTracking","getObjectLinkProps","chartContainerClassName","defaultLegendItems","PointTrackingChart_ChartProvider","onMouseOverPoint","Legend_default","defaultLegendValues","linkProps","highchartsSeries","buildLegend","reserveTimestampSpace","valueTitle","objectOf","legendValueFormatter","hasValidScopingObject","hasFolderLimit","TopVolumesByCapacity","TopVolumesChart_classCallCheck","TopVolumesChart_possibleConstructorReturn","TopVolumesChart_inherits","TopVolumesChart_createClass","_ref2","_ref2$options","isAggregatedRemainder","scopingObjectType","getLinkPropsForView","getDetailView","findView","innerScope","_props$scopingObjectS","scopingObjectSizeSeries","warningYellow","_ref3","baseTimeSeries","onRedraw","yAxisLabelFormatter","seriesMapper","dateTimeXAxisMixin","formatterCallback","hijackSharedTooltipMixin","ignoreHiddenSeries","stackedAreaChart_extends","stackedAreaTimeSeriesMixin","_ref4","_ref5","buildScopingObjectSizeSeries","vol","ChartLayout","getLinkProps","MINUTE_MOMENT_FORMAT","providePointTracking","WrappedComponent","PointTrackingProvider","providePointTracking_classCallCheck","providePointTracking_possibleConstructorReturn","legendValues","legendSeries","legendTimestamp","providePointTracking_inherits","providePointTracking_createClass","setState","_state","providePointTracking_extends","displayName","wrapDisplayName","getDisplayName","hoistNonReactStatics","CapacityContainer","resetVolumeCollectionStore","getVolumesCapacity","rankBy","convertToGenericQueryScope","getScopingObjectSizeSeries","volumesCapacity","loadingVolumesCapacity","loadingScopingObjectSizeSeries","loadedScopingObjectSizeSeries","chartStartTime","chartEndTime","TopVolumesChart","_PropTypes$shape","CapacityContainer_extends","volumesCapacitySelector","scopingObjectSizeSeriesSelector","getTopVolumesCapacity","findPoints","xValue","pointMapper","pt","moveCrosshair","ChartWrapper","_PureComponent","HighchartsWrapper_classCallCheck","HighchartsWrapper_possibleConstructorReturn","HighchartsWrapper_inherits","HighchartsWrapper_createClass","thisComponent","field","granularity","minColor","maxColor","plotBorderWidth","colorAxis","layout","verticalAlign","symbolHeight","symbolWidth","heatmap","borderColor","colsize","nullColor","nullInteraction","aggregatedValue","mouseOver","lastPointHovered","minPadding","maxPadding","reversed","gridLineWidth","buildDefaultPointValues","aggregatedValues","CorrelationHeatmapTimeSeries_toConsumableArray","chromaScale","chroma","scale","domain","CorrelationHeatmapTimeSeries","CorrelationHeatmapTimeSeries_classCallCheck","CorrelationHeatmapTimeSeries_possibleConstructorReturn","defaultPointValues","pointValues","pointTimestamp","isPointHovered","chartSync","monitorChart","syncPoints","resetPoints","newProps","prevProps","prevState","prevPointTimestamp","removePlotLine","addPlotLine","crosshairs","removeChart","requestDataResolution","POINT_WIDTH_PIXELS","forceUpdate","plotVerticalMargin","_chart","chartHeight","plotHeight","calculateChartHeight","HighchartsWrapper","buildLegendItems","gradientMinGrey","guessMaxSampleCount","minWidthPixelsSelector","resetTooltips","mouseEvent","hoveredPoint","chartIndex","seriesIndex","seriesCount","chartCount","syncChartCrossHairs","mouseMoveEvent","SyncChart","element","contextTypes","chartSyncProvider","SynchronizedChart","cloneElement","Children","only","SynchronizedChartMediator","SynchronizedChartMediator_classCallCheck","SynchronizedChartMediator_possibleConstructorReturn","SynchronizedChartMediator_inherits","SynchronizedChartMediator_createClass","childContextTypes","cartesianProductOfKeys","_len2","sets","_key2","acc","cartesianProductOf_toConsumableArray","cartesianProductOf","buildPerspectiveKey","io","VolumePerformance","VolumePerformance_classCallCheck","VolumePerformance_possibleConstructorReturn","showActivityChart","showLatencyChart","_ref$options","throughputTimeseries","throughputPerspective","latencyTimeseries","latencyPerspective","loadingThroughputTimeseries","loadedThroughputTimeseries","loadingLatencyTimeseries","loadedLatencyTimeseries","hideSection","QueryField","parameter","htmlFor","toggleActivityVisibility","IconAdaptor","SynchronizedChartMediator_SynchronizedChart","charts_CorrelationHeatmapTimeSeries_CorrelationHeatmapTimeSeries","VolumePerformance_extends","onRequestDataResolution","getVolumeLinkProps","rightSideTitles","toggleLatencyVisibility","PoolPerformanceSnapShotView","PoolPerformanceSnapShotView_classCallCheck","PoolPerformanceSnapShotView_possibleConstructorReturn","PoolPerformanceSnapShotView_inherits","PoolPerformanceSnapShotView_createClass","cpuCacheTimeseries","cpuThresholdPercent","cacheThresholdPercent","cpuUsagePercent","cacheUsagePercent","ResponsiveChartWrapper","ResponsiveChartWrapper_extends","noop","MultiObjectChart","MultiObjectChart_classCallCheck","MultiObjectChart_possibleConstructorReturn","getStateFromProps","_props$getCorrespondi","getCorrespondingPoints","useHighchartsCrosshair","highchartSeries","w","h","plotTop","charts_ResponsiveChartWrapper","buildMedianSeries","medianValuekey","datapoint","getAvgUsage","computeDefaultPointValues","PoolPerformanceChart_defineProperty","isAllFlashPool","chartConfigProps","cpuAverages","alpha","thresholdValue","cacheAverages","headlineValueFormatter","FORMAT_NUMBER_EXTRA_PRECISION","PoolPerformanceChart","PoolPerformanceChart_classCallCheck","PoolPerformanceChart_possibleConstructorReturn","showPoolPeformanceDetail","loaded","charts_MultiObjectChart","performance_PoolPerformanceSnapShotView","oneOf","PERSPECTIVES","UNITS","fieldSegment","LATENCY_UNIT","ms","IO_TYPES","readWrite","ACCESS_TYPES","randomSequential","random","seq","perspectives","buildPerspectives_slicedToArray","chartTitle","latencyPerspectiveKey","buildPerspectives","PerformanceContainer","performance_VolumePerformanceContainer_classCallCheck","performance_VolumePerformanceContainer_possibleConstructorReturn","fetchCpuCacheUsageSeries","fetchThroughputTimeSeries","fetchLatencyTimeSeries","resetPerformanceStore","_props$timeRange$asFi","responses","dataStart","dataEnd","perspective","addGranularity","getRequestGranularity","gapFill","getPoolCpuCacheUsageSeries","buildFetchOptions","getTopVolumesThroughputTimeSeries","getTopVolumesLatencyTimeSeries","loadingPoolCpuCacheTimeseries","poolCpuCacheTimeseries","hasPoolPerformanceData","getUnionedTimeRange","valueClassName","SynchronizedChartMediator_SynchronizedChartMediator","performance_PoolPerformanceChart","performance_VolumePerformance","performance_VolumePerformanceContainer_extends","loadedPoolCpuCacheTimeseries","cpu50thPercentile","cache50thPercentile","throughputTimeseriesSelector","latencyTimeseriesSelector","poolCpuCacheTimeseriesSelector","perspectiveKey","compareShelfNames","assetType","shelfSn","getArrayDetail","arraySn","ARRAY_FETCH","all","fetchArrayDetail","urlSegment","fetchHeartbeat","fetchAsupTime","actionCreators_slicedToArray","heartbeats","asupTime","arraysData","arrayWithShelves","shelves","heartbeatsData","asupTimeObj","actionCreators_extends","latestHeartBeat","lastAsupReceivedTime","getArrayHardwareUpgradeRecommendations","ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH","MonitorServices","latestHeartbeatTime","heartBeatIconName","isHeartbeatDelayed","asupIconName","NimbleIcon","fromNow","formatDateTime","FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC","hasControllerIssue","hasControllerFanIssue","components","component","HardwareStatus","latestHeartbeat","isAllFlash","controllerA","controllers","controllerB","controllerAStatus","controllerBStatus","controllerAFanStatus","controllerBFanStatus","powerSupplyStatus","hasPowerSupplyIssue","ssdStatus","hb","ssdFailedCount","hasSSDIssues","hddStatus","hddFailedCount","hasHDDIssues","Fragment","ssdGoodCount","aliasName","hddGoodCount","ArrayHeadline","arrayUid","softwareVersion","sendingAsups","arrayCapacityBytes","arrayFreeBytes","tenGigSfpPortCount","tenGigBaseTPortCount","gigPortCount","fcPortCount","paddingLeft","paddingRight","maxWidth","getNetworkCardInfo","DataUsageDonut","usedBytes","freeBytes","components_HardwareStatus","components_MonitorServices","Tabs","tabName","getCategories","Toggle","fieldSet","Table","getColumns","rowKey","rowsPerPage","defaultSort","sorting","sortParameter","GridView","Pagination_default","itemCount","numberPerPage","colname","FacetedCollectionPage","FacetedCollectionPage_classCallCheck","FacetedCollectionPage_possibleConstructorReturn","Filter","FacetedCollectionPage_inherits","FacetedCollectionPage_createClass","loadingCollection","tableClassName","keyField","showCategories","enableFieldSet","filterParameterName","downloadCsv","downloadingCsv","_config$valueOf","renderCategories","ScrollContainer_default","Fixed","FacetedCollectionPage_Tabs","Button_default","FacetedFilter","onChangeFilter","Scrollable","parameterName","FacetedCollectionPage_Table","CollectionConfig","CollectionConfigBuilder","withQueryParams","addCacheColumn","addField","FieldBuilder","shelfSsdRawCapacityBytes","FORMAT_BYTE_10_PRECISION","ArrayShelves","ArrayShelves_objectWithoutProperties","addCategory","facet","shelfModel","shelfHddRawCapacityBytes","addCapacityColumn","layouts_FacetedCollectionPage","HardwareRecommendations","arrayHardwareUpgradeRecommendations","arrayType","currentController","currentCacheSystemTotalBytes","currentCacheHeadBytes","currentCacheTotalAfsBytes","currentCacheExpNonAfsBytes","currentHddBytes","recommendCPUUpgrade","recommendCacheUpgrade","recommendScaleOut","recommendedController","recommendCacheSystemTotalBytes","recommendedCacheHeadBytes","recommendedCacheTotalAfsBytes","recommendedCacheExpNonAfsBytes","recommendDiskUpgrade","recommendedComponents","componentsString","getUpgradeNotes","addAfsShelf","currentHddExpansionShelves","recommendedHddExpansionShelves","additionalShelves","getCapacityRecommendation","currentArrayModel","recommendedArrayModel","SoftwareRecommendationsMarionetteWrapper","SoftwareRecommendationsMarionetteWrapper_classCallCheck","SoftwareRecommendationsMarionetteWrapper_possibleConstructorReturn","SoftwareUpgradesView","displayAsModal","hostname","ref","renderView","awaitLegacyApp","ArrayDetailContainer","ArrayDetailContainer_classCallCheck","ArrayDetailContainer_possibleConstructorReturn","_this$props","pathname","endsWith","relations","getObjectTopology","poolUidFromInventory","preventLoad","loadingArray","loadedArray","loadingArrayHardwareUpgradeRecommendations","Switch","Route","exact","path","buildUrl","Redirect","components_ArrayHeadline","components_ArrayShelves","components_HardwareRecommendations","components_SoftwareRecommendationsMarionetteWrapper","hostName","accountId","groupName","poolName","arrayId","supportStatus","supportEndDate","supportAgrmt","arrayTimezone","shelfCount","hddDriveCount","headShelfSn","ArrayDetailContainer_extends","arrayHardwareUpgradeRecommendationSelector","getPool","POOL_FETCH","getPoolCapacityRequest","getCapacityTimeRange","getPoolCapacity","_ref2$timeRange","CAPACITY_FETCH","getPoolEventsRequest","_ref3$eventFilters","eventFilters","finalTimeRange","filters","actionCreators_toConsumableArray","detail_actionCreators_extends","getPoolOverviewData","_ref4$timeRange","_ref4$eventFilters","poolArrayList","_actionsFor3","OVERVIEW_FETCH","query","getPoolCpuCacheRecommendationsRequest","_responses","detail_actionCreators_slicedToArray","poolCapacity","poolEvents","poolCpuCacheUsage","groupBy","PoolHeadline","unusedReserveBytes","lastWeekGrowthPercent","snapshotCount","savingsCloneBytes","savingsCompressionBytes","savingsDedupBytes","totalSavingsBytes","cloneSavingsFactor","compressionSavingsFactor","dedupSavingsFactor","totalSavingsFactor","growthPercent","warningThreshold","Savings","totalSavings","cloneSavings","compressionSavings","dedupSavings","marginBottom","PoolHeadlineContainer","loadingPool","loadedPool","pool","headline_PoolHeadline","savingsFactor","avgLatencyMs","PoolHeadlineContainer_extends","poolSelector","getPerformanceDegradationBytes","bytes","CapacityChart_capacityChartOptions","_ref$includeSavingsSe","includeSavingsSeries","_ref$isLineChart","isLineChart","savingsSeries","totalUsageSeries","performanceDegradationCapacitySeries","CapacityChart","loadingPoolCapacity","loadedPoolCapacity","onDataReceived","capacityDataMetaInfo","prevPoolCapacity","fetchOptions","hasPoolCapacityData","capacity_CapacityChart_CapacityChart","CapacityChartContainer_extends","PoolCapacityContainer","PoolCapacityContainer_classCallCheck","PoolCapacityContainer_possibleConstructorReturn","capacity_CapacityChart","PoolCapacityContainer_extends","updateDisplayTimeRange","TIME_RANGE_DEFAULTS","ArrayPerformanceContainer","ArrayPerformanceContainer_classCallCheck","ArrayPerformanceContainer_possibleConstructorReturn","updateRangeModel","setDisplayTimeRange","rangeSelection","buildTargetLocation","search","serialize","lookback","translateGenericQueryTime","renderLegacyView","PerformanceView","handleRef","withRouter","PoolPerformanceContainer","_ref$selectedArray","selectedArray","performance_ArrayPerformanceContainer","topology","findObject","truncateTime","utc","startOf","getMilliSecs","defaultGetCorrespondingPoints","FORMAT_BYTE_PRECISION","OverviewCapacityChart","OverviewCapacityChart_classCallCheck","OverviewCapacityChart_possibleConstructorReturn","FORMAT_NUMBER_PRECISION","connectNulls","display","OverviewCapacityChart_ForecastChart","getChartConfig","FORMAT_NUMBER_NO_PRECISION","findMaxYaxisValue","arraysRecommendations","getDataKey","maxValueInData","PoolSaturationChart_toConsumableArray","arrayRec","dataPoint","usage","PoolSaturationChart","PoolSaturationChart_classCallCheck","PoolSaturationChart_possibleConstructorReturn","arrayRecommendations","usageSeries","arraySerialNumber","arrayHostName","showNotAvailableDataBands","isBefore","zones","ts","_this3","hasPoolCpuCacheData","PoolSaturationChart_Chart","cpu","showThresholdColors","rootElement","EventFlag","EventFlag_classCallCheck","EventFlag_possibleConstructorReturn","EventFlag_inherits","EventFlag_createClass","eventCollection","chartDomId","flagsData","eventDetails","previousValue","_element$getBoundingC","eventFlag","background","pageXOffset","createPortal","verbosity","EventsChart_classCallCheck","EventsChart_possibleConstructorReturn","eventFlagContainer","EventsChart_inherits","EventsChart_createClass","crosshair","eventsData","getEventsData","overview_EventFlag","OverviewContainer","OverviewContainer_classCallCheck","OverviewContainer_possibleConstructorReturn","OverviewContainer_inherits","OverviewContainer_createClass","loadingPoolOverview","loadedPoolOverview","getPoolChildArrays","$in","$lte","childArraySerialNumbers","poolOverview","showCacheChart","_computeUnionedTimeRa","startTimeStamps","endTimeStamps","moment_timezone_default","computeUnionedTimeRange","overview_EventsChart","overview_PoolSaturationChart","overview_OverviewCapacityChart","PoolOverviewContainer","OverviewContainer_extends","poolOverviewSelector","PoolDetailContainer","performanceTimeRange","capacityTimeRange","headline_PoolHeadlineContainer","overview","performance_PoolPerformanceContainer","capacity_PoolCapacityContainer","PoolDetailContainer_extends","PoolDetailContainer_PropTypes$shape","PoolDetailContainer_defineProperty","getGroups","GROUPS_LIST_FETCH","SUMMARY_TAB","SPACE_TAB","PERFORMANCE_TAB","PROTECTION_TAB","ListContainer","ListContainer_classCallCheck","ListContainer_possibleConstructorReturn","ListContainer_inherits","ListContainer_createClass","loadingGroups","loadedGroups","setDefaultFacetCategory","leftTitle","rightTitle","rightLabel","totalUsageBytes","ListContainer_extends","MONITOR_SUPPORT_TAB","list_ListContainer_classCallCheck","list_ListContainer_possibleConstructorReturn","list_ListContainer_inherits","list_ListContainer_createClass","resetArrayListStore","loadingArrays","loadingArraysCsv","userName","_getConfig","infrastructureConfig","Header","accessor","filterable","minWidth","COLUMN_WIDTHS","LARGE","Cell","_ref$original","original","infrastructure","includeIcon","objectType","MEDIUM","SMALL","_ref2$original","XSMALL","headerClassName","_ref5$original","ArrayHealth","_ref6","arrayTotalRawHddBytes","_ref7","arrayTotalRawSsdBytes","_ref8","_ref9","_ref10","_ref10$original","asupReceivedTime","_ref11","_ref11$original","formatDateTimeWithTimeZone","_ref12","_ref13","FORMAT_MOMENT_DATE_TIME","_ref14","parsedSupportStatus","ArraySupportStatus","_ref15","FORMAT_MOMENT_CALENDAR_DAY","getConfig","components_Table","tableId","defaultSorted","desc","getArraysCsv","ArraysContainer","list_ListContainer_extends","ArrayDetailPageTitle","_props$scope","link","DetailPageTitle_extends","rel","adjustment","external_link_default","productInterface","DetailPageTitle","DetailPageTitle_ArrayDetailPageTitle","DETAIL","VIEW_TYPES","CHART","TABLE","tier","scopingObjects","leafObjects","rootPath","getRootPath","NIMBLE","excludeTenant","buildUrlForCurrentTenant","isReady","isInventoryLoaded","config_defineProperty","_titles","genericQueryTypes","_genericQueryTypes","icons","config_extends","sitemap_default","_icons","server_default","th_default","folder_o_default","database_default","tag_default","routes","_routes","nav","objects","objectViews","scopes","VolumesList","VolumesCapacityChart","VolumesPerformanceChart","_objectViews","PoolsList","GroupsList","ArrayList","componentOverrides","ProductInterface","xsmall-column","noHeaderBorder","hidden","applications-container","showSearch","showFilters","showPaging","filterLabel","emptyLabel","fetchArrays","asups","parseSupportStatus","isAfter","networkCardInfo","extendWithTransformedArrayValues","asupsData","isHbDelayed","hardwareStatusComparator","ArrayHardwareStatus","latestHbSort","csv","responseType","saveAs","AsupStatus","HeartbeatStatus","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","moment_timezone__WEBPACK_IMPORTED_MODULE_2__","moment_timezone__WEBPACK_IMPORTED_MODULE_2___default","_infosight_elmer_dist_components_StatusIndicator__WEBPACK_IMPORTED_MODULE_3__","_infosight_elmer_dist_components_StatusIndicator__WEBPACK_IMPORTED_MODULE_3___default","_components_NimbleIcon__WEBPACK_IMPORTED_MODULE_4__","_util_formatter__WEBPACK_IMPORTED_MODULE_5__","_components_NimbleIcon_NimbleIcon__WEBPACK_IMPORTED_MODULE_6__","heartbeattimestamp","hasFanIssue","asupStatus","leftSpace","STATUS","controllerStatus","fanStatus","ICONS","ARRAY_CONTROLLER","ARRAY_FAN","ARRAY_POWER_SUPPLY","ARRAY_SSD","ARRAY_HDD","poolDetail","PROTECTION_TYPES","freeze","UNPROTECTED","LOCAL_ONLY","REMOTE","REPLICA_VOLUME","DataProtection","inline","displayProtectionLevel","RISK_CATEGORIES","AT_RISK_1","AT_RISK_2","NOT_SO_URGENT_1","NOT_SO_URGENT_2","NOT_SO_URGENT_3","NO_RISK","categorizeDaysUntilFull","colorClass","DaysUntilFull","daysCategory","VolumeStatus","volumePinned","volumeEncrypted","lock_default","check_circle_default","times_circle_default","thumb_tack_default","VolumeUsageInfo","common_DataProtection","common_DaysUntilFull","DaysUntilFull_categorizeDaysUntilFull","common_VolumeStatus","VolumeDataUsageInfo","flex-dir-column","flex-dir-row","menu","menu-item-container","menu-item","active","align-middle","sub-name","relationships","loadingRelationships","GROUP_POOL_FOLDER_RELATIONS_RESET","GROUP_POOL_FOLDER_RELATIONS_FETCH","objectRelationshipsSelector","capacityReport","objectRelationships","relationshipsByTypeSelector","ALL","byPool","byFolder","hasFoldersSelector","relation","folderName","_NimbleIcon__WEBPACK_IMPORTED_MODULE_0__","LIST_FETCH","SUMMARY_CARDS_FETCH","TREND_CARDS_FETCH","CSV_FETCH","SPACE_CATEGORY","PERFORMANCE_CATEGORY","BYTE_FORMAT_PRECISION","LATENCY_UNIT_ABBR","IOPS_UNIT_ABBR","PERCENT_ABBR","listValueFormatter","numeral__WEBPACK_IMPORTED_MODULE_0__","numeral__WEBPACK_IMPORTED_MODULE_0___default","unitAbbr","numeralValue","VOLUMES_LIST_FETCH","VOLUMES_CAPACITY_FETCH","VOLUMES_THROUGHPUT_FETCH","VOLUMES_LATENCY_FETCH","POOL_CPU_CACHE_FETCH","SCOPING_OBJECT_SIZE_FETCH","VOLUMES_CSV_FETCH","DEFAULT_TAB","loadedVolumesCapacity","performance","loadingPerformance","loadedPerformance","volumes","loadingVolumes","loadedVolumes","volumeCollection","dataSrc","API_BASE_URL","URI","__super__","accountSelection","podLocator","central","user","urlString","ALL_ACCOUNTS_ID","newApi","FETCH_SFDC_CONTACT","contactSelector","supportTab","core","Cocktail","patch","ModalRegion","locale","language","handleCommand","handleProgenyEvent","removeEvent","modalRegion","initializeLegacyControllers","getInstance","ajaxPrefilter","originalOptions","setRequestHeader","Date","getTimezoneOffset","savePreferences","currentPrefs","preferences","loadedPreferences","put","UserPreferencesController_disableDialog","UserPreferencesController_setNotification","UserPreferencesController_setNotifications","UserPreferencesController_acceptEula","UserPreferencesController_getNotification","UserPreferencesController_isDialogEnabled","UserPreferencesController_isEulaAccepted","UserPreferencesController_getPreferences","UserPreferencesController_onPreferencesLoaded","disableDialog","dialogId","DISABLE_DIALOG","progenyDisableDialog","setNotification","notification","SET_NOTIFICATION","progenySetNotification","progenySetNotifications","acceptEula","ACCEPT_EULA","progenyAcceptEula","progenyGetNotification","isDialogEnabled","progenyIsDialogEnabled","isEulaAccepted","progenyIsEulaAccepted","getPreferences","unsubscribe","subscribe","axiosInstance","axios","interceptors","use","BASE_URL","cookie","getTime","logOut","_classCallCheck","uri","q","_uri","slash","queries","boundaryArg","nimbleTenantSelection","tenantSelector","boundary","isNimbleBoundary","tenant","accountSegment","export","subviews","finalUrl","subView","endpoint","services_axios","delete","_len3","_key3","_len4","_key4","headers","X-HTTP-Method-Override","requestsArr","EXPERIMENTAL_MODE_CHANGED","SET_AUTHORIZATION_EVALUATOR","SET_TENANT","SET_CONFIG","SET_PROFILE","PRIVILEGES","PERMISSION_TARGET","nimbleTenantAdminAccess","nimbleTenantPrimaryAccess","nimbleThirdPartyPermissionRequestAccess","REALM_INTERNAL_NIMBLE","REALM_INTERNAL_HPE","SITE_ACCESS","SITE_ADMIN","SITE_SIGNED_NDA","DOCUMENTATION_KB_ARTICLE_READ","VIRTUAL_ARRAY_ACCESS","VIRTUAL_ARRAY_ADMIN","STORESERV_SYSTEM_GLOBAL","ADDRESS_ADMIN","PRODUCT_FAMILY_NIMBLE","PRODUCT_FAMILY_STORESERV","PRODUCT_FAMILY_STOREONCE","TENANT_ACCESS_MULTIPLE","ATTRIBUTE_NIMBLE_RESELLER","ATTRIBUTE_NIMBLE_SUPPORT_PROVIDER","SUPPORT_CASE","FEATURE_CORE_ACCESS","FEATURE_VMVISION_ACCESS","FEATURE_SUPPORT_CASE_MANAGE","ACCESS","ADMIN","PRIMARY","NIMBLE_TENANT","NIMBLE_SYSTEM","STOREFRONT_SYSTEM","STOREFRONT_SYSTEM_GROUP","GLOBAL_TARGET_ID","ACTIVE_TARGET_ID","permissions","privilege","targetType","targetId","$or","initializeHighcharts","_util_storeProvider__WEBPACK_IMPORTED_MODULE_0__","_reducer__WEBPACK_IMPORTED_MODULE_1__","evaluator","authorizationEvaluatorSelector","subtitle","muted","detail","savings-name","savings-value","underscore__WEBPACK_IMPORTED_MODULE_1__","getFormat","getVolumes","getTopN","_ref$timeRange","excludeForecast","rank","limit","orderBy","aggregateRemainder","_ref3$timeRange","viewType","getVolumesCsv","_actionsFor5","upgradePathsTpl","blacklistTooltipTpl","BulkLoadGridModel","upgradePathsTemplate","blacklistTooltipTemplate","truncateRelease","gridRegion","blacklistedReleases","targetRelease","orderData","blacklistEntries","blackListEntries","entry","reason","blackListReasons","publicTitle","bugNumber","publicDescription","publicWorkaround","renderBlackListEntry","orderable","upgradePaths","shortestUpgradePaths","renderTooltip","allowedReleaseStatus","pageLength","upgrade","tableTemplate","dataTableOptions","dom","columnDefs","onGridLoaded","$list","$morePaths","click","$link","slideToggle","appendTo","arrayDetail","poolContextSelector","poolContext","isLoadingSelector","_poolContextSelector","loadingTimeSeries","loadingFolders","loadingApplications","loadingSummary","topPoolsSelector","topPoolsTimeSeries","topPools","translated","Pool Name","groupLeaderHostName","groupLeaderSerialNumber","aliasPoolName","currentUsage","used","raw","supportReducer","types","replaceCases","_ref2$payload","caseData","commentsData","attachmentsData","rmaLabelsData","comments","attachments","rmaLabels","updateCaseDetails","attachment","caseId","ParentId","parentCase","newParentCase","addAttachmentToCase","comment","parentId","addCommentToCase","baseCasesSelector","cases","fetchCasesFailedSelector","caseListSelector","caseList","fetchBulletins","FETCH_BULLETINS","abrupt","_x","fetchActiveBulletins","fetchAllBulletins","_reducer__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","_util__WEBPACK_IMPORTED_MODULE_2__","COLORS","ArrayFan","_ref$width","_ref$height","viewBox","transform","ArrayPowerSupply","ArraySSD","ArrayHDD","ArrayController","cy","ImageIcon","srcIcon","altText","src","alt","APP_CATEGORY_ICONS","EXCHANGE","SHAREPOINT","VIRTUAL_SERVER","VIRTUAL_DESKTOP","FILE_SERVER","OTHER","MULTIPLE","NONE","UNASSIGNED","ORACLE","DB2","SQL_SERVER","SPACER","REMOTE_PROTECTION","LOCAL_PROTECTION","ARRAY_HEARTBEAT_UP","ARRAY_HEARTBEAT_DOWN","ARRAY_ASUP_UP","ARRAY_ASUP_DOWN","database","NimbleIcon_ImageIcon","SharePointIcon","VirtualServerIcon","VirtualDesktopIcon","FileServerIcon","OtherIcon","UnassignedIcon","LocalReplication","_ref16","RemoteReplica","_ref17","NimbleIcon_ArrayFan","_ref18","NimbleIcon_ArrayPowerSupply","_ref19","NimbleIcon_ArraySSD","_ref20","NimbleIcon_ArrayHDD","_ref21","NimbleIcon_ArrayController","_ref22","ArrayHeartbeatUp","_ref23","ArrayHeartbeatDown","_ref24","ArrayAsupUp","_ref25","ArrayAsupDown","_ref26","unusedReservePattern","FillPattern","svgPath","patterns","strokeWidth","strokeColor","ununsedReservedColor","dimensions","Donut","_possibleConstructorReturn","_inherits","_createClass","marginRight","defs","pie","dataLabels","center","showInLegend","innerSize","DonutTitle","isNaN","isFinite","isValidNumber","percentUsedClass","showCaret","DonutChart","DonutChart_classCallCheck","DonutChart_possibleConstructorReturn","chartData","legendConfig","iconClassName","DataUsageDonut_Donut","getSeriesInfo","DonutChart_DonutTitle","DataUsageDonutChart","createItemUpdateReducersForAction","matchKey","_getKeys","baseKey","valueKey","loadingKey","loadedKey","errorKey","getKeys","updatedCollection","matchIndex","findIndex","addressCollection","reducer_defineProperty","FETCH_ADDRESSES","FETCH_ASSETS","ADD_ADDRESS","EDIT_ADDRESS","SET_DELIVERY_PREFERENCE","VALIDATE_ADDRESS","addressSelector","assetSelector","SavingsDetail","savings","headline_SavingsDetail","isHeadline","WrapperComponent","KeyStatistic","Small","_numeral$format$split","_numeral$format$split2","PopoverTrigger_default","placement","renderOverlay","popperProps","authorizationEvaluator","profile","appBaseUrl","minWidthPixels","_ACTION_HANDLERS","configSelector","appBaseUrlSelector","permissionsSelector","hasSupportCase","authority","defaultColorSet","purpleLight","greenLight","orange","orangeLight","white","grey","legacyRed","legacyYellow","legacyGreen","legacyLightBlue","toSet","privateStore","store","getLoginPath","redirectToLogin","_infosight_elmer_dist_utils_url__WEBPACK_IMPORTED_MODULE_0__","_storeProvider__WEBPACK_IMPORTED_MODULE_1__","_modules_user_reducer__WEBPACK_IMPORTED_MODULE_2__","postLoginTarget","encodeURIComponent","targetPath","redirectUrl","NimbleLegacyContainer","createLegacyView","LegacyAppAwaiter","_Component2","ready","waitForLegacyApp","waiterId","clearTimeout","setTimeout","_infosight_elmer_dist_components_Spinner__WEBPACK_IMPORTED_MODULE_7__","spinnerTpl","SpinnerView","animateOnLoad","loadingMessage","triggerMethodFilter","modelOrCollection","fetchModel","useSpinner","onLoad","readyState","db","getOrCreateInstance","Dexie","stores","infrastructureInventory","addNotification","dismissNotification","newState","banners","notificationsSelector","globalNotifications","dismiss","GlobalBannerList","ROOT","buildObjectIndex","objectTypes","factories_extends","factories_defineProperty","PARENT_RELATIONSHIP","ASSOCIATIVE_RELATIONSHIP","defaultFetchInventoryCreator","actionType","getBoundary","productFamily","enableClientSideSearch","excludedTypesFromClientSideSearch","addObjectToIndex","addOwnerRelation","addAssociativeRelation","owner","ownee","associates","relativeId","relativeType","relative","dexie","where","bulkPut","entries","t1","fetchInventory","canAccessMultipleTenants","inventory_constants","actionCreators_fetchInventory","actionCreators_reset","inventory_reducer","inventoryLoadedSelector","defaultIsInventoryLoadedCreator","POOL_CAPACITY_TIME_SERIES_FETCH","TOP_POOLS_CAPACITY_TIME_SERIES_FETCH","POOL_CAPACITY_SUMMARY_FETCH","POOL_CAPACITY_FOLDERS_FETCH","POOL_CAPACITY_APPLICATIONS_FETCH","POOL_CAPACITY_RESET","FOLDER_CAPACITY_TIME_SERIES_FETCH","FOLDER_CAPACITY_SUMMARY_FETCH","FOLDER_CAPACITY_APPLICATIONS_FETCH","FOLDER_CAPACITY_RESET","POOL_CAPACITY_ARRAY_CAPACITY_FETCH","ARRAY_GROUP","DEFAULT_FOLDER","inset","summary","time-series","time-series-chart","top-pools","total-usage","folder-limit","system-config","rootStateSelector","nimble","moment_timezone__WEBPACK_IMPORTED_MODULE_1__","moment_timezone__WEBPACK_IMPORTED_MODULE_1___default","_constants__WEBPACK_IMPORTED_MODULE_2__","numeralFormattedValue","FORMAT_BYTE_TYPE","dateTimeValue","isUTC","momentObj","poolCollection","poolsCollectionSelector","pages","classnames_bind__WEBPACK_IMPORTED_MODULE_3__","classnames_bind__WEBPACK_IMPORTED_MODULE_3___default","NOT_AVAILABLE","networkString","divide","actionRegistry","idAttribute","company","assetId","assetStreet","assetCity","assetCountry","assetZip","assetState","supportStartDate","asupReceived","asupProcessed","assetShipDate","assetShipStatus","supportAgreement","capacity","free","expansionShelves","criticalEvents","urgentEvents","importantEvents","warningEvents","hasEvents","hbStatus","hbReceived","hbAge","upgradable","isDelayed","parseLatestHeartbeat","hasHardwareIssues","difference","hasHeartbeatWarning","hasAsupWarning","AccountSelection","AccountController","selectOneAccount","setTenant","isResellerEquivalent","LOAD_PREFERENCES","dialogs","acceptedEulas","_extends4","idx","upsertById","eula","preferencesSelector","pref","VOLUME_DETAIL_PROTECTION_FETCH","underscore__WEBPACK_IMPORTED_MODULE_0__","underscore__WEBPACK_IMPORTED_MODULE_0___default","chroma_js__WEBPACK_IMPORTED_MODULE_1__","chroma_js__WEBPACK_IMPORTED_MODULE_1___default","MAX_SCORE_PERCENTILE","MAX_SCORE","CLASSIFICATIONS","hideScore","COLOR_SCALE","hsv","log10","LN10","chartLabel","gridRowChartContainer","progressContainer","summaryCharts","paddedLegend","perspective-selector","optionTitle","show-more-button","OPTIONS","setLookback","setCustomRange","actualDataRange","tinycolor","details","previous","current","notes","excludeColors","flagConfig","groupCollection","BulletinsModal","bulletins","removeBulletins","_infosight_elmer_dist_components_Modal__WEBPACK_IMPORTED_MODULE_5__","hideModalOnPrimaryButtonClick","hideModalOnSecondaryButtonClick","primaryButtonContent","secondaryButtonContent","onClickPrimaryButton","onClickSecondaryButton","bodyClassName","footerClassName","closeModal","isStoreDriven","isOpen","hidePrimaryButton","bulletin","body","footer","FETCH_ALL_ARRAYS","accountsCollectionSelector","resellerArrays","FETCH","CHANGE_ROLE","DELETE","CREATE","loadAuthorizationEvaluator","getUserProfileApi","loadUser","_callee2","_context2","getUserProfile","LegacyApp","_x2","loadTenant","_callee3","_context3","getActiveTenant","_x3","loadConfig","_callee4","_context4","_x4","changeUserContext","UserContextChangeReason","ExperimentalMode","TreeView","treeData","createTree","onSelect","toggled","noDataMessage","react_treebeard","onToggle","onClickIcon","treebeardStyle","Caret","fa-caret-right","fa-caret-down","PoolNodeHeader","_ref$node","PoolNodeIcon","Pool_extends","PoolContainer","hasChildren","TreeView_Caret","invisible","Pool_PoolNodeIcon","Pool_PoolNodeHeader","SelectedPool","FolderNodeHeader","FolderNodeIcon","ArrayGroupNodeHeader","ArrayGroupContainer","ArrayGroup_ArrayGroupNodeHeader","_ref$decorators","decorators","poolNodeDecorators","Loading","Spinner_default","groupNodeDecorators","folderNodeDecorators","tree","JSON","stringify","objectRelationGraph","_visitors","visit","visitor","visitors","getVisitor","createObjectGraph_objectWithoutProperties","createObjectGraph_extends","createChildren","createNode","PoolFolderTreeView","PoolFolderTreeView_classCallCheck","PoolFolderTreeView_possibleConstructorReturn","base","groupId","groupUID","poolUID","folderId","folderUID","createObjectGraph","PoolFolderTreeViewDropdown_TreeView","Selection","PoolFolderTreeViewDropdown","PoolFolderTreeViewDropdown_classCallCheck","PoolFolderTreeViewDropdown_possibleConstructorReturn","menuClassName","Dropdown","valueRenderer","containers_Selection","onSelectAll","PoolFolderTreeViewDropdown_PoolFolderTreeView","getFolderId","getFolderCapacityTimeSeries","uriAddQuery","dispatchData","getFolderCapacitySummary","getFolderCapacityApplications","getFolderCapacity","resetFolderCapacity","itemMarginTop","itemMarginBottom","labelFormatter","byteToTibibyte","formatBytes","maxCapacityBytes","getByteFormat","PoolUsageChart","PoolUsageChart_classCallCheck","PoolUsageChart_possibleConstructorReturn","PoolUsageChart_inherits","PoolUsageChart_createClass","poolCapacityUsed","poolFree","poolUnusedReserve","poolUsedPct","text-align","font-size","font-family","FolderUsageChart","FolderUsageChart_classCallCheck","FolderUsageChart_possibleConstructorReturn","FolderUsageChart_inherits","FolderUsageChart_createClass","volumeUsage","snapshotUsage","unusedReserve","LegendItem","swatchClassName","FolderUsageBarChart","includeLimitCaret","freeSpace","percentage","limitPercent","volumePercent","snapshotPercent","unusedReservePercent","position","FolderUsageBarChart_LegendItem","getMaxTotalUsage","getSortedValues","totalUsed","Bar","calcPercent","aria-valuemax","aria-valuemin","aria-valuenow","Progress_Bar","StackedProgress","colors","bem","BEM","blockOrValues","bem_classCallCheck","block","modifier","_blockOrValues$chaina","chainable","constructorOptions","bem_extends","nextValue","cloneWith","ProgressWithValue","Popover","savings_SavingsDetail","SavingsBreakdownPopover","SavingsBreakdownPopover_objectWithoutProperties","OverlayTrigger_default","savings_Popover","applicationsConfig","maxTotalUsage","maxTotalPhysicalUsage","volumeCount","XLARGE","volumeUsed","Progress_ProgressWithValue","components_Progress_Progress","snapshotUsed","totalPhysicalUsed","growthPct90day","growthPct60day","growthPct30day","applicationsConfig_slicedToArray","savings_SavingsBreakdownPopover","ApplicationsTable","_applicationsConfig","syncUrl","foldersConfig","_ref3$original","folderLimit","components_Progress","_ref4$original","rightValue","isOverLimit","warning","percentFree","FoldersTable","sortedData","FoldersTable_extends","_foldersConfig","PoolsTable","PoolsTableView","enabledFieldSets","disableDefaultSort","VolumesTable","$eq","FolderCapacityTimeSeries","FolderCapacityTimeSeries_classCallCheck","FolderCapacityTimeSeries_possibleConstructorReturn","FolderCapacityTimeSeries_inherits","FolderCapacityTimeSeries_createClass","extremes","firstPoint","asupLocalDate","lastPoint","resetZoomButton","theme","axis","dataMax","plotLines","finalCapacity","latestLimit","yData","userOptions","limitSeries","mebibytes","convertMiBtoBytes","getPoints","that","PoolCapacityTimeSeries","PoolCapacityTimeSeries_classCallCheck","PoolCapacityTimeSeries_possibleConstructorReturn","PoolCapacityTimeSeries_inherits","PoolCapacityTimeSeries_createClass","maxCapacity","maxCapacitySeries","savingsTotal","PoolCapacityTimeSeries_Chart","leftJustifyPoints","TopPoolsCapacityTimeSeries","TopPoolsCapacityTimeSeries_classCallCheck","TopPoolsCapacityTimeSeries_possibleConstructorReturn","TopPoolsCapacityTimeSeries_inherits","TopPoolsCapacityTimeSeries_createClass","pools","TopPoolsCapacityTimeSeries_Chart","TotalUsage","totalUsage","growthPctLastWeek","_getValueAndUnit","_getValueAndUnit2","TotalUsage_slicedToArray","usedValue","_getValueAndUnit3","_getValueAndUnit4","capacityValue","precision","Volumes","totalAllocated","allocated","count","RecentIssues","recentIssuesCount","Trend","iconClass","fa-info","fa-check","fa-exclamation","text-success","text-danger","text-warning","text-primary","Trends","trends","Trends_extends","daysUntilFullText","dayEstimate","FolderTrends","fullCapacityReachDays","dayText","summary_Trends","FolderCapacity","FolderCapacity_classCallCheck","FolderCapacity_possibleConstructorReturn","applications","forceRenderTabPanel","TabClasses","TableHeader","usageDetailTable_ApplicationsTable","usageDetailTable_VolumesTable","totalSizeMB","folderUnusedReserve","summary_TotalUsage","components_usageSummaryCharts_FolderUsageBarChart","summary_FolderTrends","summary_Volumes","summary_RecentIssues","lookbackMonths","subtract","timeSeries_FolderCapacityTimeSeries","renderSummary","renderTimeSeries","renderTabs","folderContextSelector","folderContext","_folderContextSelecto","FolderCapacityContainer","getData","layout_FolderCapacity","FolderCapacityContainer_extends","poolURISegment","getTopPoolsCapacityTimeSeries","_ref$count","topnCount","getPoolCapacityTimeSeries","getAggregatedPoolCapacitySummary","getPoolCapacitySummary","getPoolCapacityFolders","folders","getPoolCapacityApplications","_actionsFor6","getArrayCapacity","_actionsFor7","getAggregatePoolCapacity","resetPoolCapacity","getExceedsTooltip","isHighlyLikely","dateString","getFoldersTooltip","foldersFull","numMonthString","PoolTrends","arrayCapacity","possiblyExceedsThreshold","probablyExceedsThreshold","unmanagedSnapshots","foldersFull1Month","foldersFull2Month","NimbleOSVersionLink","NimbleOSVersionLink_classCallCheck","NimbleOSVersionLink_possibleConstructorReturn","onClickVersion","PoolCapacity","PoolCapacity_classCallCheck","PoolCapacity_possibleConstructorReturn","isAggregate","showFolders","usageDetailTable_PoolsTable","usageDetailTable_FoldersTable","summary_PoolTrends","_props$arrayCapacity","components_NimbleOSVersionLink","summary_DaysUntilFull","renderTrends","renderShelfConfig","timeSeries_TopPoolsCapacityTimeSeries","timeSeries_PoolCapacityTimeSeries","loadingArrayCapacity","loadingTopPoolsTimeSeries","arraySearchableName","folderCount","groupUid","layout_PoolCapacity","fetchRelationships","resetRelationships","CapacityContainer_classCallCheck","CapacityContainer_possibleConstructorReturn","disableFilters","contentRegion","updateUrlParams","mergeParams","_props$match$params","resource","ChildContainer","hasFolders","components_PoolFolderTreeViewDropdown","updateFragmentForResource","onSelectMonthRange","findResource","renderFilters","renderChildContainer","Menu","isActive","option","boundOnClick","ComplexToggle","onclick","fa-caret-up","Dropdown_ComplexToggle","Dropdown_Toggle","onClickToggle","Dropdown_Menu","onClickMenuItem","ReactClickOutside","ComplexDropdown","ComplexDropdown_classCallCheck","ComplexDropdown_possibleConstructorReturn","Dropdown_ComplexDropdown","indexById","indexBy","fetchPools","getPoolsCsv","resetPoolCollection","loadingPools","loadingPoolsCsv","poolArrays","arrayList","snHost","objectList","listSuffix","percentFull","_ref8$original","_ref9$original","pinnableCacheCapacity","pinnedCacheCapacity","growthLast90Days","growthLast60Days","growthLast30Days","avgReadsPerWeek","avgWritesPerWeek","avgReadThroughput","avgWriteThroughput","_ref23$original","avgCpuUtilization","cpuUtilizationThreshold","_ref24$original","avgCacheMissRate","cacheMissThreshold","PoolsTableView_extends","pure","resetVolumeListStore","loadingVolumesCsv","sn","_ref7$original","sortable","filterMethod","filterValue","String","volumeCompression","_ref16$original","perWeekIopsRead","perWeekIopsWrite","cacheHit","_ref27","_ref28","lastSnapped","_ref29","lastReplicated","isCompressed","performancePolicy","ioPerWeek","volumeClone","replicationPartner","VolumesContainer","users","success","FlashNotification","login","u","rootSelector","legacyLink","header-container","time-range","pool-selector","all-pools","isReseller","ownsSelectedTenant","isPrimaryTenant","hasArrays","nimbleTotalSelector","ex","getAuthorizedTenantCount","_permissions$i","json","buildNimbleTenantUrl","nimbleResellerAuthorizationEvaluator","_util_storeProvider__WEBPACK_IMPORTED_MODULE_1__","_NimbleUserTenantHelpers__WEBPACK_IMPORTED_MODULE_2__","_user__WEBPACK_IMPORTED_MODULE_3__","tenantId","nimbleTenant","flat","indexedDescendants","inventory","inventorySelector","indexedSelector","it","loadedObjects","LocalGridModel","CollectionGridModel","RemoteGridModel","GridFilterView","GridSortCollection","RowSelectionMode","SINGLE","MULTI","dataTableExt","oApi","fnSetFilteringDelay","oSettings","iDelay","_that","iApiIndex","oTimerId","sPreviousSearch","anControl","fnSettings","aanFeatures","f","unbind","fnFilter","dataTable","searchData","counter","filterRegion","selectAllCheckbox","init.dt","draw.dt","xhr.dt","click tr:not(.child-row)","click @ui.selectAllCheckbox","click td.details-control","chooseColumns","childTemplate","rowSelectionMode","toolbar","initialized","highlightRowOnChange","applyOrdering","filterView","$table","isRemote","syntheticHeaderRowspan","class","defaultContent","applyColumnNames","applyColumnIndices","dataTableConfig","processing","serverSide","emptyTable","sortToDatatablesOrder","lengthMenu","drawCallback","groupByColumn","insertGroupingRows","createdRow","errorHandler","xhr","textStatus","textThrown","refreshModelData","refreshCollectionData","ajax","cachePipeline","onDataTableInit","$paginationElements","togglePaginationControls","$header","getDataTable","onDraw","updateSelectionForRowVisibilityChange","onRowClick","selectRow","$row","parents","prop","updateSelectAllCheckbox","onSelectAllClick","$input","$rows","is","$allRows","$visibleRows","$invisibleRows","getSelectedRowData","getSelectedRowsData","rows","eachRow","eq","refreshData","highlightRowsOnNextDraw","rowData","reload","onAjaxComplete","predicate","one","effect","conf","cacheLower","cacheUpper","cacheLastRequest","cacheLastJson","requestStart","requestLength","requestEnd","clearCache","isPlainObject","jqXHR","dataType","nodes","toggleChildRow","childModel","childCollection","tr","clickedRow","childRow","isShown","idAttr","_isRowIncluded","rawRows","dataIndex","FETCH_CASE_HEADERS_OK","FETCH_CASE_HEADERS_FAIL","FETCH_CASE_DETAIL_OK","FETCH_CASE_DETAIL_FAIL","FETCH_CASE_COMMENTS_OK","FETCH_CASE_COMMENTS_FAIL","FETCH_CASE_ATTACHMENTS_OK","FETCH_CASE_ATTACHMENTS_FAIL","FETCH_CASE_RMALABELS_OK","FETCH_CASE_RMALABELS_FAIL","POST_CASE_OK","POST_CASE_COMMENT_OK","POST_CASE_COMMENT_FAIL","POST_CASE_ATTACHMENT_OK","POST_CASE_ATTACHMENT_FAIL","POST_CASE_RESOLUTION_OK","POST_CASE_RESOLUTION_FAIL","FILTER_CASE_STATUS","FILTER_CASE_PRIORITY","FILTER_CASE_PARAMS","FETCH_SUGGESTED_TERMS_OK","FETCH_SUGGESTED_TERMS_FAIL","SEARCH_KCS_SOLUTIONS_OK","SEARCH_KCS_SOLUTIONS_FAIL","FETCH_KCS_SOLUTION_OK","FETCH_KCS_SOLUTION_FAIL","FETCH_KCS_RELATED_SOLUTIONS_OK","FETCH_KCS_RELATED_SOLUTIONS_FAIL","FETCH_KCS_SUPPORTED_METHODS_OK","FETCH_KCS_SUPPORTED_METHODS_FAIL","p"],"mappings":"wIAAA,IAAAA,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA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","file":"1-5dd62fa9396b1f21ca44.js","sourcesContent":["var map = {\n\t\"./af\": 447,\n\t\"./af.js\": 447,\n\t\"./ar\": 448,\n\t\"./ar-dz\": 449,\n\t\"./ar-dz.js\": 449,\n\t\"./ar-kw\": 450,\n\t\"./ar-kw.js\": 450,\n\t\"./ar-ly\": 451,\n\t\"./ar-ly.js\": 451,\n\t\"./ar-ma\": 452,\n\t\"./ar-ma.js\": 452,\n\t\"./ar-sa\": 453,\n\t\"./ar-sa.js\": 453,\n\t\"./ar-tn\": 454,\n\t\"./ar-tn.js\": 454,\n\t\"./ar.js\": 448,\n\t\"./az\": 455,\n\t\"./az.js\": 455,\n\t\"./be\": 456,\n\t\"./be.js\": 456,\n\t\"./bg\": 457,\n\t\"./bg.js\": 457,\n\t\"./bn\": 458,\n\t\"./bn.js\": 458,\n\t\"./bo\": 459,\n\t\"./bo.js\": 459,\n\t\"./br\": 460,\n\t\"./br.js\": 460,\n\t\"./bs\": 461,\n\t\"./bs.js\": 461,\n\t\"./ca\": 462,\n\t\"./ca.js\": 462,\n\t\"./cs\": 463,\n\t\"./cs.js\": 463,\n\t\"./cv\": 464,\n\t\"./cv.js\": 464,\n\t\"./cy\": 465,\n\t\"./cy.js\": 465,\n\t\"./da\": 466,\n\t\"./da.js\": 466,\n\t\"./de\": 467,\n\t\"./de-at\": 468,\n\t\"./de-at.js\": 468,\n\t\"./de-ch\": 469,\n\t\"./de-ch.js\": 469,\n\t\"./de.js\": 467,\n\t\"./dv\": 470,\n\t\"./dv.js\": 470,\n\t\"./el\": 471,\n\t\"./el.js\": 471,\n\t\"./en-au\": 472,\n\t\"./en-au.js\": 472,\n\t\"./en-ca\": 473,\n\t\"./en-ca.js\": 473,\n\t\"./en-gb\": 474,\n\t\"./en-gb.js\": 474,\n\t\"./en-ie\": 475,\n\t\"./en-ie.js\": 475,\n\t\"./en-nz\": 476,\n\t\"./en-nz.js\": 476,\n\t\"./eo\": 477,\n\t\"./eo.js\": 477,\n\t\"./es\": 478,\n\t\"./es-do\": 479,\n\t\"./es-do.js\": 479,\n\t\"./es.js\": 478,\n\t\"./et\": 480,\n\t\"./et.js\": 480,\n\t\"./eu\": 481,\n\t\"./eu.js\": 481,\n\t\"./fa\": 482,\n\t\"./fa.js\": 482,\n\t\"./fi\": 483,\n\t\"./fi.js\": 483,\n\t\"./fo\": 484,\n\t\"./fo.js\": 484,\n\t\"./fr\": 485,\n\t\"./fr-ca\": 486,\n\t\"./fr-ca.js\": 486,\n\t\"./fr-ch\": 487,\n\t\"./fr-ch.js\": 487,\n\t\"./fr.js\": 485,\n\t\"./fy\": 488,\n\t\"./fy.js\": 488,\n\t\"./gd\": 489,\n\t\"./gd.js\": 489,\n\t\"./gl\": 490,\n\t\"./gl.js\": 490,\n\t\"./gom-latn\": 491,\n\t\"./gom-latn.js\": 491,\n\t\"./he\": 492,\n\t\"./he.js\": 492,\n\t\"./hi\": 493,\n\t\"./hi.js\": 493,\n\t\"./hr\": 494,\n\t\"./hr.js\": 494,\n\t\"./hu\": 495,\n\t\"./hu.js\": 495,\n\t\"./hy-am\": 496,\n\t\"./hy-am.js\": 496,\n\t\"./id\": 497,\n\t\"./id.js\": 497,\n\t\"./is\": 498,\n\t\"./is.js\": 498,\n\t\"./it\": 499,\n\t\"./it.js\": 499,\n\t\"./ja\": 500,\n\t\"./ja.js\": 500,\n\t\"./jv\": 501,\n\t\"./jv.js\": 501,\n\t\"./ka\": 502,\n\t\"./ka.js\": 502,\n\t\"./kk\": 503,\n\t\"./kk.js\": 503,\n\t\"./km\": 504,\n\t\"./km.js\": 504,\n\t\"./kn\": 505,\n\t\"./kn.js\": 505,\n\t\"./ko\": 506,\n\t\"./ko.js\": 506,\n\t\"./ky\": 507,\n\t\"./ky.js\": 507,\n\t\"./lb\": 508,\n\t\"./lb.js\": 508,\n\t\"./lo\": 509,\n\t\"./lo.js\": 509,\n\t\"./lt\": 510,\n\t\"./lt.js\": 510,\n\t\"./lv\": 511,\n\t\"./lv.js\": 511,\n\t\"./me\": 512,\n\t\"./me.js\": 512,\n\t\"./mi\": 513,\n\t\"./mi.js\": 513,\n\t\"./mk\": 514,\n\t\"./mk.js\": 514,\n\t\"./ml\": 515,\n\t\"./ml.js\": 515,\n\t\"./mr\": 516,\n\t\"./mr.js\": 516,\n\t\"./ms\": 517,\n\t\"./ms-my\": 518,\n\t\"./ms-my.js\": 518,\n\t\"./ms.js\": 517,\n\t\"./my\": 519,\n\t\"./my.js\": 519,\n\t\"./nb\": 520,\n\t\"./nb.js\": 520,\n\t\"./ne\": 521,\n\t\"./ne.js\": 521,\n\t\"./nl\": 522,\n\t\"./nl-be\": 523,\n\t\"./nl-be.js\": 523,\n\t\"./nl.js\": 522,\n\t\"./nn\": 524,\n\t\"./nn.js\": 524,\n\t\"./pa-in\": 525,\n\t\"./pa-in.js\": 525,\n\t\"./pl\": 526,\n\t\"./pl.js\": 526,\n\t\"./pt\": 527,\n\t\"./pt-br\": 528,\n\t\"./pt-br.js\": 528,\n\t\"./pt.js\": 527,\n\t\"./ro\": 529,\n\t\"./ro.js\": 529,\n\t\"./ru\": 530,\n\t\"./ru.js\": 530,\n\t\"./sd\": 531,\n\t\"./sd.js\": 531,\n\t\"./se\": 532,\n\t\"./se.js\": 532,\n\t\"./si\": 533,\n\t\"./si.js\": 533,\n\t\"./sk\": 534,\n\t\"./sk.js\": 534,\n\t\"./sl\": 535,\n\t\"./sl.js\": 535,\n\t\"./sq\": 536,\n\t\"./sq.js\": 536,\n\t\"./sr\": 537,\n\t\"./sr-cyrl\": 538,\n\t\"./sr-cyrl.js\": 538,\n\t\"./sr.js\": 537,\n\t\"./ss\": 539,\n\t\"./ss.js\": 539,\n\t\"./sv\": 540,\n\t\"./sv.js\": 540,\n\t\"./sw\": 541,\n\t\"./sw.js\": 541,\n\t\"./ta\": 542,\n\t\"./ta.js\": 542,\n\t\"./te\": 543,\n\t\"./te.js\": 543,\n\t\"./tet\": 544,\n\t\"./tet.js\": 544,\n\t\"./th\": 545,\n\t\"./th.js\": 545,\n\t\"./tl-ph\": 546,\n\t\"./tl-ph.js\": 546,\n\t\"./tlh\": 547,\n\t\"./tlh.js\": 547,\n\t\"./tr\": 548,\n\t\"./tr.js\": 548,\n\t\"./tzl\": 549,\n\t\"./tzl.js\": 549,\n\t\"./tzm\": 550,\n\t\"./tzm-latn\": 551,\n\t\"./tzm-latn.js\": 551,\n\t\"./tzm.js\": 550,\n\t\"./uk\": 552,\n\t\"./uk.js\": 552,\n\t\"./ur\": 553,\n\t\"./ur.js\": 553,\n\t\"./uz\": 554,\n\t\"./uz-latn\": 555,\n\t\"./uz-latn.js\": 555,\n\t\"./uz.js\": 554,\n\t\"./vi\": 556,\n\t\"./vi.js\": 556,\n\t\"./x-pseudo\": 557,\n\t\"./x-pseudo.js\": 557,\n\t\"./yo\": 558,\n\t\"./yo.js\": 558,\n\t\"./zh-cn\": 559,\n\t\"./zh-cn.js\": 559,\n\t\"./zh-hk\": 560,\n\t\"./zh-hk.js\": 560,\n\t\"./zh-tw\": 561,\n\t\"./zh-tw.js\": 561\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1017;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"legend__3lkS-\",\"legend-name\":\"legend-name__2cwoB\",\"legend-value\":\"legend-value__3GbBY\",\"legend-unit\":\"legend-unit__3UYll\",\"striped\":\"striped__3_uD-\",\"bar-chart\":\"bar-chart__3yArz\",\"bar\":\"bar__1C2iC\",\"caret\":\"caret__ydg5R\",\"swatch\":\"swatch__27udP\",\"is-zero\":\"is-zero__XT4q9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon__1z2PV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superscript\":\"superscript__Vzdfq\",\"off\":\"off__IQbVm\"};","import moment from 'moment-timezone';\nimport { find } from 'underscore';\n\n/**\n * Based on com.nimblestorage.infosight.dao.query.TimeAggregation\n */\nconst GRANULARITIES = [\n    moment.duration(1, 'minute'),\n    moment.duration(2, 'minutes'),\n    moment.duration(5, 'minutes'),\n    moment.duration(10, 'minutes'),\n    moment.duration(15, 'minutes'),\n    moment.duration(30, 'minutes'),\n    moment.duration(1, 'hour'),\n    moment.duration(2, 'hours'),\n    moment.duration(4, 'hours'),\n    moment.duration(8, 'hours'),\n    moment.duration(12, 'hours'),\n    moment.duration(1, 'day'),\n];\n\nconst byIso8601Duration = GRANULARITIES.reduce((memo, g) => ({ ...memo, [g.toJSON()]: g }), {});\n\nexport function findGranularity(iso8601Duration) {\n    return byIso8601Duration[iso8601Duration];\n}\n\n/**\n * Determine the granularity that would produce no more than a specific number of samples\n * @param startTime\n * @param endTime\n * @param {Number} maxSamples\n * @return {moment.duration}\n */\nexport function determineGranularityFromSampleCount(startTime, endTime, maxSamples) {\n    if (!startTime || (startTime.isValid && !startTime.isValid())) {\n        return undefined;\n    }\n\n    if (!endTime || (endTime.isValid && !endTime.isValid())) {\n        return undefined;\n    }\n\n    const chartRange = moment(endTime).diff(moment(startTime));\n    return find(GRANULARITIES, pointSize => chartRange / pointSize.asMilliseconds() <= maxSamples);\n}\n\n/**\n *\n * @param startTime\n * @param endTime\n * @param {Number} pointWidthPixels\n * @param {Number} plotAreaWidthPixels\n * @return {moment.duration}\n */\nexport function determineGranularityFromDimensions(startTime,\n    endTime,\n    pointWidthPixels = 1,\n    plotAreaWidthPixels = 900) {\n    const maxSamples = Math.floor(plotAreaWidthPixels / pointWidthPixels);\n    return determineGranularityFromSampleCount(startTime, endTime, maxSamples);\n}\n","const getPayload = response => response.data;\n/**\n * The shape of the axios response object combined with the GQ response can get confusing:\n * response\n *  data\n *      data\n *      meta\n *  headers\n *  ...\n *\n *  This immutably replaces the response.data.data with the the data param\n * @param response\n * @param data\n */\nconst replacePayloadData = (response, data) => ({\n    ...response,\n    data: {\n        ...response.data, data,\n    },\n});\n\n/**\n * Replace response.data.data with null if response.data.data is empty\n * @param response\n */\nconst firstOrNullTransform = (response) => {\n    const payload = getPayload(response);\n    const newData = payload.data.length ? payload.data[0] : null;\n    return replacePayloadData(response, newData);\n};\n\n/**\n * Return response.data.data[0] OR null when response.data.data is empty\n * @param response\n */\nexport function firstOrNullData(response) {\n    return firstOrNullTransform(response).data.data;\n}\n\n/**\n * Return response.data OR null when response.data.data is empty\n * @param response\n */\nexport function firstOrNull(response) {\n    const { data } = firstOrNullTransform(response);\n    return data.data ? data : null;\n}\n","import {\n    determineGranularityFromDimensions,\n    findGranularity,\n    determineGranularityFromSampleCount,\n} from './granularities';\n\nimport { firstOrNull, firstOrNullData } from './responseTransformers';\n\nexport {\n    determineGranularityFromDimensions,\n    findGranularity,\n    determineGranularityFromSampleCount,\n    firstOrNull,\n    firstOrNullData,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trend\":\"trend__2LbRN\",\"popover-link\":\"popover-link__7NsV9\",\"tooltip\":\"tooltip__2uiVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"donut\":\"donut__2AGSe\",\"donut-pie\":\"donut-pie__3uZQR\",\"donut-title\":\"donut-title__15p66\",\"percentUsed\":\"percentUsed__20Zi2\",\"percentUsedWarning\":\"percentUsedWarning__1AaAe\",\"percentageGrowth\":\"percentageGrowth__3HxTl\",\"strongText\":\"strongText__173py\",\"striped\":\"striped__EtXfi\"};","module.exports = \"<% if (displayAsModal) { %>\\n<div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            <h4 class=\\\"modal-title\\\">Software Upgrades</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n<% } else { %>\\n        <div style=\\\"width: 100%;\\\">\\n<% } %>\\n            <div class=\\\"header\\\">\\n                <dl>\\n                    <dt>Current Version</dt>\\n                    <dd><%= version %></dd>\\n\\n                </dl>\\n                <fieldset class=\\\"software-upgrades-legend\\\" style=\\\"display: none;\\\">\\n                    <legend>Legend</legend>\\n                    <span class=\\\"blacklisted-release\\\"><span class=\\\"blacklisted-icon fa fa-circle\\\"></span>= Blacklisted</span>\\n                </fieldset>\\n            </div>\\n\\n            <div class=\\\"grid-region\\\"></div>\\n            <div id=\\\"upgrades-grid-container\\\">\\n            </div>\\n        </div>\\n<% if (displayAsModal) { %>\\n    </div>\\n</div>\\n<% } %>\\n<script class=\\\"grid-content\\\" type=\\\"text/template\\\">\\n    <table class=\\\"table table-striped table-bordered responsive\\\" style=\\\"width: 100%;\\\">\\n        <thead>\\n            <tr>\\n                <th>Major Release</th>\\n                <th title=\\\"\\\">Release</th>\\n                <th title=\\\"\\\">Release Status</th>\\n                <th title=\\\"\\\">Upgrade Path</th>\\n            </tr>\\n        </thead>\\n        <tbody></tbody>\\n    </table>\\n</script>\\n\"","module.exports = \"<ul class=\\\"upgrade-paths\\\">\\n<% \\n_.each(upgradePaths, function(upgradePath) {\\n    upgradePath.releases[0] = \\\"Current\\\";\\n    upgradePath.releases.push(targetRelease);\\n%>\\n    <li>\\n        <ol class=\\\"upgrade-path\\\">\\n            <% _.each(upgradePath.releases, function(release) { %>\\n                <li>\\n                <% if (blacklistedReleases[release]) { %>\\n                    <span class='blacklisted-release'>\\n                    <span class='blacklisted-icon fa fa-circle'></span><%= truncateRelease(release)%><%\\n                } else {\\n                    %><span><%= truncateRelease(release) %><%\\n                }\\n                    %></span>\\n                </li>\\n            <% }); %>\\n        </ol>\\n    </li>\\n<% }); %>\\n</ul>\"","module.exports = \"The current configuration of array <b><%= array %></b> prevents upgrade to release <b><%= release %></b>.\\n<p>Please contact Nimble Support for assistance.</p>\"","// A lightweight DataTables renderer to style the pagination controls.\n// See https://datatables.net/reference/option/renderer\n// See https://github.com/DataTables/Dist-DataTables-Foundation/blob/master/js/dataTables.foundation.js\n\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport 'datatables.net';\nimport $ from 'jquery';\n\n// eslint-disable-next-line prefer-destructuring\nconst DataTable = $.fn.DataTable;\n\n$.extend(DataTable.ext.classes, {\n    sWrapper: 'dataTables_wrapper dt-foundation',\n    sProcessing: 'dataTables_processing panel callout',\n});\n\n$.extend(true, DataTable.defaults, {\n    renderer: 'infosight',\n});\n\nfunction preventDefault(func) {\n    return (event) => {\n        event.preventDefault();\n        func();\n    };\n}\n\n// This is largely a copy/paste from elmer/dist/components/Pagination\n// Consider refactoring elmer/dist/components/Pagination into PaginationContainer and Pagination, reusing the latter here.\n// We don't need all the state management in the current elmer/dist/components/Pagination component, just the presentation.\n\nconst Pagination = ({ start, end, total, onPrevious, onNext }) => (\n    <div className=\"elmer-Pagination\">\n        <span className=\"elmer-Pagination__range\">\n            <strong>{start} - {end}</strong>\n            <span className=\"elmer-Pagination__count\"> of {total}</span>\n        </span>\n        <ul className=\"pagination\" role=\"navigation\" aria-label=\"Pagination\">\n            <li className=\"pagination-previous\">\n                <a\n                    className={classnames({ disabled: start === 1 })}\n                    href=\"#previous\"\n                    onClick={preventDefault(onPrevious)}\n                    aria-label=\"Previous page\"\n                >\n                    <i className=\"fa fa-angle-left\" aria-hidden=\"true\" />\n                </a>\n            </li>\n            <li className=\"pagination-next\">\n                <a\n                    className={classnames({ disabled: end === total })}\n                    href=\"#next\"\n                    onClick={preventDefault(onNext)}\n                    aria-label=\"Next page\"\n                >\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\" />\n                </a>\n            </li>\n        </ul>\n    </div>\n);\n\nPagination.propTypes = {\n    onPrevious: PropTypes.func.isRequired,\n    onNext: PropTypes.func.isRequired,\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n};\n\n\nDataTable.ext.renderer.pageButton.infosight = (settings, host) => {\n    const api = new DataTable.Api(settings);\n    const pageInfo = api.page.info();\n    pageInfo.start += 1;\n    pageInfo.total = pageInfo.recordsDisplay;\n\n    ReactDOM.render(\n        <Pagination\n            {...pageInfo}\n            onPrevious={() => api.page('previous').draw('page')}\n            onNext={() => api.page('next').draw('page')}\n        />,\n        host);\n};\n","var _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar GridFilterModel = require('./GridFilterModel');\nvar tpl = require('raw-loader!./GridFilterView.html');\nvar $ = require('jquery');\nrequire('multiple-select');\nrequire('multiple-select/multiple-select.css');\n\nmodule.exports = Marionette.ItemView.extend({\n\n    template: _.template(tpl),\n\n    className: 'filter-widget',\n\n    ui: {\n        toggleFiltersLink: '.toggle-filters-link',\n        filterWrapper: '.grid-filter-wrapper',\n        clearFiltersLink: '.clear-filters',\n        filterSection: '.grid-filter-section',\n    },\n\n    events: {\n        'click @ui.toggleFiltersLink': 'toggleFilters',\n        'click @ui.clearFiltersLink': 'clearFilters',\n    },\n\n    modelEvents: {\n        'change': 'onChange',\n    },\n\n    gridInitialized: false,\n\n    initialize: function (options) {\n        this.columnIndexMap = {};\n        this.grid = options.grid;\n        console.assert(this.grid, 'grid option is required');\n\n        this.model = options.grid.options.filterModel || new GridFilterModel();\n\n        this.grid.filterValueHasMatchingRowsByColumn = {};\n        this.grid.unfilteredRowCache = [];\n        this.grid.filteredRowCache = [];\n\n        this.listenTo(this.grid, 'init', this.createFilters);\n        this.listenTo(this.grid, 'reload', this.createFilters);\n    },\n\n    onRender: function () {\n        this.$el.hide();\n        this.ui.clearFiltersLink.toggle(!_(this.model.values()).every(x => (_.isNull(x) || _.isEmpty(x))));\n    },\n\n    resetMultiselectFilters: function () {\n        this.grid.filteredRowCache = [];\n        this.grid.unfilteredRowCache = [];\n    },\n\n    createFilters: function () {\n        this.ui.filterSection.empty();\n\n        _(this.grid.getDataTableApi().settings().init().columns).each(this.createFilter.bind(this));\n\n        this.$el.toggle(!_.isEmpty(this.model.attributes));\n\n        this.gridInitialized = true;\n\n        this.ui.clearFiltersLink.toggle(!_(this.model.values()).every(x => (_.isNull(x) || _.isEmpty(x))));\n    },\n\n    createFilter: function (columnDef, columnIndex) {\n        var api = this.grid.getDataTableApi();\n\n        if (columnDef.filter) {\n            var column = api.column(columnIndex);\n            var columnDisplayName = $(column.header()).html();\n            var columnName = columnDef.name;\n\n            var filterValues;\n            if (!columnDef.filter.splitValueOn) {\n                filterValues = column.cache('search').unique().toArray();\n            } else {\n                filterValues = column.cache('search').unique().toArray().reduce(function (arr, val) {\n                    return arr.concat(val.split(',').map(function (str) {\n                        return str.trim();\n                    }));\n                }, []);\n            }\n\n            var uniqueVals = _.union(\n                filterValues,\n                [this.model.get(columnName)],  // Always include preset filter value\n            ).filter(function (val) {\n                if (typeof val === 'string') {\n                    return val != null && val.trim();\n                } else {\n                    return val != null;\n                }\n            }).sort(function (s1, s2) {\n                return s2.toUpperCase().localeCompare(s1.toUpperCase());\n            });\n\n            if (_.isEmpty(uniqueVals)) {\n                return;\n            }\n\n            var label = $('<label><span>' + columnDisplayName + ':</span></label>');\n            var select = $('<select/>')\n                .attr('data-column-name', columnName);\n\n            for (var i = 0, len = uniqueVals.length; i < len; i++) {\n                var val = uniqueVals[i];\n                select.append('<option value=\"' + val + '\">' + val + '</option>');\n            }\n\n            this.ui.filterSection\n                .append($('<div class=\"filter-component\"/>')\n                    .append(label)\n                    .append(select),\n                );\n\n            if (!this.model.get(columnName)) {\n                this.model.set(columnName, null);\n            }\n\n            const self = this;\n\n            if (columnDef.filter.multipleSelect) {\n\n                var filterClearOption = function () {\n                    Object.keys(self.grid.filterValueHasMatchingRowsByColumn).forEach(function (columnName) {\n                        // If there are no selections made -- disable \"Clear Filter\"\n                        var $clearEl = $('select[data-column-name=\"' + columnName + '\"] + .ms-parent .ms-drop input[data-name=\"selectAll\"]');\n                        var filterSet = $('select[data-column-name=\"' + columnName + '\"]').multipleSelect('getSelects').length;\n                        if (filterSet) {\n                            $clearEl\n                                .attr('disabled', null)\n                                .parent('label').css('color', '');\n                        } else {\n                            $clearEl\n                                .attr('disabled', 'disabled')\n                                .parent('label').css('color', '#DDDDDD');\n                        }\n                    });\n                };\n\n                var filterColumnOptionsByOtherColumns = function (currentColumnName) {\n                    var columns = api.settings().init().columns;\n\n                    // start marking all values for all rows disabled\n                    for (var unfilteredRow of self.grid.unfilteredRowCache) {\n                        for (var column of columns) {\n                            var cn = column.name;\n                            if (self.grid.filterValueHasMatchingRowsByColumn[cn] === undefined) {\n                                self.grid.filterValueHasMatchingRowsByColumn[cn] = {};\n                            }\n\n                            var rv = unfilteredRow[column.index];\n                            if (column.filter && column.filter.splitValueOn) {\n                                _(rv.split(column.filter.splitValueOn))\n                                    .forEach(function (x) {\n                                        self.grid.filterValueHasMatchingRowsByColumn[cn][x.trim()] = { row: unfilteredRow, enabled: false };\n                                    });\n                            } else {\n                                self.grid.filterValueHasMatchingRowsByColumn[cn][rv] = { row: unfilteredRow, enabled: false };\n                            }\n                        }\n                    }\n\n                    // now marking all values for all INCLUDED rows ENabled\n                    for (var filteredRow of self.grid.filteredRowCache) {\n                        for (column of columns) {\n                            cn = column.name;\n                            rv = filteredRow[column.index];\n\n                            if (column.filter && column.filter.splitValueOn) {\n                                _(rv.split(column.filter.splitValueOn))\n                                    .forEach(function (x) {\n                                        self.grid.filterValueHasMatchingRowsByColumn[cn][x.trim()] = { row: filteredRow, enabled: true };\n                                    });\n                            } else {\n                                self.grid.filterValueHasMatchingRowsByColumn[cn][rv] = { row: filteredRow, enabled: true };\n                            }\n                        }\n                    }\n\n                    Object.keys(self.grid.filterValueHasMatchingRowsByColumn).forEach(function (columnName) {\n                        var col = self.grid.filterValueHasMatchingRowsByColumn[columnName];\n                        Object.keys(col).forEach(function (value) {\n                            var filterResult = col[value];\n                            var $el = $('select[data-column-name=\"' + columnName + '\"] + .ms-parent .ms-drop input[value=\"' + value + '\"]');\n\n                            //  re-run the filter logic with this column skipped (last argument)\n                            var filterWithoutCurrentColumn = self.filterLogic(null, null, filterResult.row, columnName);\n\n                            if (filterResult.enabled !== false || filterWithoutCurrentColumn) {\n                                $el\n                                    .attr('disabled', null)\n                                    .parent('label').css('color', '');\n                            } else {\n                                $el\n                                    .attr('disabled', 'disabled')\n                                    .parent('label').css('color', '#DDDDDD');\n                            }\n                        });\n                    });\n                };\n\n                $(select)\n                    .multipleSelect({\n                        width: '200px',\n                        selectAll: true,\n                        selectAllText: 'Clear Filter',\n                        allSelected: '',\n                        onCheckAll: function (x) {\n                            $(select).multipleSelect('uncheckAll');\n                        },\n                        onUncheckAll: function (x) {\n                            self.model.set(columnName, $(select).multipleSelect('getSelects'));\n                            filterClearOption();\n                        },\n                        onClick: function (x) {\n                            self.resetMultiselectFilters();\n                            self.model.set(columnName, x.instance.getSelects());\n                            filterClearOption();\n                        },\n                        onOpen: function () {\n                            filterColumnOptionsByOtherColumns(columnName);\n                            filterClearOption();\n                        },\n                    });\n\n                $(select).multipleSelect('uncheckAll');\n            } else {\n                this.addBinding(null, 'select[data-column-name=\"' + columnName + '\"]', {\n                    observe: columnName,\n                    selectOptions: {\n                        collection: uniqueVals, //_.object(uniqueVals, uniqueVals),\n                        defaultOption: {\n                            label: '',\n                            value: null,\n                        },\n                    },\n                });\n\n            }\n\n        }\n    },\n\n    toggleFilters: function () {\n        this.ui.toggleFiltersLink.find('.fa').toggleClass('fa-caret-right fa-caret-down');\n        this.ui.filterWrapper.toggle();\n    },\n\n    clearFilters: function () {\n        this.model.clearValues();\n\n        var columns = this.grid.getDataTableApi().settings().init().columns;\n        for (var column of columns) {\n            if (column.filter && column.filter.multipleSelect) {\n                $($('.filter-component select')[column.index]).multipleSelect('uncheckAll');\n            }\n        }\n\n        this.ui.clearFiltersLink.hide();\n    },\n\n    onChange: function () {\n        this.ui.clearFiltersLink.toggle(!_(this.model.values()).every(x => (_.isNull(x) || _.isEmpty(x))));\n\n        if (!this.gridInitialized) {\n            return;\n        }\n\n        // Will trigger a re-evaluation of our fn.dataTable.ext.search plugin for every row in the table\n        // Which will (eventually) call back into this::isRowIncluded() SEE BELOW\n        this.grid.redraw();\n    },\n\n    filterLogic: function (rowIndex, rowObject, rowSearchData, ignoreColumnName) {\n        var columns = this.grid.getDataTableApi().settings().init().columns;\n\n        for (var column of columns) {\n            var columnName = column.name;\n\n            // multiselect option filtering requires being able to skip over the currently open column filter\n            if (columnName == ignoreColumnName) {\n                continue;\n            }\n\n            // the value for this field in the current row\n            var rowValue = rowSearchData[column.index];\n\n            // the value that is allowed (ie what the filter is set to for this column)\n            var allowedValue = this.model.get(columnName);\n            if (allowedValue == null) {\n                // The filter is not set for this attribute, all values are allowed\n                continue;\n            }\n\n            var columnFilterOptions = column.filter;\n            if (columnFilterOptions && columnFilterOptions.splitValueOn) {\n                if (typeof allowedValue === 'object') {\n                    if (allowedValue.length === 0) {\n                        continue;\n                    }\n                    let list = _(rowValue.split(columnFilterOptions.splitValueOn))\n                        .chain()\n                        .map(function (x) {\n                            return x.trim();\n                        })\n                        .value();\n\n                    if (!list.some(function (v) {\n                        return allowedValue.indexOf(v) >= 0;\n                    })) {\n                        return false;\n                    }\n                } else if (!_(rowValue.split(columnFilterOptions.splitValueOn))\n                    .chain()\n                    .map(function (x) {\n                        return x.trim();\n                    })\n                    .contains(allowedValue)\n                    .value()\n                ) {\n                    return false;\n                }\n            } else {\n                if (typeof allowedValue === 'object') {\n                    if (allowedValue.length === 0) {\n                        continue;\n                    }\n                    if (allowedValue.indexOf(rowValue) === -1) {\n                        return false;\n                    }\n                } else {\n                    if (rowValue !== allowedValue) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    },\n\n    // isRowIncluded is called by the datatable api, logic is broken out for multiselect option filtering\n    isRowIncluded: function (rowIndex, rowObject, rowSearchData) {\n        this.grid.unfilteredRowCache.push(rowSearchData);\n\n        var filterResult = this.filterLogic(rowIndex, rowObject, rowSearchData);\n\n        if (filterResult) {\n            this.grid.filteredRowCache.push(rowSearchData);\n        }\n\n        return filterResult;\n    },\n});\n","module.exports = \"<div class=\\\"toggle-filters-link\\\">\\n    <span class=\\\"fa fa-caret-down\\\"></span>\\n    <span>Filter...</span>\\n</div>\\n\\n<div class=\\\"grid-filter-wrapper\\\">\\n    <div class=\\\"grid-filter-section\\\"></div>\\n    <div class=\\\"clear-filters\\\" style=\\\"display: none;\\\">\\n        <span class=\\\"fa fa-close\\\"></span>\\n        <span>Clear All Filters</span>\\n    </div>\\n</div>\\n\"","var Backbone = require('backbone');\nvar GridSortModel = require('./GridSortModel');\n\nmodule.exports = Backbone.Collection.extend({\n\n    model: GridSortModel,\n\n});\n","var Backbone = require('backbone');\n\nmodule.exports = Backbone.Model.extend({\n\n    defaults: {\n        column: null,\n        order: 'asc',  // asc | desc\n    },\n\n});\n","module.exports = \"<div class=\\\"filter-region\\\"></div>\"","/**\n * Subclass of Marionette.Region that renders the region's view as a Bootstrap modal.\n * The region's el must be a div with Bootstrap's 'modal' class applied.\n */\nvar Marionette = require('backbone.marionette');\nrequire('bootstrap');\n\nmodule.exports = Marionette.Region.extend({\n\n    constructor: function () {\n        Marionette.Region.prototype.constructor.apply(this, arguments);\n    },\n\n    onShow: function () {\n        console.assert(this.$el.hasClass('modal'));\n        this.$el.attr('data-app-id', 'nimble');\n\n        var self = this;\n        this.$el.on('hidden.bs.modal', function (event) {\n            self.empty();\n        });\n\n        this.$el.modal('show');\n    },\n\n    onEmpty: function () {\n        this.$el.modal('hide');\n    },\n\n});\n","import $ from 'jquery';\nimport { ARRAYS_LIST_FETCH } from '../progeny/modules/nimble/arrays/collection/constants';\nimport { getArrays } from '../progeny/modules/nimble/arrays/collection/actionCreators';\nimport { getStore } from '../progeny/util/storeProvider';\nimport { emitEventForAction } from '../progeny/store/middleware/legacyEventEmitterActions';\nimport { getSuccessActionType } from '@infosight/elmer/dist/utils/redux';\nimport Request from '../progeny/services/Request';\nimport { userSelector } from '../progeny/modules/user';\nimport AssetCollection from './modules/assets_report/collections/AssetCollection';\nimport NimbleOsReleaseCollection from './modules/software/NimbleOsReleaseCollection';\nimport SessionModel from './models/SessionModel';\nimport NimbleUserTenantHelpers from '../progeny/modules/nimble/tenantSelection/NimbleUserTenantHelpers';\n\nexport default function handlers(App) {\n    const sessionModel = new SessionModel(userSelector(getStore().getState())); // global session data\n    const assetCollection = new AssetCollection();\n    const nimbleOsReleases = new NimbleOsReleaseCollection();\n\n    const asjQueryDeferrered = promise => $.Deferred(defer => promise.then(defer.resolve).catch(defer.reject));\n    const asAsync = (promise, type) => {\n        if (type && type.toLowerCase() === 'jquery.deferred') {\n            return asjQueryDeferrered(promise);\n        }\n\n        return promise;\n    };\n\n    let assetCollectionPromise;\n    App.handleRequest('global', 'get:assets:async', function (type) {\n        if (assetCollectionPromise) {\n            return asAsync(assetCollectionPromise, type);\n        }\n\n        if (!NimbleUserTenantHelpers.currentTenantIsNimbleTenant()) {\n            return Promise.reject();\n        }\n\n        assetCollectionPromise = new Promise(resolve => {\n            getArrays()(getStore().dispatch)\n                .then((assets) => {\n                    assetCollection.reset(assets, { parse: true });\n                    return assetCollection;\n                })\n                .then(resolve);\n        });\n\n        return asAsync(assetCollectionPromise, type);\n    });\n\n    let releasesPromise;\n    App.handleRequest('global', 'get:nimbleosreleases:async', function (type) {\n        if (releasesPromise) {\n            return asAsync(releasesPromise, type);\n        }\n\n        if (!NimbleUserTenantHelpers.currentTenantIsNimbleTenant()) {\n            return Promise.reject();\n        }\n\n        releasesPromise = new Promise(resolve => {\n            new Request().urlSegments('software', 'releases')\n                .get()\n                .then((releases) => {\n                    nimbleOsReleases.reset(releases.data, { parse: true });\n                    return nimbleOsReleases;\n                })\n                .then(resolve);\n        });\n\n        return asAsync(releasesPromise, type);\n    });\n\n    // get:current:session\n    //   Fetches the current session model object.\n    //\n    // @returns SessionModel\n    App.handleRequest('global', 'get:current:session', function () {\n        return sessionModel;\n    });\n\n    App.handleEvent('global', 'change:account', function () {\n        assetCollectionPromise = null;\n    });\n\n    emitEventForAction(getSuccessActionType(ARRAYS_LIST_FETCH));\n    App.handleEvent('progeny', ARRAYS_LIST_FETCH, ({ payload }) => {\n        assetCollection.clear({ silent: true });\n        assetCollection.set(payload);\n    });\n}\n","var Backbone = require('backbone'),\n    AssetModel = require('../models/AssetModel');\n\nmodule.exports = Backbone.Collection.extend({\n\n    model: AssetModel,\n\n    url: function () {\n        return this.api().pod().account().segment('assets');\n    },\n});\n","var Backbone = require('backbone');\nvar NimbleOsReleaseModel = require('./NimbleOsReleaseModel');\n\nfunction toComparableVersion(version) {\n    var pad = '0000';\n    var parts = version.split(/\\.|\\-/);\n    return parts.slice(0, 4).map(function (part) {\n        return part.length >= pad.length ? part : (pad + part).slice(-pad.length);\n    }).join('.');\n}\n\nmodule.exports = Backbone.Collection.extend({\n\n    model: NimbleOsReleaseModel,\n\n    comparator: function (a, b) {\n        return -toComparableVersion(a.get('version')).localeCompare(toComparableVersion(b.get('version')));\n    },\n\n});\n","var Backbone = require('backbone');\n\nvar supported = function (release) {\n    return release.displayStatus !== 'End of Software Support';\n};\n\nmodule.exports = Backbone.Model.extend({\n\n    parse: function (release) {\n        release.shortVersion = release.version.split('-')[0];\n        if (!release.displayStatus) {\n            release.displayStatus = release.status.description;\n        }\n\n        release.supported = supported(release);\n        return release;\n    },\n\n});\n","var Backbone = require('backbone');\nconst { AuthorizationEvaluator, AUTHORITIES } = require('../../progeny/modules/user');\nconst deepGet = require('utils-deep-get');\n\nvar assertionError = function () {\n    console.assert('SessionModel must not be fetched from server');\n};\n\nmodule.exports = Backbone.Model.extend({\n    defaults: {\n        userLogin: null,\n        role: null,\n        internal: false,\n        acmPurchased: false,\n        arrays: [],\n        ndaSigned: false,\n        firstLogin: false,\n        vmImageApproved: false,\n        vmImageLicenseLimit: null,\n    },\n\n    parse(object) {\n        const { username } = object;\n        return {\n            ...object,\n            userLogin: username,\n            vmImageLicenseLimit: deepGet(object, 'customerContexts.nimble.vmImageLicenseLimit') || 0,\n        };\n    },\n\n    /*\n     * SessionModel should always be obtained from the page, not via an AJAX call\n     */\n    sync: assertionError,\n    fetch: assertionError,\n    save: assertionError,\n\n    isInternal: function () {\n        return AuthorizationEvaluator.evaluate({ access: { authorities: AUTHORITIES.REALM_INTERNAL } });\n    },\n\n    isExternal: function () {\n        return AuthorizationEvaluator.evaluate({ access: { authorities: AUTHORITIES.REALM_EXTERNAL } });\n    },\n\n});\n","const App = require('app/Application');\nconst Marionette = require('backbone.marionette');\nconst AccountModel = require('./AccountModel');\nconst NimbleUserTenantHelpers = require('../../../progeny/modules/nimble/tenantSelection/NimbleUserTenantHelpers').default;\n\nmodule.exports = Marionette.Object.extend({\n\n    account: null,\n    mode: null,\n\n    initialize: function () {\n        this.setAccount(new AccountModel(NimbleUserTenantHelpers.getCurrentTenant()));\n    },\n\n    setAccount: function (account) {\n        this.account = account;\n    },\n\n    getAccount: function () {\n        return this.account;\n    },\n\n    isSingle: function () {\n        return true;\n    },\n\n    isAll: function () {\n        return false;\n    },\n\n    isPrimary: function () {\n        var primaryAccount = App.request('global', 'get:account:primary');\n        return this.isSingle() && primaryAccount && (this.account.id === primaryAccount.id);\n    },\n\n});\n","const React = require('react');\nconst App = require('app/Application');\nconst _ = require('underscore');\nconst objectHash = require('object-hash');\nvar Marionette = require('backbone.marionette');\nconst { addBanner, removeBanner } = require('@infosight/shell-api/lib/Banner');\nconst { NIMBLE_APP_ID } = require('progeny/config');\nvar AssetModel = require('app/modules/assets_report/models/AssetModel');\nvar template = require('raw-loader!./templates/AssetSupportRenewal.html');\nvar UserPreferencesController = require('app/modules/preferences/UserPreferencesController');\nconst { buildUrlFromBase } = require('progeny/util/url');\nconst { getStore } = require('../../../progeny/util/storeProvider');\nconst { arraySelector } = require('../../../progeny/modules/nimble/arrays/detail/reducer');\nvar tpl = _.template(template);\nvar MAX_ASSETS_PER_NOTIFICATION = 5;\nvar notificationIds = {};\nvar shouldRenderNotification = function (asset) {\n    if (asset.get('supportStatus') === AssetModel.SupportStatus.CURRENT) {\n        return false;\n    }\n\n    var lastDismissedForSupportEndDate = UserPreferencesController.getNotification({\n        type: 'support-renewal',\n        subtype: asset.get('serialNumber'),\n    });\n    var isFirstEncounter = lastDismissedForSupportEndDate === undefined;\n    var isForCurrentSupportEndDate = lastDismissedForSupportEndDate === asset.get('supportEndDate');\n    return isFirstEncounter || !isForCurrentSupportEndDate;\n};\n\nconst onDismiss = (id) => {\n    if (!notificationIds[id]) {\n        return;\n    }\n\n    const notifications = notificationIds[id].map((asset) => ({\n        type: 'support-renewal',\n        subtype: asset.get('serialNumber'),\n        value: asset.get('supportEndDate'),\n    }));\n    UserPreferencesController.setNotifications(notifications);\n\n    delete notificationIds[id];\n};\n\nvar renderNotification = function (assets) {\n    let statusMessage = assets.reduce(function (status, asset) {\n        return status === asset.get('supportStatus') ? status : 'mixed';\n    }, assets[0].get('supportStatus'));\n\n    if (assets.length > 1) {\n        switch (statusMessage) {\n        case AssetModel.SupportStatus.EXPIRING:\n            statusMessage = 'are expiring';\n            break;\n        case AssetModel.SupportStatus.EXPIRED:\n            statusMessage = 'have expired';\n            break;\n        default:\n            statusMessage = 'are expiring or have expired';\n            break;\n        }\n    } else {\n        switch (statusMessage) {\n        case AssetModel.SupportStatus.EXPIRING:\n            statusMessage = 'is expiring';\n            break;\n        case AssetModel.SupportStatus.EXPIRED:\n            statusMessage = 'has expired';\n            break;\n        }\n    }\n\n    // TODO This is a hacky fix for the fact that renderNotifications is getting called at least twice, which duplicates the notification\n    const id = `support_${objectHash(assets.map(x => x.get('serialNumber')))}`;\n    let content = tpl({\n        status: statusMessage,\n        assets: assets.map((asset) => ({\n            name: asset.get('hostname') ? asset.get('hostname') + ' (' + asset.get('serialNumber') + ')' : asset.get('serialNumber'),\n            href: buildUrlFromBase('/infrastructure/storage/nimble/arrays', asset.get('serialNumber')),\n        })),\n    });\n\n    addBanner({ id, onDismiss, appId: NIMBLE_APP_ID, severity: 'warning', content: <div dangerouslySetInnerHTML={{ __html: content }} /> });\n\n    notificationIds[id] = assets;\n};\n\nmodule.exports = Marionette.Object.extend({\n    initialize: function () {\n        UserPreferencesController.onPreferencesLoaded(() => this.renderNotifications());\n        App.handleEvent('global', 'change:account', this.renderNotifications, this);\n    },\n\n    // Render a notification for each group of MAX_ASSETS_PER_NOTIFICATION assets\n    renderNotifications: async function () {\n        Object.keys(notificationIds).forEach(id => {\n            removeBanner({ id, appId: NIMBLE_APP_ID });\n            delete notificationIds[id];\n        });\n\n        const arrayCount = arraySelector(getStore().getState()).array;\n\n        if (arrayCount && arrayCount.length > 0) {\n            const assets = (await App.request('global', 'get:assets:async'))\n                .filter(shouldRenderNotification);\n\n            while (assets.length) {\n                renderNotification(assets.splice(0, MAX_ASSETS_PER_NOTIFICATION));\n            }\n        }\n    },\n});\n","module.exports = \"<span>\\n<% if (assets.length > 1) { %>\\nSupport contracts for these arrays <%= status %>:\\n<ul class=\\\"comma-delimited-list\\\">\\n    <% assets.forEach(function(asset) { %>\\n    <li><a href=\\\"<%= asset.href %>\\\" class=\\\"alert-link history-aware\\\"><%= asset.name %></a></li>\\n    <% }) %>\\n</ul>\\n<% } else { %>\\nThe support contract for <a href=\\\"<%= assets[0].href %>\\\" class=\\\"alert-link history-aware\\\"><%= assets[0].name %></a> <%= status %>\\n<% } %>\\n</span>\\n\"","const React = require('react');\nconst App = require('app/Application');\nconst _ = require('underscore');\nconst objectHash = require('object-hash');\nvar Marionette = require('backbone.marionette');\nconst { addBanner, removeBanner } = require('@infosight/shell-api/lib/Banner');\nconst { NIMBLE_APP_ID } = require('progeny/config');\nvar template = require('raw-loader!./templates/NoncompliantRelease.html');\nvar tpl = _.template(template);\nvar UserPreferencesController = require('app/modules/preferences/UserPreferencesController');\nconst { buildUrlFromBase } = require('progeny/util/url');\n\nvar notificationIds = {};\n\nconst onDismiss = (id) => {\n    if (!notificationIds[id]) {\n        return;\n    }\n\n    const notifications = notificationIds[id].map((asset) => ({\n        type: 'eoss',\n        subtype: asset.get('serialNumber'),\n        value: asset.get('version'),\n    }));\n    UserPreferencesController.setNotifications(notifications);\n\n    delete notificationIds[id];\n};\n\nvar versionSupported = function (asset, release) {\n    var version = asset.get('version');\n\n    // If there are no ASUPs for array, then we don't know the version\n    if (!version) {\n        return true;\n    }\n\n    // Bad data happens. If no matching release, assume it is supported. Only likely to happen in non-prod envs.\n    if (!release) {\n        return true;\n    }\n\n    return release.get('supported');\n};\n\nvar shouldRenderNotification = function (asset) {\n    var lastDismissedForVersion = UserPreferencesController.getNotification({\n        type: 'eoss',\n        subtype: asset.get('serialNumber'),\n    });\n    var isFirstEncounter = lastDismissedForVersion === undefined;\n    var isForCurrentVersion = lastDismissedForVersion === asset.get('version');\n    return isFirstEncounter || !isForCurrentVersion;\n};\n\nvar renderNotification = function (assets, version) {\n    // TODO This is a hacky fix for the fact that renderNotifications is getting called at least twice, which duplicates the notification\n    const id = `eoss_${objectHash(assets.map(x => x.get('serialNumber')))}`;\n\n    const content = tpl({\n        version: version.get('shortVersion'),\n        softwareLink: buildUrlFromBase('/resources/nimble/software'),\n        assets: assets.map(function (asset) {\n            return {\n                name: asset.get('hostname') ? asset.get('hostname') + ' (' + asset.get('serialNumber') + ')' : asset.get('serialNumber'),\n                serialNumber: asset.get('serialNumber'),\n                href: buildUrlFromBase('/infrastructure/storage/nimble/arrays', asset.get('serialNumber')),\n            };\n        }),\n    });\n\n    addBanner({ id, onDismiss, appId: NIMBLE_APP_ID, severity: 'warning', content: <div dangerouslySetInnerHTML={{ __html: content }} /> });\n    notificationIds[id] = assets;\n};\n\nmodule.exports = Marionette.Object.extend({\n    initialize: function () {\n        UserPreferencesController.onPreferencesLoaded(() => this.renderNotifications());\n        App.handleEvent('global', 'change:account', this.renderNotifications, this);\n    },\n\n    renderNotifications: async function () {\n        Object.keys(notificationIds).forEach(id => {\n            removeBanner({ id, appId: NIMBLE_APP_ID });\n            delete notificationIds[id];\n        });\n\n        try {\n            const assets = await App.request('global', 'get:assets:async');\n            const releases = await App.request('global', 'get:nimbleosreleases:async');\n\n            assets\n                .reduce((groups, asset) => {\n                    const release = releases.findWhere({ version: asset.get('version') });\n                    if (!versionSupported(asset, release) && shouldRenderNotification(asset)) {\n                        const group = groups.get(release) || [];\n                        group.push(asset);\n                        groups.set(release, group);\n                    }\n\n                    return groups;\n                }, new Map())\n                .forEach(renderNotification);\n        } catch (ex) {\n            console.error(ex);\n        }\n    },\n});\n","module.exports = \"<a href=\\\"<%= softwareLink %>\\\" class=\\\"alert-link history-aware\\\">NimbleOS <%= version %></a> is no longer supported. These arrays should be upgraded:\\n<ul class=\\\"comma-delimited-list\\\">\\n    <% assets.forEach(function(asset) { %>\\n    <li><a href=\\\"<%= asset.href %>\\\" class=\\\"alert-link history-aware\\\"><%= asset.name %></a></li>\\n    <% }) %>\\n</ul>\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dayCount\":\"dayCount__1PSPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-column\":\"chart-column__12Y4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"partitionBorder\":\"partitionBorder__3SKEZ\",\"leftPartitionBorder\":\"leftPartitionBorder__1IYR8\",\"controllerBox\":\"controllerBox__2JzFJ\",\"badController\":\"badController__2TkwF\",\"capitalize\":\"capitalize__1Pk9Z\",\"addTopPadding\":\"addTopPadding__36B_4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"tags__38neL\",\"container\":\"container__T14qT\",\"csv-button\":\"csv-button__1SItP\",\"raw-facets\":\"raw-facets__1-lWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head-shelf\":\"head-shelf___yUAC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"headerRow__3zXRH\",\"valueRow\":\"valueRow__2epMW\",\"cacheRow\":\"cacheRow__1F0yQ\",\"cacheValueRow\":\"cacheValueRow__3-YFi\",\"upgradeNotesContainer\":\"upgradeNotesContainer__9RtcL\",\"upgradeNotes\":\"upgradeNotes__rE4HU\"};","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar RangeModel = require('./RangeModel');\nvar PerformanceChartView = require('./PerformanceChartView');\nvar tpl = require('raw-loader!./PerformanceView.html');\n\nmodule.exports = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    ui: {\n        moreHelpToggle: 'a[href=\"#coral-view-more-help\"]',\n    },\n\n    className: 'performance-details',\n\n    events: {\n        'show.bs.collapse #coral-view-more-help': function () {\n            this.ui.moreHelpToggle.text('Less...');\n        },\n        'hide.bs.collapse #coral-view-more-help': function () {\n            this.ui.moreHelpToggle.text('More...');\n        },\n    },\n\n    regions: {\n        chart: '[data-region=\"chart\"]',\n    },\n\n    childEvents: {\n        'dragZoom': 'onDragZoom',\n    },\n\n    initialize: function () {\n        this.model = this.getOption('rangeModel') || new RangeModel();\n    },\n\n    onRender: function () {\n        this.renderChart();\n    },\n\n    renderChart: function () {\n        this.showChildView('chart', new PerformanceChartView({\n            poolUid: this.getOption('poolUid'),\n            arrayModel: this.getOption('arrayModel'),\n            rangeModel: this.model,\n        }));\n    },\n\n    onDragZoom: function (view, range) {\n        this.trigger('dragZoom', range);\n    },\n\n});\n","const _ = require('underscore');\nvar $ = require('jquery');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar numeral = require('numeral');\nvar AsyncView = require('app/common/AsyncView');\nvar PerformanceTimeseries = require('./PerformanceTimeseries');\nvar IopsChartGroup = require('./IopsChartGroup');\nvar LatencyChart = require('./LatencyChart');\nvar MbpsChart = require('./MbpsChart');\nvar EventsChart = require('./EventsChart');\nvar ArrayEventsCollection = require('app/collections/events/ArrayEventsCollection');\nvar PoolEventsCollection = require('app/collections/events/PoolEventsCollection');\nvar ErrorView = require('../../../common/ErrorView');\nvar moment = require('moment');\nvar tpl = require('raw-loader!./PerformanceChartView.html');\nvar tooltipTpl = require('raw-loader!./Tooltip.html');\nvar arrayEventsTooltipTpl = require('raw-loader!./ArrayEventsTooltip.html');\nvar OverlaySpinner = require('../../../common/OverlaySpinner');\n\nvar tooltipTemplate = _.template(tooltipTpl);\nvar arrayEventsTooltipTemplate = _.template(arrayEventsTooltipTpl);\n\nvar LOCAL_TIMEZONE = moment.tz(moment.tz.guess()).format('z');\n\nvar TIMESTAMP_FORMATS = {\n    minute: 'L hh:mmA',\n    hour: 'L hA',\n    day: 'L',\n};\n\n/**\n * Some references on stacked/synchronized charts:\n * http://www.highcharts.com/stock/demo/candlestick-and-volume\n * http://www.highcharts.com/demo/synchronized-charts\n */\n\nvar View = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    templateHelpers() {\n        return { numeral };\n    },\n\n    className: 'performance-chart-view',\n\n    regions: {\n        iops: '[data-region=\"iops\"]',\n        latency: '[data-region=\"latency\"]',\n        mbps: '[data-region=\"mbps\"]',\n        arrayEvents: '[data-region=\"events\"]',\n        error: '[data-errors]',\n        spinner: '[data-region=\"spinner\"]',\n    },\n\n    ui: {\n        noData: '[data-no-data]',\n        crosshairContainer: '[data-crosshair-container]',\n    },\n\n    chartDefaults: function (options) {\n        var resolution = moment.duration(1, 'minutes');\n        var timestampFormat = TIMESTAMP_FORMATS.minute;\n        if (this.collection.length > 1) {\n            resolution = moment.duration(this.collection.at(1).get('timestamp') - this.collection.at(0).get('timestamp'));\n            if (resolution.asDays() >= 1) {\n                timestampFormat = TIMESTAMP_FORMATS.day;\n            } else if (resolution.asHours() >= 1) {\n                timestampFormat = TIMESTAMP_FORMATS.hour;\n            }\n        }\n\n        options = _.defaults(options || {}, {\n            height: 150,\n            type: 'line',\n            title: {},\n            tooltipTemplate: tooltipTemplate,\n        });\n\n        return {\n            global: {\n                useUTC: false,\n            },\n            credits: {\n                enabled: false,\n            },\n            rangeSelector: {\n                enabled: false,\n            },\n            navigator: {\n                enabled: false,\n            },\n            scrollbar: {\n                enabled: false,\n            },\n            chart: {\n                animation: false,\n                backgroundColor: null,\n                height: options.height,\n                spacingLeft: 0,\n                marginLeft: 80,\n                marginTop: 20,\n                type: options.type,\n                panning: false,\n                zoomType: 'x',\n                events: {\n                    selection: this.onChartSelect,\n                },\n                reflow: false,\n            },\n            plotOptions: {\n                series: {\n                    animation: false,\n                    enableMouseTracking: false,\n                    dataGrouping: {\n                        // Must disable dataGrouping for colorByPoint to respect our per-point configured colors\n                        enabled: false,\n                    },\n                    turboThreshold: 0,\n                    cursor: 'default',\n                    pointRange: resolution.asMilliseconds(),\n                    // 'between' is more visually accurate than the default (centered) since the backend rollup is done by timestamp truncation and not rounding\n                    pointPlacement: 'between',\n                },\n                column: {\n                    pointPadding: 0,\n                    groupPadding: 0.01,\n                    borderWidth: 0,\n                    minPointLength: 3,\n                    colorByPoint: true,\n                },\n                line: {},\n                area: {\n                    stacking: 'normal',\n                },\n                scatter: {\n                    //stickyTracking: false\n                },\n            },\n            title: _.defaults(options.title, {\n                text: null,\n                align: 'left',\n                floating: true,\n                x: 80,\n                y: 0,\n                useHTML: true,\n                margin: 0,\n                style: {\n                    fontSize: '13px',\n                    padding: 0,\n                },\n            }),\n            tooltip: {\n                animation: false,\n                hideDelay: 0,\n                backgroundColor: 'none',\n                shadow: false,\n                borderWidth: 0,\n                style: {\n                    padding: 0,\n                },\n                shared: true,\n                useHTML: true,\n                positioner: function () {\n                    return {\n                        x: this.chart.plotLeft,\n                        y: 0,\n                    };\n                },\n                formatter: function () {\n                    var template = options.tooltipTemplate;\n                    var chart = this.points[0].series.chart;\n                    return template({\n                        numeral,\n                        points: this.points,\n                        width: chart.plotWidth + 'px',\n                        total: this.total,\n                        timestamp: `${moment(this.x).format(timestampFormat)} ${LOCAL_TIMEZONE}`,\n                    });\n                },\n            },\n            yAxis: {\n                opposite: false,\n                showLastLabel: true,\n                min: 0,\n            },\n            xAxis: {\n                min: this.collection.first().get('timestamp'),\n                max: this.collection.last().get('timestamp'),\n                ordinal: false,\n            },\n        };\n    },\n\n    events: {\n        'mousemove [data-chart-synchronized]': 'onMouseMove',\n        'mouseleave [data-chart-synchronized]': 'onMouseLeave',\n    },\n\n    initialize: function (options) {\n        _.bindAll(this, 'onDocumentMouseMove', 'onChartSelect', 'onMouseMove');\n        this.collection = new PerformanceTimeseries({}, {\n            poolUid: options.poolUid,\n            arrayModel: options.arrayModel,\n            rangeModel: options.rangeModel,\n        });\n\n        if (options.arrayModel.get('serialNumber')) {\n            this.eventsCollection = ArrayEventsCollection.get(options.arrayModel.get('serialNumber'));\n        } else {\n            this.eventsCollection = PoolEventsCollection.get(options.poolUid);\n        }\n\n        $(document).on('mousemove.nmbl.synchronizedChart', this.onDocumentMouseMove);\n        this.listenTo(options.rangeModel, 'change', this.onRangeModelChange);\n        $(window).on('resize', this.onWindowResize.bind(this));\n        this.listenTo(this.collection, 'sync', () => {\n            if (this.collection.length) {\n                const startTimestamp = this.collection.first().get('timestamp');\n                const endTimestamp = this.collection.last().get('timestamp');\n                this.getOption('rangeModel').setActualDataRange(startTimestamp, endTimestamp);\n            } else {\n                this.getOption('rangeModel').setActualDataRange();\n            }\n        });\n    },\n\n    onRender: function () {\n        this.spinner = new OverlaySpinner();\n        this.showChildView('spinner', this.spinner);\n        this.renderCharts();\n        this.rendered = true;\n    },\n\n    useCustomCrosshair: function () {\n        return !this.eventsChart.isEmpty();\n    },\n\n    renderCharts: function () {\n        if (!this.collection.length) {\n            this.$('.chart-content').addClass('hide');\n            this.ui.noData.removeClass('hide');\n            this.hasCharts = false;\n            return;\n        } else {\n            this.$('.chart-content').removeClass('hide');\n            this.ui.noData.addClass('hide');\n            this.hasCharts = true;\n        }\n\n        var childViewOptions = {\n            collection: this.collection,\n            eventsCollection: this.eventsCollection,\n            chartDefaults: this.chartDefaults.bind(this),\n            allFlash: false, //TODO: fetch allFlash property\n        };\n\n        this.showChildView('iops', new IopsChartGroup(childViewOptions));\n        this.showChildView('latency', new LatencyChart(childViewOptions));\n        this.showChildView('mbps', new MbpsChart(childViewOptions));\n\n        this.eventsChart = new EventsChart(childViewOptions);\n        this.getRegion('arrayEvents').empty();\n        if (this.eventsChart.isEmpty()) {\n            this.$('[data-region=\"events\"]').closest('.chart-group').hide();\n        } else {\n            this.showChildView('arrayEvents', this.eventsChart);\n            this.$('[data-region=\"events\"]').closest('.chart-group').show();\n        }\n\n        this.getRegion('spinner').$el.hide();\n        this.$charts = this.$('[data-highcharts-chart][data-chart-synchronized]');\n    },\n\n    onAttach: function () {\n        if (this.collection.length) {\n            this.$charts.each(function () {\n                $(this).highcharts().reflow();\n            });\n\n            if (this.useCustomCrosshair()) {\n                this.createCrosshair();\n            }\n        }\n    },\n\n    onRangeModelChange: function (model, { noRefresh }) {\n        if (!this.rendered || noRefresh) {\n            return;\n        }\n\n        this.fetching = true;\n        this.showSpinner();\n        $.when(\n            this.collection.fetch({ reset: true }),\n            this.eventsCollection.fetch({ reset: true }),\n        )\n            .done(this.onCollectionSync.bind(this))\n            .fail(this.onError.bind(this));\n    },\n\n    showSpinner: function () {\n        this.getRegion('spinner').$el.show();\n        this.spinner.showSpinner();\n    },\n\n    hideSpinner: function () {\n        this.spinner.hideSpinner();\n    },\n\n    hideCrosshair: function () {\n        if (!this.crosshairEl) {\n            // Avoid console errors when client moves mouse over [data-chart-synchronized]\n            // before the chart is created\n            return;\n        }\n\n        this.crosshairEl.style.visibility = 'hidden';\n    },\n\n    showCrosshairAt: function (location) {\n        if (!this.crosshairEl) {\n            // Avoid console errors when client moves mouse over [data-chart-synchronized]\n            // before the chart is created\n            return;\n        }\n\n        const offsetLeft = location - this.el.getBoundingClientRect().left;\n        this.crosshairEl.style.left = offsetLeft + 'px';\n        this.crosshairEl.style.visibility = 'visible';\n    },\n\n    showEventsOnCrosshair: function (point) {\n        // Remove tooltip for previous point\n        if (this.eventFlagsEl.getAttribute('data-x') !== point.x) {\n            this.eventFlagsEl.innerHTML = null;\n            this.eventFlagsEl.classList.remove('right', 'left');\n        }\n\n        // Create tooltip\n        if (!this.eventFlagsEl.childElementCount) {\n            this.eventFlagsEl.innerHTML = arrayEventsTooltipTemplate({\n                points: point.arrayEvents || [point],\n                color: point.color,\n                date: moment(point.x).format('L'),\n            });\n            this.crosshairEl.classList.add('highlight');\n            $(this.crosshairEl).find('[data-crosshair-segment]').css({\n                'border-left-color': point.color,\n            });\n\n            var widthOverflows = this.eventFlagsEl.getBoundingClientRect().right > window.innerWidth;\n            this.eventFlagsEl.classList.add(widthOverflows ? 'right' : 'left');\n        }\n    },\n\n    hideCrosshairEvents: function () {\n        this.crosshairEl.classList.remove('highlight');\n        $(this.crosshairEl).find('[data-crosshair-segment]').css({\n            'border-left-color': '',\n        });\n        this.eventFlagsEl.innerHTML = null;\n    },\n\n    createCrosshair: function () {\n        if (this.crosshairEl) {\n            this.crosshairEl.parentNode.removeChild(this.crosshairEl);\n            this.crosshairEl = undefined;\n        }\n\n        // Crosshair segments are absolutely positioned relative to the parent view's positioning context\n        const viewTop = this.el.getBoundingClientRect().top;\n\n        var segmentOptions = this.$charts.get().map(function (el) {\n            var isEventsChart = el.getAttribute('data-chart') === 'events';\n            var tooltipHeight = isEventsChart ? 0 : 25;\n            const chartTopOffset = el.getBoundingClientRect().top - viewTop;\n\n            // We can't simply use offsetTop here since SVG elements don't have that property\n            const xAxisTopOffset = el.querySelector('.highcharts-xaxis-labels').getBoundingClientRect().top - viewTop;\n\n            return {\n                top: chartTopOffset + tooltipHeight,\n                bottom: xAxisTopOffset,\n                linkTooltip: isEventsChart,\n            };\n        });\n\n        if (!this.crosshairEl) {\n            var container = document.createElement('div');\n            container.setAttribute('data-crosshair', '');\n            container.style.visibility = 'hidden';\n            this.ui.crosshairContainer[0].appendChild(container);\n\n            this.crosshairEl = container;\n        }\n\n        segmentOptions.forEach(function (bounds) {\n            var el = document.createElement('div');\n            el.setAttribute('data-crosshair-segment', '');\n            el.style.height = bounds.bottom - bounds.top + 'px';\n            el.style.top = bounds.top + 'px';\n\n            if (bounds.linkTooltip) {\n                this.eventFlagsEl = document.createElement('div');\n                this.eventFlagsEl.classList.add('events');\n                this.eventFlagsEl.style.bottom = this.crosshairEl.clientHeight - bounds.top + 'px';\n                this.crosshairEl.appendChild(this.eventFlagsEl);\n            }\n\n            this.crosshairEl.appendChild(el);\n            return el;\n        }.bind(this));\n    },\n\n    onMouseMove: function (event) {\n        var self = this;\n\n        if (this.fetching || !this.hasCharts) {\n            return;\n        }\n\n        // All charts have the same x-axis configuration, so arbitrarily pick a chart and\n        // translate the pointer's viewport coordinate to a value on the x-axis.\n        // Example: 300px = 1478447377443.6091 = \"2016-11-06T10:49:37-05:00\"\n        var pointerCoordinate = this.$charts.first().highcharts().xAxis[0].toValue(event.offsetX);\n\n        var proximalPoints = this.$charts.get().map(function (el) {\n            var chart = $(el).highcharts();\n            var normalizedEvent = chart.pointer.normalize(event.originalEvent); // Find coordinates within the chart\n\n            var points = chart.series.map(function (series) {\n                return series.searchPoint(normalizedEvent, true);\n            });\n\n            points = _.compact(points);\n\n            return {\n                chart: chart,\n                el: el,\n                points: points,\n                proximity: points.length ? Math.abs(points[0].x - pointerCoordinate) : Infinity,\n                isEventsChart: el.getAttribute('data-chart') === 'events',\n            };\n        });\n\n        // Use the closest point to the pointer. If a chart's data is truncated compared to other charts, this\n        // prevents cases where the currently selected point (showing tooltips etc) is not the same point the\n        // crosshair is on for other charts.\n        var minProximity = _(proximalPoints).min(_.property('proximity')).proximity;\n        var crosshairDrawn = false;\n\n        proximalPoints.forEach(function (point) {\n            var points = point.points;\n            var chart = point.chart;\n\n            if (minProximity !== point.proximity || !points.length) {\n                chart.pointer.reset(); // Deselect any points and remove tooltip\n                return;\n            }\n\n            points.forEach(x => x.onMouseOver());\n\n            if (chart.tooltip) {\n                chart.tooltip.refresh(points);\n            }\n\n            if (self.useCustomCrosshair()) {\n                if (crosshairDrawn) {\n                    return;\n                }\n\n                // x-Axis is always before the y-Axis in SVG, but this could change with a highcharts upgrade\n                // Highcharts 5 gives each element specific attributes, so it should be trivial to update.\n                var seriesBounds = point.el.querySelector('g.highcharts-axis').getBoundingClientRect();\n                var leftEdge = seriesBounds.left + window.scrollX;\n                var crosshairLocation = points[0].plotX + leftEdge - 1; // Place line over point center\n\n                self.showCrosshairAt(crosshairLocation);\n\n                var eventAtPoint = self.eventsChart.getPointsAt(points[0].x);\n                if (eventAtPoint) {\n                    self.showEventsOnCrosshair(eventAtPoint);\n                } else {\n                    self.hideCrosshairEvents();\n                }\n\n                crosshairDrawn = true;\n            } else {\n                chart.xAxis[0].drawCrosshair(event, points[0]);\n            }\n        });\n\n        event.stopPropagation();\n    },\n\n    onMouseLeave: function (event) {\n        if (this.fetching || !this.hasCharts) {\n            return;\n        }\n\n        if (this.useCustomCrosshair()) {\n            this.hideCrosshair();\n        }\n\n        this.$charts.each(function () {\n            var chart = $(this).highcharts();\n            // A catch-all to hide point markers, tooltip, and crosshair.\n            chart.pointer.reset();\n        });\n\n        event.stopPropagation();\n    },\n\n    onWindowResize: _.debounce(function () {\n        if (this.collection.length) {\n            this.$charts.each(function () {\n                $(this).highcharts().reflow();\n            });\n\n            if (this.useCustomCrosshair()) {\n                this.createCrosshair();\n            }\n        }\n    }, 50),\n\n    onDocumentMouseMove: function (event) {\n        // Workaround for onMouseLeave not being called in certain scenarios\n        // See Highcharts.onDocumentMouseMove and https://github.com/highcharts/highcharts/issues/149\n        this.onMouseLeave(event);\n    },\n\n    onDestroy: function () {\n        $(document).off('mousemove.nmbl.synchronizedChart', this.onDocumentMouseMove);\n    },\n\n    onChartSelect: function (event) {\n        event.preventDefault();\n\n        this.triggerMethod('dragZoom', {\n            min: moment(event.xAxis[0].min).toDate(),\n            max: moment(event.xAxis[0].max).toDate(),\n        });\n    },\n\n    onCollectionSync: function () {\n        if (this.rendered && this.fetching) {\n            this.renderCharts();\n            this.$charts.each(function () {\n                $(this).highcharts().reflow();\n            });\n            this.createCrosshair();\n            this.fetching = false;\n            this.hideSpinner();\n        }\n    },\n\n    onError: function (jqXhr) {\n        var view = new ErrorView({\n            model: new Backbone.Model({\n                message: 'Error fetching data',\n                error: jqXhr && jqXhr.responseJSON ? jqXhr.responseJSON.message : null,\n            }),\n        });\n        this.showChildView('error', view);\n        this.fetching = false;\n        this.hideSpinner();\n    },\n});\n\nmodule.exports = AsyncView.extend({\n    ViewConstructor: View,\n\n    load: function () {\n        var deferred = $.Deferred();\n\n        $.when(\n            this.view.collection.fetch(),\n            this.view.eventsCollection.fetch(),\n        )\n            .fail(_.bind(deferred.reject, deferred))\n            .done(_.bind(deferred.resolve, deferred, this.view));\n\n        return deferred;\n    },\n\n});\n","module.exports = \"<p><i class=\\\"text-danger fa fa-exclamation-circle\\\"></i> <%= message %></p>\\n<% if (error) { %>\\n<pre class=\\\"diagnostics\\\"><%= error %></pre>\\n<% } %>\"","const _ = require('underscore');\nvar Backbone = require('backbone');\n\nmodule.exports = Backbone.Collection.extend({\n\n    initialize: function (models, options) {\n        this.options = options;\n    },\n\n    url: function () {\n        let url = this.api()\n            .pod().account()\n            .segment('pools')\n            .segment(this.options.poolUid)\n            .segment('performance/coral')\n            .addQuery(this.options.rangeModel.getQueryParams());\n        if (this.options.arrayModel.get('serialNumber')) {\n            url.addQuery('serialNumber', this.options.arrayModel.get('serialNumber'));\n        }\n        return url;\n    },\n\n    calculateAverages: function (metrics) {\n        var length = this.length;\n        return this\n            .chain()\n            .reduce(function (memo, point) {\n                metrics.forEach(function (metric) {\n                    memo[metric] += point.get(metric);\n                });\n                return memo;\n            }, _(metrics).object(_.times(metrics.length, _.constant(0))))\n            .mapObject(function (sum) {\n                return sum / length;\n            })\n            .value();\n    },\n\n    calculateMaximums: function (metrics) {\n        return this\n            .reduce(function (memo, point) {\n                metrics.forEach(function (metric) {\n                    memo[metric] = Math.max(memo[metric], point.get(metric));\n                });\n                return memo;\n            }, _(metrics).object(_.times(metrics.length, _.constant(0))));\n    },\n\n    getSeries: function (metric) {\n        return this.map(function (point) {\n            return {\n                x: point.get('timestamp'),\n                y: point.get(metric),\n            };\n        });\n    },\n\n    parse: function (points) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i];\n            point.iopsTotal = point.iopsRead + point.iopsWrite;\n            point.latencyTotal = (point.latencyRead * point.iopsRead + point.latencyWrite * point.iopsWrite) / point.iopsTotal;\n            point.mbpsTotal = point.mbpsRandomRead + point.mbpsRandomWrite + point.mbpsSequentialRead + point.mbpsSequentialWrite;\n        }\n        return points;\n    },\n\n});\n","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar IopsChart = require('./IopsChart');\nvar tpl = require('raw-loader!./IopsChartGroup.html');\n\nmodule.exports = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    regions: {\n        Read: '[data-region=\"read\"]',\n        Write: '[data-region=\"write\"]',\n    },\n\n    onRender: function (options) {\n        this.maxIops = _.max(this.collection.calculateMaximums(['iopsRead', 'iopsWrite']));\n        ['Read', 'Write'].forEach(this.showChild.bind(this));\n    },\n\n    showChild: function (type) {\n        this.showChildView(type, new IopsChart(_(this.options).extend({\n            type: type,\n            maxIops: this.maxIops,\n        })));\n    },\n\n});\n","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar ImpactScore = require('./ImpactScore');\nvar numeral = require('numeral');\nvar tpl = require('raw-loader!./IopsChart.html');\nvar tooltipTpl = require('raw-loader!./IopsChartTooltip.html');\n\nmodule.exports = Marionette.ItemView.extend({\n\n    template: _.template(tpl),\n\n    tooltipTemplate: _.template(tooltipTpl),\n\n    templateHelpers: function () {\n        return {\n            impactScoreColor: new ImpactScore({ percentile: this.model.get('weightedAverageSeverityPercentile') }).color,\n            barPercent: numeral(this.model.get('averageIops') / this.options.maxIops).format('0%'),\n            numeral: numeral,\n        };\n    },\n\n    initialize: function (options) {\n        this.chartDefaults = options.chartDefaults;\n        this.type = options.type;\n        this.model = this.buildModel();\n    },\n\n    buildModel: function () {\n        var type = this.type;\n        var totals = this.collection.reduce(function (memo, point) {\n            memo.iops += point.get('iops' + type);\n            memo.severityPercentile += point.get('severityPercentile' + type) * point.get('iops' + type);\n            return memo;\n        }, { iops: 0, severityPercentile: 0 });\n        return new Backbone.Model({\n            type: this.type,\n            averageIops: totals.iops / this.collection.length,\n            weightedAverageSeverityPercentile: totals.severityPercentile / totals.iops,\n        });\n    },\n\n    onRender: function () {\n        var type = this.type;\n        this.$('[data-chart]').highcharts('StockChart', _(this.chartDefaults({\n            tooltipTemplate: this.tooltipTemplate,\n            title: {\n                text: type,\n            },\n        })).extend({\n            series: [\n                {\n                    name: type,\n                    type: 'column',\n                    data: this.collection.map(function (point) {\n                        var impactScore = new ImpactScore({ percentile: point.get('severityPercentile' + type) });\n                        return {\n                            x: point.get('timestamp'),\n                            y: point.get('iops' + type),\n                            color: impactScore.color,\n                            impactScore: impactScore,\n                            latency: point.get('latency' + type),\n                            type: type,\n                        };\n                    }),\n                },\n            ],\n            yAxis: _(this.chartDefaults({}).yAxis).extend({\n                max: this.options.maxIops,\n                title: {\n                    text: 'IO/sec',\n                },\n            }),\n        }));\n    },\n\n});\n","module.exports = \"<div class=\\\"row expanded\\\">\\n    <div class=\\\"column small-20\\\">\\n        <div data-chart data-chart-synchronized></div>\\n    </div>\\n    <div class=\\\"column small-4 chart-summary\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-body\\\">\\n                <h6>Average <%= type %><span class=\\\"unit\\\">IO/sec</span></h6>\\n                <div class=\\\"bar\\\">\\n                    <div class=\\\"bar-fill\\\"\\n                         style=\\\"background-color: <%= impactScoreColor %>; width: <%= barPercent %>;\\\"></div>\\n                    <div class=\\\"bar-label\\\" style=\\\"left: <%= barPercent %>;\\\">\\n                        <%= numeral(averageIops).format('0.0a') %>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"clearfix\\\" style=\\\"width: <%= width %>\\\">\\n    <div class=\\\"pull-right\\\">\\n        <ul>\\n            <% var point = points[0]; %>\\n            <li data-point=\\\"iops\\\">\\n                <span class=\\\"name\\\"><%= point.point.type %> IO/<span style=\\\"text-transform: none\\\">sec</span>: </span>\\n                <span class=\\\"value\\\"><%= numeral(point.y).format('0,0.0') %></span>\\n            </li>\\n            <li data-point=\\\"latency\\\">\\n                <span class=\\\"name\\\">Latency: </span>\\n                <span class=\\\"value\\\">\\n                    <%= numeral(point.point.latency).format('0.0') %>ms\\n                </span>\\n            </li>\\n            <li data-point=\\\"impact-score\\\">\\n                <span class=\\\"name\\\">Potential Impact:\\n                    <i class=\\\"fa fa-square\\\" style=\\\"color: <%= point.color %>;\\\"></i>\\n                </span>\\n                <span class=\\\"value\\\">\\n                    <%= point.point.impactScore.render() %>\\n                </span>\\n            </li>\\n        </ul>\\n        <span class=\\\"timestamp\\\"><%= timestamp %></span>\\n    </div>\\n</div>\\n\"","module.exports = \"<div data-region=\\\"read\\\"></div>\\n<div data-region=\\\"write\\\"></div>\"","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar numeral = require('numeral');\nvar FactorsChart = require('./FactorsChart');\nvar chartColors = require('./ChartColors');\nvar tpl = require('raw-loader!./LatencyChart.html');\n\nvar METRICS = [\n    {\n        id: 'latencyRead',\n        name: 'Read',\n        color: chartColors.read.toHexString(),\n    },\n    {\n        id: 'latencyWrite',\n        name: 'Write',\n        color: chartColors.write.toHexString(),\n    },\n];\n\nmodule.exports = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    templateHelpers: {\n        numeral: numeral,\n    },\n\n    regions: {\n        factors: '[data-region=\"factorsChart\"]',\n    },\n\n    initialize: function (options) {\n        var maxLatency = _.max(this.collection.calculateMaximums(_(METRICS).pluck('id')));\n        var averages = this.collection.calculateAverages(_(METRICS).pluck('id'));\n        this.model = new Backbone.Model({\n            metrics: METRICS.map(function (metric) {\n                return _(metric).extend({\n                    average: averages[metric.id],\n                    percent: numeral(averages[metric.id] / maxLatency).format('0%'),\n                });\n            }),\n        });\n    },\n\n    onRender: function () {\n        var collection = this.collection;\n        this.$('[data-chart=\"raw\"]').highcharts('StockChart', _(this.options.chartDefaults({\n            title: { text: 'Raw' },\n        })).extend({\n            series: METRICS.map(function (metric) {\n                return _({\n                    data: collection.getSeries(metric.id),\n                }).extend(metric);\n            }),\n            yAxis: _(this.options.chartDefaults({}).yAxis).extend({\n                title: {\n                    text: 'ms',\n                },\n            }),\n        }));\n\n        this.showChildView('factors', new FactorsChart({\n            chartDefaults: this.options.chartDefaults,\n            collection: this.collection,\n            allFlash: this.allFlash,\n        }));\n    },\n\n});\n","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar FactorsHistogram = require('./FactorsHistogram');\nvar tpl = require('raw-loader!./FactorsChart.html');\n\nvar FACTORS = [\n    {\n        id: 'factorCache',\n        name: 'Cache Underprovisioning',\n        abbreviation: 'Cache',\n        color: '#7cb5ec',\n    },\n    {\n        id: 'factorCpu',\n        name: 'CPU Saturation',\n        abbreviation: 'CPU',\n        color: '#434348',\n    },\n    {\n        id: 'factorDisk',\n        name: 'Sequential I/O Contention',\n        abbreviation: 'Seq I/O',\n        color: '#90ed7d',\n    },\n    {\n        id: 'factorHostNetwork',\n        name: 'Host Network',\n        abbreviation: 'Host/Net',\n        color: '#f7a35c',\n    },\n    {\n        id: 'factorUnalignFixable',\n        name: 'Unaligned I/O',\n        color: '#8085e9',\n    },\n    {\n        id: 'factorOther',\n        name: 'Other',\n        color: '#f15c80',\n    },\n];\n\nvar Model = Backbone.Model.extend({\n    defaults: {\n        threshold: 5,\n    },\n});\n\nmodule.exports = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    regions: {\n        histogram: '[data-region=\"histogram\"]',\n    },\n\n    bindings: {\n        'input[name=\"threshold\"]': {\n            observe: 'threshold',\n            onSet: function (val) {\n                return Number.parseFloat(val);\n            },\n        },\n    },\n\n    modelEvents: {\n        'change:threshold': 'onChangeThreshold',\n    },\n\n    initialize: function (options) {\n        this.chartDefaults = options.chartDefaults;\n        this.model = new Model({\n            threshold: options.allFlash ? 1 : 5,\n        });\n    },\n\n    onRender: function () {\n        this.stickit();\n        this.renderTimeseriesChart();\n        this.renderHistogram();\n    },\n\n    renderTimeseriesChart: function () {\n        var collection = this.collection;\n        this.$('[data-chart=\"timeseries\"]').highcharts('StockChart', _(this.chartDefaults({\n            title: { text: 'Factors' },\n        })).extend({\n            chart: _(this.chartDefaults(this).chart).extend({\n                type: 'area',\n            }),\n            series: FACTORS.map(this.getFactorSeries.bind(this)),\n            yAxis: _(this.chartDefaults(this).yAxis).extend({\n                title: {\n                    text: 'ms',\n                },\n                min: 0,\n                minRange: 1,\n            }),\n        }));\n    },\n\n    renderHistogram: function () {\n        this.showChildView('histogram', new FactorsHistogram({\n            collection: this.collection,\n            threshold: this.model.get('threshold'),\n            factors: FACTORS,\n        }));\n    },\n\n    getFactorSeries: function (factor) {\n        var threshold = this.model.get('threshold');\n\n        // Would be more correct and visually accurate to use 'null' instead of 0\n        // However this causes points without neighbors to not render properly\n        // pointRange: 1 should fix this but it doesn't seem to work\n        var belowThresholdValue = 0;\n\n        return {\n            name: factor.abbreviation || factor.name,\n            color: factor.color,\n            data: this.collection\n                .map(function (point) {\n                    return {\n                        x: point.get('timestamp'),\n                        y: point.get('latencyTotal') > threshold ? point.get(factor.id) * point.get('latencyTotal') : 0,\n                        color: factor.color,\n                    };\n                }),\n        };\n    },\n\n    onChangeThreshold: _.debounce(function () {\n        this.renderTimeseriesChart();\n        this.renderHistogram();\n    }, 500),\n\n});\n","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar Backbone = require('backbone');\nvar tpl = require('raw-loader!./FactorsHistogram.html');\n\nmodule.exports = Marionette.ItemView.extend({\n\n    template: _.template(tpl),\n\n    initialize: function () {\n        this.series = this.getSeries();\n        this.model = new Backbone.Model({\n            primaryFactor: _(this.series)\n                .chain()\n                .sortBy('y')\n                .last()\n                .value(),\n        });\n    },\n\n    onRender: function () {\n        this.chart = this.$('[data-chart=\"histogram\"]').highcharts({\n            credits: {\n                enabled: false,\n            },\n            chart: {\n                type: 'bar',\n                height: 70,\n                spacing: [0, 0, 0, 1], // Need 1px on left or axis seems to get hidden\n            },\n            legend: {\n                enabled: false,\n            },\n            title: {\n                text: null,\n            },\n            xAxis: {\n                categories: _(this.getOption('factors')).pluck('name'),\n                labels: {\n                    enabled: false,\n                },\n                minorTickLength: 0,\n                tickLength: 0,\n            },\n            yAxis: {\n                min: 0,\n                visible: false,\n            },\n            series: [\n                {\n                    data: this.series,\n                },\n            ],\n            plotOptions: {\n                series: {\n                    groupPadding: 0,\n                },\n            },\n            tooltip: {\n                formatter: function () {\n                    return this.point.name;\n                },\n            },\n        });\n    },\n\n    getSeries: function () {\n        var factors = _(this.getOption('factors')).pluck('id');\n        var totalWeight = 0;\n        var threshold = this.getOption('threshold');\n        var factorValues = this.collection\n            .chain()\n            .reduce(function (memo, point) {\n                var totalIops = point.get('iopsRead') + point.get('iopsWrite');\n                var totalLatency = (point.get('latencyRead') * point.get('iopsRead') + point.get('latencyWrite') * point.get('iopsWrite')) / totalIops;\n                if (totalLatency > threshold) {\n                    totalWeight += point.get('factorWindowWeight');\n                    factors.forEach(function (factor) {\n                        memo[factor] += point.get(factor) * point.get('factorWindowWeight');\n                    });\n                }\n                return memo;\n            }, _(factors).object(_.times(factors.length, _.constant(0))))\n            .mapObject(function (sum) {\n                return totalWeight === 0 ? 0 : sum / totalWeight;\n            })\n            .value();\n        return _(this.getOption('factors'))\n            .chain()\n            .map(function (factor) {\n                return _(factor).extend({\n                    y: factorValues[factor.id],\n                });\n            })\n            .sortBy('y')\n            .value()\n            .reverse();\n    },\n\n    onAttach: function () {\n        if (this.chart) {\n            this.chart.highcharts().reflow();\n        }\n    },\n\n});\n","module.exports = \"<% if (primaryFactor.y === 0) { %>\\n    <p>No read or write latency above threshold during this period</p>\\n<% } else { %>\\n    <p>Primary factor:<br/><strong style=\\\"color: <%= primaryFactor.color %>;\\\"><%= primaryFactor.name %></strong></p>\\n    <div data-chart=\\\"histogram\\\"></div>\\n<% } %>\\n\"","module.exports = \"<div class=\\\"row expanded\\\">\\n    <div class=\\\"columns small-20\\\">\\n        <div data-chart=\\\"timeseries\\\" data-chart-synchronized></div>\\n    </div>\\n    <div class=\\\"columns small-4 chart-summary\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"clearfix\\\">\\n                    <form>\\n                        <div class=\\\"row align-right align-middle\\\">\\n                            <div class=\\\"small-9 columns\\\">\\n                                <label>Threshold</label>\\n                            </div>\\n                            <div class=\\\"small-6 columns\\\">\\n                                <input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.1\\\" name=\\\"threshold\\\">\\n                            </div>\\n                            <div class=\\\"small-3 columns threshold-unit\\\">ms</div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <div data-region=\\\"histogram\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"row expanded\\\">\\n    <div class=\\\"columns small-20\\\">\\n        <div data-chart=\\\"raw\\\" data-chart-synchronized></div>\\n    </div>\\n    <div class=\\\"columns small-4 chart-summary\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-body\\\">\\n            <% metrics.forEach(function(metric) { %>\\n                <h6>Average <%= metric.name %><span class=\\\"unit\\\">ms</span></h6>\\n                <div class=\\\"bar\\\">\\n                    <div class=\\\"bar-fill\\\"\\n                         style=\\\"background-color: <%= metric.color %>; width: <%= metric.percent %>;\\\"></div>\\n                    <div class=\\\"bar-label\\\"\\n                         style=\\\"left: <%= metric.percent %>\\\"><%= numeral(metric.average).format('0.0') %></div>\\n                </div>\\n            <% }); %>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div data-region=\\\"factorsChart\\\"></div>\\n\"","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar numeral = require('numeral');\nvar chartColors = require('./ChartColors');\nvar tpl = require('raw-loader!./MbpsChart.html');\n\nvar METRICS = [\n    {\n        id: 'mbpsSequentialRead',\n        name: 'Seq Read',\n        color: chartColors.read.lighten().toHexString(),\n    },\n    {\n        id: 'mbpsRandomRead',\n        name: 'Rand Read',\n        color: chartColors.read.darken().toHexString(),\n    },\n    {\n        id: 'mbpsSequentialWrite',\n        name: 'Seq Write',\n        color: chartColors.write.lighten().toHexString(),\n    },\n    {\n        id: 'mbpsRandomWrite',\n        name: 'Rand Write',\n        color: chartColors.write.darken().toHexString(),\n    },\n];\n\nmodule.exports = Marionette.ItemView.extend({\n\n    template: _.template(tpl),\n\n    initialize: function (options) {\n        this.chartDefaults = options.chartDefaults;\n        var metricKeys = _(METRICS).pluck('id');\n        var maxMbps = _.max(this.collection.calculateMaximums(metricKeys));\n        var averages = this.collection.calculateAverages(metricKeys);\n\n        var metrics = ['Read', 'Write'].map(function (type) {\n            var totalAverage = 0;\n            var totalRatio = 0;\n            var highestRatio = 0;\n\n            var values = ['mbpsSequential', 'mbpsRandom'].map(function (metricPrefix) {\n                var METRIC = _(METRICS).findWhere({ id: metricPrefix + type });\n                var average = averages[METRIC.id];\n                var ratio = average / maxMbps;\n\n                totalAverage += average;\n                totalRatio += ratio;\n\n                // keep track of highest ratio because when totalRatio goes above 1\n                // the bars become stacked and the label will be displayed too far to\n                // the right of the bar. In this case, the percentage should be\n                // based off of the highest ratio value.\n                if (ratio > highestRatio) {\n                    highestRatio = ratio;\n                }\n\n                if (totalRatio > 1) {\n                    totalRatio = highestRatio;\n                }\n\n                return _({\n                    average: numeral(average).format('0.0'),\n                    percent: numeral(ratio).format('0%'),\n                    type: metricPrefix.slice(4),\n                }).extend(METRIC);\n            });\n\n            return {\n                type: type,\n                values: values,\n                average: numeral(totalAverage).format('0.0'),\n                percent: numeral(totalRatio).format('0%'),\n            };\n        });\n\n        this.model = new Backbone.Model({ metrics: metrics });\n    },\n\n    onRender: function () {\n        var collection = this.collection;\n        this.$('[data-chart=\"mbps\"]').highcharts('StockChart', _(this.chartDefaults()).extend({\n            chart: _(this.chartDefaults(this).chart).extend({\n                type: 'area',\n            }),\n            series: METRICS.map(function (metric) {\n                return _(metric).extend({\n                    data: collection.getSeries(metric.id),\n                });\n            }),\n            yAxis: _(this.chartDefaults(this).yAxis).extend({\n                title: {\n                    text: 'MiB/sec',\n                },\n            }),\n        }));\n\n        this.$('[data-toggle=\"popover\"]').popover();\n    },\n\n});\n","module.exports = \"<div class=\\\"row expanded\\\">\\n    <div class=\\\"columns small-20\\\">\\n        <div data-chart=\\\"mbps\\\" data-chart-synchronized></div>\\n    </div>\\n    <div class=\\\"columns small-4 chart-summary\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-body\\\">\\n                <% metrics.forEach(function(type) { %>\\n                <h6>Average <%= type.type %><span class=\\\"unit\\\">MiB/sec</span></h6>\\n                <div class=\\\"bar\\\">\\n                    <% type.values.forEach(function(metric) { %>\\n                    <div class=\\\"bar-fill\\\" data-toggle=\\\"popover\\\" data-trigger=\\\"hover\\\" data-placement=\\\"bottom\\\"\\n                         data-content=\\\"<%= metric.type %>: <%= metric.average %> MiB/s\\\"\\n                         style=\\\"background-color: <%= metric.color %>; width: <%= metric.percent %>;\\\"></div>\\n                    <% }); %>\\n                    <div class=\\\"bar-label\\\" style=\\\"left: <%= type.percent %>\\\"><%= type.average %></div>\\n                </div>\\n                <% }); %>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar tpl = require('raw-loader!./EventsChart.html');\n\nmodule.exports = Marionette.ItemView.extend({\n\n    template: _.template(tpl),\n\n    initialize: function () {\n        this.data = this.getSeriesData();\n    },\n\n    onRender: function () {\n        this.$('[data-chart]').highcharts('StockChart', _(this.options.chartDefaults({\n            height: 50,\n            type: 'scatter',\n        })).extend({\n            series: [\n                {\n                    marker: {\n                        enabled: true,\n                        //symbol: 'text:\\uf05a', // fa-info-circle\n                        symbol: 'text:\\uf0ad', // fa-wrench\n                        states: {\n                            hover: {\n                                enabled: false,\n                            },\n                        },\n                    },\n                    data: this.data.toArray(),\n                },\n            ],\n            tooltip: false,\n            yAxis: {\n                visible: false,\n                max: 1,\n                min: -1,\n            },\n        }));\n    },\n\n    getSeriesData: function () {\n        var self = this;\n        var minTimestamp = this.collection.first().get('timestamp');\n        var maxTimestamp = this.collection.last().get('timestamp');\n\n        // Sort events to correctly work out closest date\n        this.options.eventsCollection.comparator = function (event) {\n            return event.get('date');\n        };\n        this.options.eventsCollection.sort();\n\n        // We get events at per-day granularity, but performance timeseries data varies with the range.\n        // Since the perf charts take precedence when snapping to the crosshairs to a point,\n        // set the event's x-coordinate to the closes perf point within 1-day threshold.\n        //\n        // Assumes the source data is sorted\n        var THRESHOLD = 24 * 3600 * 1000;\n        var indexOfLastPoint = 0;\n        var points = self.collection.pluck('timestamp');\n        var closest = function (searchVal) {\n            var val;\n            var i = indexOfLastPoint;\n            var memo = points[i];\n            var memoDistance = Number.MAX_SAFE_INTEGER;\n            var distance;\n\n            while (i < points.length) {\n                val = points[i];\n                distance = Math.abs(val - searchVal);\n\n                // Found the closest point and distances are now increasing; bail\n                if (distance >= memoDistance) {\n                    break;\n                }\n\n                // Found a closer point within threshold\n                if (distance < THRESHOLD && distance < memoDistance) {\n                    memo = val;\n                    memoDistance = Math.abs(memo - searchVal);\n                    indexOfLastPoint = i;\n                }\n\n                i++;\n            }\n\n            return memo;\n        };\n\n        return this.options.eventsCollection\n            .filter(function (event) {\n                return event.get('date') >= minTimestamp && event.get('date') <= maxTimestamp;\n            })\n            .reduce(function (memo, event) {\n                var point = _({\n                    x: closest(event.get('date')),\n                    y: 0,\n                }).defaults(event.getFlagConfig());\n\n                // Collapse multiple points\n                var overlap = memo.points[point.x];\n                if (overlap) {\n                    memo.points[point.x] = {\n                        x: overlap.x,\n                        y: 0,\n                        color: '#235789',\n                        arrayEvents: (overlap.arrayEvents || [overlap]).concat(point),\n                    };\n                } else {\n                    memo.points[point.x] = point;\n                    memo.length++;\n                }\n\n                return memo;\n            }, {\n                points: {},\n                toArray: function () {\n                    var numericComparer = function (a, b) {\n                        return a - b;\n                    };\n\n                    return Object.keys(this.points)\n                        .sort(numericComparer)\n                        .map(_.propertyOf(this.points));\n                },\n                length: 0,\n            });\n    },\n\n    isEmpty: function () {\n        return this.data.length === 0;\n    },\n\n    getPointsAt: function (xCoordinate) {\n        return this.data.points[xCoordinate];\n    },\n});\n","module.exports = \"<div class=\\\"row expanded\\\">\\n    <div class=\\\"column small-20\\\">\\n        <div data-chart=\\\"events\\\" data-chart-synchronized></div>\\n    </div>\\n</div>\\n\"","const App = require('app/Application');\nconst _ = require('underscore');\nvar Backbone = require('backbone');\nvar ArrayEventModel = require('app/models/ArrayEventModel');\n\nvar cache;\n\nfunction getCache() {\n    if (!cache) {\n        cache = {};\n        App.handleEvent('global', 'change:account', function () {\n            cache = {};\n        });\n    }\n    return cache;\n}\n\nvar PoolEventsCollection = Backbone.Collection.extend({\n    model: ArrayEventModel,\n\n    poolUid: undefined,\n    category: null,\n    monthRange: 12,\n\n    initialize: function (models, options) {\n        _.defaults(this, options);\n        console.assert(!options || (options && options.poolUid), 'poolUid must be provided');\n    },\n\n    url: function () {\n        return this.api()\n            .pod()\n            .account()\n            .segment('pools')\n            .segment(this.poolUid)\n            .segment('events')\n            .addQuery({\n                monthRange: this.monthRange,\n                category: this.category,\n            });\n    },\n\n    fetch: function (options) {\n        if (!this.deferred) {\n            this.deferred = Backbone.Collection.prototype.fetch.call(this, options);\n        }\n        return this.deferred;\n    },\n\n}, {\n    get: function (poolId) {\n        var cached = getCache()[poolId];\n        if (!cached) {\n            cached = getCache()[poolId] = new PoolEventsCollection([], {\n                poolUid: poolId,\n            });\n        }\n        return cached;\n    },\n});\n\nmodule.exports = PoolEventsCollection;\n","module.exports = \"<div data-errors></div>\\n<div data-region=\\\"spinner\\\"></div>\\n<span class=\\\"hide\\\" data-no-data>No performance data available</span>\\n\\n<div class=\\\"chart-content\\\">\\n    <div data-crosshair-container></div>\\n    <div class=\\\"chart-group\\\">\\n        <h5>Events</h5>\\n        <div data-region=\\\"events\\\"></div>\\n    </div>\\n    <div class=\\\"chart-group\\\">\\n        <h5>IOPS</h5>\\n        <div data-region=\\\"iops\\\"></div>\\n    </div>\\n    <div class=\\\"chart-group\\\">\\n        <h5>Latency</h5>\\n        <div data-region=\\\"latency\\\"></div>\\n    </div>\\n    <div class=\\\"chart-group\\\">\\n        <h5>Throughput</h5>\\n        <div data-region=\\\"mbps\\\"></div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"clearfix\\\" style=\\\"width: <%= width %>\\\">\\n    <div class=\\\"pull-right\\\">\\n        <ul>\\n        <% for (var i = 0; i < points.length; i++) {\\n            var point = points[i];\\n        %>\\n            <li>\\n                <i class=\\\"fa fa-square\\\" style=\\\"color: <%= point.color %>;\\\"></i>\\n                <span class=\\\"name\\\"><%= point.series.name %>: </span>\\n                <span class=\\\"value\\\"><%= numeral(point.y).format('0,0.0') %></span>\\n            </li>\\n        <% } %>\\n        <% if (points[0].total != null) { %>\\n            <li>\\n                <span class=\\\"name\\\">Total: </span>\\n                <span class=\\\"value\\\"><%= numeral(points[0].total).format('0,0.0') %></span>\\n            </li>\\n        <% } %>\\n        </ul>\\n        <span class=\\\"timestamp\\\"><%= timestamp %></span>\\n    </div>\\n</div>\"","module.exports = \"<ul class=\\\"list-unstyled\\\" style=\\\"background-color: <%= color %>;\\\">\\n    <li class=\\\"date\\\"><%= date %></li>\\n    <% points.forEach(function(point) { %>\\n    <li><%= point.text %></li>\\n    <% }) %>\\n</ul>\"","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('NIMBLE/INVENTORY');\n\nexport const FETCH_INVENTORY = ns('FETCH_INVENTORY');\nexport const RESET = ns('RESET');\n\nexport const OBJECTS = {\n    GROUP: 'NIMBLE.GROUP',\n    ARRAY: 'NIMBLE.ARRAY',\n    POOL: 'NIMBLE.POOL',\n    FOLDER: 'NIMBLE.FOLDER',\n    VOLUME: 'NIMBLE.VOLUME',\n    APP_CATEGORY: 'NIMBLE.APP_CATEGORY',\n};\n","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar tpl = require('raw-loader!./OverlaySpinner.html');\n\nmodule.exports = Marionette.ItemView.extend({\n    ui: {\n        overlay: '.overlay-spinner',\n    },\n\n    template: _.template(tpl),\n\n    showSpinner: function () {\n        this.ui.overlay.addClass('on');\n    },\n\n    hideSpinner: function () {\n        this.ui.overlay.removeClass('on');\n    },\n});\n","module.exports = \"<div class=\\\"overlay-spinner\\\">\\n    <div class=\\\"overlay\\\"></div>\\n    <div class=\\\"spinner sk-three-bounce\\\">\\n        <div class=\\\"sk-child sk-bounce1\\\"></div>\\n        <div class=\\\"sk-child sk-bounce2\\\"></div>\\n        <div class=\\\"sk-child sk-bounce3\\\"></div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"coral-introduction asset-coral-introduction\\\">\\n\\n    <p>This page provides an in depth analysis of your array's performance. Using these tools, you can correlate periods\\n        of workload (via the IOPS and MBPS charts) with periods of latency.\\n        <a href=\\\"#coral-view-more-help\\\" data-toggle=\\\"collapse\\\" href=\\\"#\\\">More...</a>\\n    </p>\\n\\n    <aside class=\\\"well well-sm collapse\\\" id=\\\"coral-view-more-help\\\">\\n        <h4>Factors that may contribute to latency</h4>\\n        <ul>\\n            <li><strong>CPU: </strong> Potentially indicates CPU undersizing.</li>\\n            <li><strong>Cache: </strong> Potentially indicates cache undersizing.</li>\\n            <li><strong>Host/Network: </strong>Retransmits from the array suggesting the host or network is unable to\\n                keep up with the array.\\n            </li>\\n            <li><strong>Sequential I/O Contention: </strong>Indicates disks are busy with sequential I/O.</li>\\n            <li><strong>Unaligned I/O: </strong>IO that is not aligned to the volume block size and/or offset is\\n                impacting performance. This is often due to problems with VMDK layout and/or Volume Block Size\\n                selections.\\n            </li>\\n            <li><strong>Other: </strong>There may be other factors at play. If latency is unacceptably high and\\n                throughput is low, it's recommended that you contact Nimble Support for assistance in troubleshooting\\n                your environment.\\n            </li>\\n        </ul>\\n\\n        <h4>Potential Impact Score</h4>\\n        <p>\\n            The coloring in the performance chart depicts InfoSight's <b>Potential Impact Score</b> metric. Using\\n            InfoSight intelligence, this score identifies those periods where the impact of latency on application\\n            behavior is expected to be strongest. Larger-block operations, for example, tend to be more latent; at the\\n            same time the workloads driving them tend to be less latency sensitive. InfoSight's Impact Score corrects\\n            for this bias and highlights those latency events expected to cause the\\n            most impact to end users when accessing applications.\\n        </p>\\n    </aside>\\n</div>\\n<div data-region=\\\"chart\\\"></div>\\n\\n\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle-container\":\"toggle-container__3ZATa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagContainer\":\"flagContainer__oW_yt\",\"eventDate\":\"eventDate__2KhIr\",\"eventList\":\"eventList__1xtAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center-align-column\":\"center-align-column__20sbW\",\"table\":\"table__1nmYH\",\"right-align-column\":\"right-align-column__2MmMb\",\"large-column\":\"large-column__3MYud\",\"medium-column\":\"medium-column__2hESp\",\"small-column\":\"small-column__1WSsQ\"};","const _ = require('underscore');\nvar BaseGridModel = require('app/models/grid/BaseGridModel');\n\nmodule.exports = BaseGridModel.extend({\n\n    defaults: _.defaults({}, BaseGridModel.prototype.defaults),\n\n    validate: function (attrs, options) {\n\n        if (!attrs.collection) {\n            return '\"collection\" must be non-null';\n        }\n\n        return BaseGridModel.prototype.validate.apply(this, arguments);\n    },\n});\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\n\nimport {\n    VOLUME_FETCH,\n    VOLUME_DETAIL_CAPACITY_FETCH,\n    VOLUME_DETAIL_PERFORMANCE_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('volume'),\n    ...getInitialState('volumeCapacity'),\n    ...getInitialState('volumePerformance'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: VOLUME_FETCH, stateKey: 'volume' }),\n    ...createReducersForAction({ type: VOLUME_DETAIL_CAPACITY_FETCH, stateKey: 'volumeCapacity' }),\n    ...createReducersForAction({ type: VOLUME_DETAIL_PERFORMANCE_FETCH, stateKey: 'volumePerformance' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).volumeDetail;\nexport const volumeSelector = createSelector(baseSelector, 'volume');\nexport const capacitySelector = createSelector(baseSelector, 'volumeCapacity');\nexport const performanceSelector = createSelector(baseSelector, 'volumePerformance');\n","// MarionetteJS (Backbone.Marionette)\n// ----------------------------------\n// v2.4.2\n//\n// Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://marionettejs.com\n\n\n/*!\n * Includes BabySitter\n * https://github.com/marionettejs/backbone.babysitter/\n *\n * Includes Wreqr\n * https://github.com/marionettejs/backbone.wreqr/\n */\n\n\n(function(root, factory) {\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], function(Backbone, _) {\n      return (root.Marionette = root.Mn = factory(root, Backbone, _));\n    });\n  } else if (typeof exports !== 'undefined') {\n    var Backbone = require('backbone');\n    var _ = require('underscore');\n    module.exports = factory(root, Backbone, _);\n  } else {\n    root.Marionette = root.Mn = factory(root, root.Backbone, root._);\n  }\n\n}(this, function(root, Backbone, _) {\n  'use strict';\n\n  /* istanbul ignore next */\n  // Backbone.BabySitter\n  // -------------------\n  // v0.1.7\n  //\n  // Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.babysitter\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousChildViewContainer = Backbone.ChildViewContainer;\n    // BabySitter.ChildViewContainer\n    // -----------------------------\n    //\n    // Provide a container to store, retrieve and\n    // shut down child views.\n    Backbone.ChildViewContainer = function(Backbone, _) {\n      // Container Constructor\n      // ---------------------\n      var Container = function(views) {\n        this._views = {};\n        this._indexByModel = {};\n        this._indexByCustom = {};\n        this._updateLength();\n        _.each(views, this.add, this);\n      };\n      // Container Methods\n      // -----------------\n      _.extend(Container.prototype, {\n        // Add a view to this container. Stores the view\n        // by `cid` and makes it searchable by the model\n        // cid (and model itself). Optionally specify\n        // a custom key to store an retrieve the view.\n        add: function(view, customIndex) {\n          var viewCid = view.cid;\n          // store the view\n          this._views[viewCid] = view;\n          // index it by model\n          if (view.model) {\n            this._indexByModel[view.model.cid] = viewCid;\n          }\n          // index by custom\n          if (customIndex) {\n            this._indexByCustom[customIndex] = viewCid;\n          }\n          this._updateLength();\n          return this;\n        },\n        // Find a view by the model that was attached to\n        // it. Uses the model's `cid` to find it.\n        findByModel: function(model) {\n          return this.findByModelCid(model.cid);\n        },\n        // Find a view by the `cid` of the model that was attached to\n        // it. Uses the model's `cid` to find the view `cid` and\n        // retrieve the view using it.\n        findByModelCid: function(modelCid) {\n          var viewCid = this._indexByModel[modelCid];\n          return this.findByCid(viewCid);\n        },\n        // Find a view by a custom indexer.\n        findByCustom: function(index) {\n          var viewCid = this._indexByCustom[index];\n          return this.findByCid(viewCid);\n        },\n        // Find by index. This is not guaranteed to be a\n        // stable index.\n        findByIndex: function(index) {\n          return _.values(this._views)[index];\n        },\n        // retrieve a view by its `cid` directly\n        findByCid: function(cid) {\n          return this._views[cid];\n        },\n        // Remove a view\n        remove: function(view) {\n          var viewCid = view.cid;\n          // delete model index\n          if (view.model) {\n            delete this._indexByModel[view.model.cid];\n          }\n          // delete custom index\n          _.any(this._indexByCustom, function(cid, key) {\n            if (cid === viewCid) {\n              delete this._indexByCustom[key];\n              return true;\n            }\n          }, this);\n          // remove the view from the container\n          delete this._views[viewCid];\n          // update the length\n          this._updateLength();\n          return this;\n        },\n        // Call a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.call`.\n        call: function(method) {\n          this.apply(method, _.tail(arguments));\n        },\n        // Apply a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.apply`.\n        apply: function(method, args) {\n          _.each(this._views, function(view) {\n            if (_.isFunction(view[method])) {\n              view[method].apply(view, args || []);\n            }\n          });\n        },\n        // Update the `.length` attribute on this container\n        _updateLength: function() {\n          this.length = _.size(this._views);\n        }\n      });\n      // Borrowing this code from Backbone.Collection:\n      // http://backbonejs.org/docs/backbone.html#section-106\n      //\n      // Mix in methods from Underscore, for iteration, and other\n      // collection related features.\n      var methods = [ \"forEach\", \"each\", \"map\", \"find\", \"detect\", \"filter\", \"select\", \"reject\", \"every\", \"all\", \"some\", \"any\", \"include\", \"contains\", \"invoke\", \"toArray\", \"first\", \"initial\", \"rest\", \"last\", \"without\", \"isEmpty\", \"pluck\", \"reduce\" ];\n      _.each(methods, function(method) {\n        Container.prototype[method] = function() {\n          var views = _.values(this._views);\n          var args = [ views ].concat(_.toArray(arguments));\n          return _[method].apply(_, args);\n        };\n      });\n      // return the public API\n      return Container;\n    }(Backbone, _);\n    Backbone.ChildViewContainer.VERSION = \"0.1.7\";\n    Backbone.ChildViewContainer.noConflict = function() {\n      Backbone.ChildViewContainer = previousChildViewContainer;\n      return this;\n    };\n    return Backbone.ChildViewContainer;\n  })(Backbone, _);\n\n  /* istanbul ignore next */\n  // Backbone.Wreqr (Backbone.Marionette)\n  // ----------------------------------\n  // v1.3.3\n  //\n  // Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.wreqr\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousWreqr = Backbone.Wreqr;\n    var Wreqr = Backbone.Wreqr = {};\n    Backbone.Wreqr.VERSION = \"1.3.3\";\n    Backbone.Wreqr.noConflict = function() {\n      Backbone.Wreqr = previousWreqr;\n      return this;\n    };\n    // Handlers\n    // --------\n    // A registry of functions to call, given a name\n    Wreqr.Handlers = function(Backbone, _) {\n      \"use strict\";\n      // Constructor\n      // -----------\n      var Handlers = function(options) {\n        this.options = options;\n        this._wreqrHandlers = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      Handlers.extend = Backbone.Model.extend;\n      // Instance Members\n      // ----------------\n      _.extend(Handlers.prototype, Backbone.Events, {\n        // Add multiple handlers using an object literal configuration\n        setHandlers: function(handlers) {\n          _.each(handlers, function(handler, name) {\n            var context = null;\n            if (_.isObject(handler) && !_.isFunction(handler)) {\n              context = handler.context;\n              handler = handler.callback;\n            }\n            this.setHandler(name, handler, context);\n          }, this);\n        },\n        // Add a handler for the given name, with an\n        // optional context to run the handler within\n        setHandler: function(name, handler, context) {\n          var config = {\n            callback: handler,\n            context: context\n          };\n          this._wreqrHandlers[name] = config;\n          this.trigger(\"handler:add\", name, handler, context);\n        },\n        // Determine whether or not a handler is registered\n        hasHandler: function(name) {\n          return !!this._wreqrHandlers[name];\n        },\n        // Get the currently registered handler for\n        // the specified name. Throws an exception if\n        // no handler is found.\n        getHandler: function(name) {\n          var config = this._wreqrHandlers[name];\n          if (!config) {\n            return;\n          }\n          return function() {\n            return config.callback.apply(config.context, arguments);\n          };\n        },\n        // Remove a handler for the specified name\n        removeHandler: function(name) {\n          delete this._wreqrHandlers[name];\n        },\n        // Remove all handlers from this registry\n        removeAllHandlers: function() {\n          this._wreqrHandlers = {};\n        }\n      });\n      return Handlers;\n    }(Backbone, _);\n    // Wreqr.CommandStorage\n    // --------------------\n    //\n    // Store and retrieve commands for execution.\n    Wreqr.CommandStorage = function() {\n      \"use strict\";\n      // Constructor function\n      var CommandStorage = function(options) {\n        this.options = options;\n        this._commands = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      // Instance methods\n      _.extend(CommandStorage.prototype, Backbone.Events, {\n        // Get an object literal by command name, that contains\n        // the `commandName` and the `instances` of all commands\n        // represented as an array of arguments to process\n        getCommands: function(commandName) {\n          var commands = this._commands[commandName];\n          // we don't have it, so add it\n          if (!commands) {\n            // build the configuration\n            commands = {\n              command: commandName,\n              instances: []\n            };\n            // store it\n            this._commands[commandName] = commands;\n          }\n          return commands;\n        },\n        // Add a command by name, to the storage and store the\n        // args for the command\n        addCommand: function(commandName, args) {\n          var command = this.getCommands(commandName);\n          command.instances.push(args);\n        },\n        // Clear all commands for the given `commandName`\n        clearCommands: function(commandName) {\n          var command = this.getCommands(commandName);\n          command.instances = [];\n        }\n      });\n      return CommandStorage;\n    }();\n    // Wreqr.Commands\n    // --------------\n    //\n    // A simple command pattern implementation. Register a command\n    // handler and execute it.\n    Wreqr.Commands = function(Wreqr, _) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        // default storage type\n        storageType: Wreqr.CommandStorage,\n        constructor: function(options) {\n          this.options = options || {};\n          this._initializeStorage(this.options);\n          this.on(\"handler:add\", this._executeCommands, this);\n          Wreqr.Handlers.prototype.constructor.apply(this, arguments);\n        },\n        // Execute a named command with the supplied args\n        execute: function(name) {\n          name = arguments[0];\n          var args = _.rest(arguments);\n          if (this.hasHandler(name)) {\n            this.getHandler(name).apply(this, args);\n          } else {\n            this.storage.addCommand(name, args);\n          }\n        },\n        // Internal method to handle bulk execution of stored commands\n        _executeCommands: function(name, handler, context) {\n          var command = this.storage.getCommands(name);\n          // loop through and execute all the stored command instances\n          _.each(command.instances, function(args) {\n            handler.apply(context, args);\n          });\n          this.storage.clearCommands(name);\n        },\n        // Internal method to initialize storage either from the type's\n        // `storageType` or the instance `options.storageType`.\n        _initializeStorage: function(options) {\n          var storage;\n          var StorageType = options.storageType || this.storageType;\n          if (_.isFunction(StorageType)) {\n            storage = new StorageType();\n          } else {\n            storage = StorageType;\n          }\n          this.storage = storage;\n        }\n      });\n    }(Wreqr, _);\n    // Wreqr.RequestResponse\n    // ---------------------\n    //\n    // A simple request/response implementation. Register a\n    // request handler, and return a response from it\n    Wreqr.RequestResponse = function(Wreqr, _) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        request: function(name) {\n          if (this.hasHandler(name)) {\n            return this.getHandler(name).apply(this, _.rest(arguments));\n          }\n        }\n      });\n    }(Wreqr, _);\n    // Event Aggregator\n    // ----------------\n    // A pub-sub object that can be used to decouple various parts\n    // of an application through event-driven architecture.\n    Wreqr.EventAggregator = function(Backbone, _) {\n      \"use strict\";\n      var EA = function() {};\n      // Copy the `extend` function used by Backbone's classes\n      EA.extend = Backbone.Model.extend;\n      // Copy the basic Backbone.Events on to the event aggregator\n      _.extend(EA.prototype, Backbone.Events);\n      return EA;\n    }(Backbone, _);\n    // Wreqr.Channel\n    // --------------\n    //\n    // An object that wraps the three messaging systems:\n    // EventAggregator, RequestResponse, Commands\n    Wreqr.Channel = function(Wreqr) {\n      \"use strict\";\n      var Channel = function(channelName) {\n        this.vent = new Backbone.Wreqr.EventAggregator();\n        this.reqres = new Backbone.Wreqr.RequestResponse();\n        this.commands = new Backbone.Wreqr.Commands();\n        this.channelName = channelName;\n      };\n      _.extend(Channel.prototype, {\n        // Remove all handlers from the messaging systems of this channel\n        reset: function() {\n          this.vent.off();\n          this.vent.stopListening();\n          this.reqres.removeAllHandlers();\n          this.commands.removeAllHandlers();\n          return this;\n        },\n        // Connect a hash of events; one for each messaging system\n        connectEvents: function(hash, context) {\n          this._connect(\"vent\", hash, context);\n          return this;\n        },\n        connectCommands: function(hash, context) {\n          this._connect(\"commands\", hash, context);\n          return this;\n        },\n        connectRequests: function(hash, context) {\n          this._connect(\"reqres\", hash, context);\n          return this;\n        },\n        // Attach the handlers to a given message system `type`\n        _connect: function(type, hash, context) {\n          if (!hash) {\n            return;\n          }\n          context = context || this;\n          var method = type === \"vent\" ? \"on\" : \"setHandler\";\n          _.each(hash, function(fn, eventName) {\n            this[type][method](eventName, _.bind(fn, context));\n          }, this);\n        }\n      });\n      return Channel;\n    }(Wreqr);\n    // Wreqr.Radio\n    // --------------\n    //\n    // An object that lets you communicate with many channels.\n    Wreqr.radio = function(Wreqr, _) {\n      \"use strict\";\n      var Radio = function() {\n        this._channels = {};\n        this.vent = {};\n        this.commands = {};\n        this.reqres = {};\n        this._proxyMethods();\n      };\n      _.extend(Radio.prototype, {\n        channel: function(channelName) {\n          if (!channelName) {\n            throw new Error(\"Channel must receive a name\");\n          }\n          return this._getChannel(channelName);\n        },\n        _getChannel: function(channelName) {\n          var channel = this._channels[channelName];\n          if (!channel) {\n            channel = new Wreqr.Channel(channelName);\n            this._channels[channelName] = channel;\n          }\n          return channel;\n        },\n        _proxyMethods: function() {\n          _.each([ \"vent\", \"commands\", \"reqres\" ], function(system) {\n            _.each(messageSystems[system], function(method) {\n              this[system][method] = proxyMethod(this, system, method);\n            }, this);\n          }, this);\n        }\n      });\n      var messageSystems = {\n        vent: [ \"on\", \"off\", \"trigger\", \"once\", \"stopListening\", \"listenTo\", \"listenToOnce\" ],\n        commands: [ \"execute\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ],\n        reqres: [ \"request\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ]\n      };\n      var proxyMethod = function(radio, system, method) {\n        return function(channelName) {\n          var messageSystem = radio._getChannel(channelName)[system];\n          return messageSystem[method].apply(messageSystem, _.rest(arguments));\n        };\n      };\n      return new Radio();\n    }(Wreqr, _);\n    return Backbone.Wreqr;\n  })(Backbone, _);\n\n  var previousMarionette = root.Marionette;\n  var previousMn = root.Mn;\n\n  var Marionette = Backbone.Marionette = {};\n\n  Marionette.VERSION = '2.4.2';\n\n  Marionette.noConflict = function() {\n    root.Marionette = previousMarionette;\n    root.Mn = previousMn;\n    return this;\n  };\n\n  Backbone.Marionette = Marionette;\n\n  // Get the Deferred creator for later use\n  Marionette.Deferred = Backbone.$.Deferred;\n\n  /* jshint unused: false *//* global console */\n\n  // Helpers\n  // -------\n\n  // Marionette.extend\n  // -----------------\n\n  // Borrow the Backbone `extend` method so we can use it as needed\n  Marionette.extend = Backbone.Model.extend;\n\n  // Marionette.isNodeAttached\n  // -------------------------\n\n  // Determine if `el` is a child of the document\n  Marionette.isNodeAttached = function(el) {\n    return Backbone.$.contains(document.documentElement, el);\n  };\n\n  // Merge `keys` from `options` onto `this`\n  Marionette.mergeOptions = function(options, keys) {\n    if (!options) { return; }\n    _.extend(this, _.pick(options, keys));\n  };\n\n  // Marionette.getOption\n  // --------------------\n\n  // Retrieve an object, function or other value from a target\n  // object or its `options`, with `options` taking precedence.\n  Marionette.getOption = function(target, optionName) {\n    if (!target || !optionName) { return; }\n    if (target.options && (target.options[optionName] !== undefined)) {\n      return target.options[optionName];\n    } else {\n      return target[optionName];\n    }\n  };\n\n  // Proxy `Marionette.getOption`\n  Marionette.proxyGetOption = function(optionName) {\n    return Marionette.getOption(this, optionName);\n  };\n\n  // Similar to `_.result`, this is a simple helper\n  // If a function is provided we call it with context\n  // otherwise just return the value. If the value is\n  // undefined return a default value\n  Marionette._getValue = function(value, context, params) {\n    if (_.isFunction(value)) {\n      value = params ? value.apply(context, params) : value.call(context);\n    }\n    return value;\n  };\n\n  // Marionette.normalizeMethods\n  // ----------------------\n\n  // Pass in a mapping of events => functions or function names\n  // and return a mapping of events => functions\n  Marionette.normalizeMethods = function(hash) {\n    return _.reduce(hash, function(normalizedHash, method, name) {\n      if (!_.isFunction(method)) {\n        method = this[method];\n      }\n      if (method) {\n        normalizedHash[name] = method;\n      }\n      return normalizedHash;\n    }, {}, this);\n  };\n\n  // utility method for parsing @ui. syntax strings\n  // into associated selector\n  Marionette.normalizeUIString = function(uiString, ui) {\n    return uiString.replace(/@ui\\.[a-zA-Z_$0-9]*/g, function(r) {\n      return ui[r.slice(4)];\n    });\n  };\n\n  // allows for the use of the @ui. syntax within\n  // a given key for triggers and events\n  // swaps the @ui with the associated selector.\n  // Returns a new, non-mutated, parsed events hash.\n  Marionette.normalizeUIKeys = function(hash, ui) {\n    return _.reduce(hash, function(memo, val, key) {\n      var normalizedKey = Marionette.normalizeUIString(key, ui);\n      memo[normalizedKey] = val;\n      return memo;\n    }, {});\n  };\n\n  // allows for the use of the @ui. syntax within\n  // a given value for regions\n  // swaps the @ui with the associated selector\n  Marionette.normalizeUIValues = function(hash, ui, properties) {\n    _.each(hash, function(val, key) {\n      if (_.isString(val)) {\n        hash[key] = Marionette.normalizeUIString(val, ui);\n      } else if (_.isObject(val) && _.isArray(properties)) {\n        _.extend(val, Marionette.normalizeUIValues(_.pick(val, properties), ui));\n        /* Value is an object, and we got an array of embedded property names to normalize. */\n        _.each(properties, function(property) {\n          var propertyVal = val[property];\n          if (_.isString(propertyVal)) {\n            val[property] = Marionette.normalizeUIString(propertyVal, ui);\n          }\n        });\n      }\n    });\n    return hash;\n  };\n\n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-121\n  Marionette.actAsCollection = function(object, listProperty) {\n    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n      'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n      'last', 'without', 'isEmpty', 'pluck'];\n\n    _.each(methods, function(method) {\n      object[method] = function() {\n        var list = _.values(_.result(this, listProperty));\n        var args = [list].concat(_.toArray(arguments));\n        return _[method].apply(_, args);\n      };\n    });\n  };\n\n  var deprecate = Marionette.deprecate = function(message, test) {\n    if (_.isObject(message)) {\n      message = (\n        message.prev + ' is going to be removed in the future. ' +\n        'Please use ' + message.next + ' instead.' +\n        (message.url ? ' See: ' + message.url : '')\n      );\n    }\n\n    if ((test === undefined || !test) && !deprecate._cache[message]) {\n      deprecate._warn('Deprecation warning: ' + message);\n      deprecate._cache[message] = true;\n    }\n  };\n\n  deprecate._warn = typeof console !== 'undefined' && (console.warn || console.log) || function() {};\n  deprecate._cache = {};\n\n  /* jshint maxstatements: 14, maxcomplexity: 7 */\n\n  // Trigger Method\n  // --------------\n\n  Marionette._triggerMethod = (function() {\n    // split the event name on the \":\"\n    var splitter = /(^|:)(\\w)/gi;\n\n    // take the event section (\"section1:section2:section3\")\n    // and turn it in to uppercase name\n    function getEventName(match, prefix, eventName) {\n      return eventName.toUpperCase();\n    }\n\n    return function(context, event, args) {\n      var noEventArg = arguments.length < 3;\n      if (noEventArg) {\n        args = event;\n        event = args[0];\n      }\n\n      // get the method name from the event name\n      var methodName = 'on' + event.replace(splitter, getEventName);\n      var method = context[methodName];\n      var result;\n\n      // call the onMethodName if it exists\n      if (_.isFunction(method)) {\n        // pass all args, except the event name\n        result = method.apply(context, noEventArg ? _.rest(args) : args);\n      }\n\n      // trigger the event, if a trigger method exists\n      if (_.isFunction(context.trigger)) {\n        if (noEventArg + args.length > 1) {\n          context.trigger.apply(context, noEventArg ? args : [event].concat(_.drop(args, 0)));\n        } else {\n          context.trigger(event);\n        }\n      }\n\n      return result;\n    };\n  })();\n\n  // Trigger an event and/or a corresponding method name. Examples:\n  //\n  // `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n  // call the \"onFoo\" method.\n  //\n  // `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n  // call the \"onFooBar\" method.\n  Marionette.triggerMethod = function(event) {\n    return Marionette._triggerMethod(this, arguments);\n  };\n\n  // triggerMethodOn invokes triggerMethod on a specific context\n  //\n  // e.g. `Marionette.triggerMethodOn(view, 'show')`\n  // will trigger a \"show\" event or invoke onShow the view.\n  Marionette.triggerMethodOn = function(context) {\n    var fnc = _.isFunction(context.triggerMethod) ?\n                  context.triggerMethod :\n                  Marionette.triggerMethod;\n\n    return fnc.apply(context, _.rest(arguments));\n  };\n\n  // DOM Refresh\n  // -----------\n\n  // Monitor a view's state, and after it has been rendered and shown\n  // in the DOM, trigger a \"dom:refresh\" event every time it is\n  // re-rendered.\n\n  Marionette.MonitorDOMRefresh = function(view) {\n\n    // track when the view has been shown in the DOM,\n    // using a Marionette.Region (or by other means of triggering \"show\")\n    function handleShow() {\n      view._isShown = true;\n      triggerDOMRefresh();\n    }\n\n    // track when the view has been rendered\n    function handleRender() {\n      view._isRendered = true;\n      triggerDOMRefresh();\n    }\n\n    // Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method\n    function triggerDOMRefresh() {\n      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {\n        if (_.isFunction(view.triggerMethod)) {\n          view.triggerMethod('dom:refresh');\n        }\n      }\n    }\n\n    view.on({\n      show: handleShow,\n      render: handleRender\n    });\n  };\n\n  /* jshint maxparams: 5 */\n\n  // Bind Entity Events & Unbind Entity Events\n  // -----------------------------------------\n  //\n  // These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n  // to methods on a target object.\n  //\n  // The first parameter, `target`, must have the Backbone.Events module mixed in.\n  //\n  // The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n  // any object that has Backbone.Events mixed in) to bind the events from.\n  //\n  // The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n  // configuration. Multiple handlers can be separated by a space. A\n  // function can be supplied instead of a string handler name.\n\n  (function(Marionette) {\n    'use strict';\n\n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function bindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n\n      _.each(methodNames, function(methodName) {\n\n        var method = target[methodName];\n        if (!method) {\n          throw new Marionette.Error('Method \"' + methodName +\n            '\" was configured as an event handler, but does not exist.');\n        }\n\n        target.listenTo(entity, evt, method);\n      });\n    }\n\n    // Bind the event to a supplied callback function\n    function bindToFunction(target, entity, evt, method) {\n      target.listenTo(entity, evt, method);\n    }\n\n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function unbindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n\n      _.each(methodNames, function(methodName) {\n        var method = target[methodName];\n        target.stopListening(entity, evt, method);\n      });\n    }\n\n    // Bind the event to a supplied callback function\n    function unbindToFunction(target, entity, evt, method) {\n      target.stopListening(entity, evt, method);\n    }\n\n    // generic looping function\n    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {\n      if (!entity || !bindings) { return; }\n\n      // type-check bindings\n      if (!_.isObject(bindings)) {\n        throw new Marionette.Error({\n          message: 'Bindings must be an object or function.',\n          url: 'marionette.functions.html#marionettebindentityevents'\n        });\n      }\n\n      // allow the bindings to be a function\n      bindings = Marionette._getValue(bindings, target);\n\n      // iterate the bindings and bind them\n      _.each(bindings, function(methods, evt) {\n\n        // allow for a function as the handler,\n        // or a list of event names as a string\n        if (_.isFunction(methods)) {\n          functionCallback(target, entity, evt, methods);\n        } else {\n          stringCallback(target, entity, evt, methods);\n        }\n\n      });\n    }\n\n    // Export Public API\n    Marionette.bindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);\n    };\n\n    Marionette.unbindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);\n    };\n\n    // Proxy `bindEntityEvents`\n    Marionette.proxyBindEntityEvents = function(entity, bindings) {\n      return Marionette.bindEntityEvents(this, entity, bindings);\n    };\n\n    // Proxy `unbindEntityEvents`\n    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {\n      return Marionette.unbindEntityEvents(this, entity, bindings);\n    };\n  })(Marionette);\n\n\n  // Error\n  // -----\n\n  var errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\n  Marionette.Error = Marionette.extend.call(Error, {\n    urlRoot: 'http://marionettejs.com/docs/v' + Marionette.VERSION + '/',\n\n    constructor: function(message, options) {\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      } else if (!options) {\n        options = {};\n      }\n\n      var error = Error.call(this, message);\n      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n      this.captureStackTrace();\n\n      if (options.url) {\n        this.url = this.urlRoot + options.url;\n      }\n    },\n\n    captureStackTrace: function() {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, Marionette.Error);\n      }\n    },\n\n    toString: function() {\n      return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n    }\n  });\n\n  Marionette.Error.extend = Marionette.extend;\n\n  // Callbacks\n  // ---------\n\n  // A simple way of managing a collection of callbacks\n  // and executing them at a later point in time, using jQuery's\n  // `Deferred` object.\n  Marionette.Callbacks = function() {\n    this._deferred = Marionette.Deferred();\n    this._callbacks = [];\n  };\n\n  _.extend(Marionette.Callbacks.prototype, {\n\n    // Add a callback to be executed. Callbacks added here are\n    // guaranteed to execute, even if they are added after the\n    // `run` method is called.\n    add: function(callback, contextOverride) {\n      var promise = _.result(this._deferred, 'promise');\n\n      this._callbacks.push({cb: callback, ctx: contextOverride});\n\n      promise.then(function(args) {\n        if (contextOverride) { args.context = contextOverride; }\n        callback.call(args.context, args.options);\n      });\n    },\n\n    // Run all registered callbacks with the context specified.\n    // Additional callbacks can be added after this has been run\n    // and they will still be executed.\n    run: function(options, context) {\n      this._deferred.resolve({\n        options: options,\n        context: context\n      });\n    },\n\n    // Resets the list of callbacks to be run, allowing the same list\n    // to be run multiple times - whenever the `run` method is called.\n    reset: function() {\n      var callbacks = this._callbacks;\n      this._deferred = Marionette.Deferred();\n      this._callbacks = [];\n\n      _.each(callbacks, function(cb) {\n        this.add(cb.cb, cb.ctx);\n      }, this);\n    }\n  });\n\n  // Controller\n  // ----------\n\n  // A multi-purpose object to use as a controller for\n  // modules and routers, and as a mediator for workflow\n  // and coordination of other objects, views, and more.\n  Marionette.Controller = function(options) {\n    this.options = options || {};\n\n    if (_.isFunction(this.initialize)) {\n      this.initialize(this.options);\n    }\n  };\n\n  Marionette.Controller.extend = Marionette.extend;\n\n  // Controller Methods\n  // --------------\n\n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Controller.prototype, Backbone.Events, {\n    destroy: function() {\n      Marionette._triggerMethod(this, 'before:destroy', arguments);\n      Marionette._triggerMethod(this, 'destroy', arguments);\n\n      this.stopListening();\n      this.off();\n      return this;\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n\n    // A handy way to merge options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption\n\n  });\n\n  // Object\n  // ------\n\n  // A Base Class that other Classes should descend from.\n  // Object borrows many conventions and utilities from Backbone.\n  Marionette.Object = function(options) {\n    this.options = _.extend({}, _.result(this, 'options'), options);\n\n    this.initialize.apply(this, arguments);\n  };\n\n  Marionette.Object.extend = Marionette.extend;\n\n  // Object Methods\n  // --------------\n\n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Object.prototype, Backbone.Events, {\n\n    //this is a noop method intended to be overridden by classes that extend from this base\n    initialize: function() {},\n\n    destroy: function() {\n      this.triggerMethod('before:destroy');\n      this.triggerMethod('destroy');\n      this.stopListening();\n\n      return this;\n    },\n\n    // Import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n\n    // A handy way to merge options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */\n\n  // Region\n  // ------\n\n  // Manage the visual regions of your composite application. See\n  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/\n\n  Marionette.Region = Marionette.Object.extend({\n    constructor: function(options) {\n\n      // set options temporarily so that we can get `el`.\n      // options will be overriden by Object.constructor\n      this.options = options || {};\n      this.el = this.getOption('el');\n\n      // Handle when this.el is passed in as a $ wrapped element.\n      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n      if (!this.el) {\n        throw new Marionette.Error({\n          name: 'NoElError',\n          message: 'An \"el\" must be specified for a region.'\n        });\n      }\n\n      this.$el = this.getEl(this.el);\n      Marionette.Object.call(this, options);\n    },\n\n    // Displays a backbone view instance inside of the region.\n    // Handles calling the `render` method for you. Reads content\n    // directly from the `el` attribute. Also calls an optional\n    // `onShow` and `onDestroy` method on your view, just after showing\n    // or just before destroying the view, respectively.\n    // The `preventDestroy` option can be used to prevent a view from\n    // the old view being destroyed on show.\n    // The `forceShow` option can be used to force a view to be\n    // re-rendered if it's already shown in the region.\n    show: function(view, options) {\n      if (!this._ensureElement()) {\n        return;\n      }\n\n      this._ensureViewIsIntact(view);\n\n      var showOptions     = options || {};\n      var isDifferentView = view !== this.currentView;\n      var preventDestroy  = !!showOptions.preventDestroy;\n      var forceShow       = !!showOptions.forceShow;\n\n      // We are only changing the view if there is a current view to change to begin with\n      var isChangingView = !!this.currentView;\n\n      // Only destroy the current view if we don't want to `preventDestroy` and if\n      // the view given in the first argument is different than `currentView`\n      var _shouldDestroyView = isDifferentView && !preventDestroy;\n\n      // Only show the view given in the first argument if it is different than\n      // the current view or if we want to re-show the view. Note that if\n      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.\n      var _shouldShowView = isDifferentView || forceShow;\n\n      if (isChangingView) {\n        this.triggerMethod('before:swapOut', this.currentView, this, options);\n      }\n\n      if (this.currentView) {\n        delete this.currentView._parent;\n      }\n\n      if (_shouldDestroyView) {\n        this.empty();\n\n      // A `destroy` event is attached to the clean up manually removed views.\n      // We need to detach this event when a new view is going to be shown as it\n      // is no longer relevant.\n      } else if (isChangingView && _shouldShowView) {\n        this.currentView.off('destroy', this.empty, this);\n      }\n\n      if (_shouldShowView) {\n\n        // We need to listen for if a view is destroyed\n        // in a way other than through the region.\n        // If this happens we need to remove the reference\n        // to the currentView since once a view has been destroyed\n        // we can not reuse it.\n        view.once('destroy', this.empty, this);\n        view.render();\n\n        view._parent = this;\n\n        if (isChangingView) {\n          this.triggerMethod('before:swap', view, this, options);\n        }\n\n        this.triggerMethod('before:show', view, this, options);\n        Marionette.triggerMethodOn(view, 'before:show', view, this, options);\n\n        if (isChangingView) {\n          this.triggerMethod('swapOut', this.currentView, this, options);\n        }\n\n        // An array of views that we're about to display\n        var attachedRegion = Marionette.isNodeAttached(this.el);\n\n        // The views that we're about to attach to the document\n        // It's important that we prevent _getNestedViews from being executed unnecessarily\n        // as it's a potentially-slow method\n        var displayedViews = [];\n\n        var attachOptions = _.extend({\n          triggerBeforeAttach: this.triggerBeforeAttach,\n          triggerAttach: this.triggerAttach\n        }, showOptions);\n\n        if (attachedRegion && attachOptions.triggerBeforeAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews, 'before:');\n        }\n\n        this.attachHtml(view);\n        this.currentView = view;\n\n        if (attachedRegion && attachOptions.triggerAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews);\n        }\n\n        if (isChangingView) {\n          this.triggerMethod('swap', view, this, options);\n        }\n\n        this.triggerMethod('show', view, this, options);\n        Marionette.triggerMethodOn(view, 'show', view, this, options);\n\n        return this;\n      }\n\n      return this;\n    },\n\n    triggerBeforeAttach: true,\n    triggerAttach: true,\n\n    _triggerAttach: function(views, prefix) {\n      var eventName = (prefix || '') + 'attach';\n      _.each(views, function(view) {\n        Marionette.triggerMethodOn(view, eventName, view, this);\n      }, this);\n    },\n\n    _displayedViews: function(view) {\n      return _.union([view], _.result(view, '_getNestedViews') || []);\n    },\n\n    _ensureElement: function() {\n      if (!_.isObject(this.el)) {\n        this.$el = this.getEl(this.el);\n        this.el = this.$el[0];\n      }\n\n      if (!this.$el || this.$el.length === 0) {\n        if (this.getOption('allowMissingEl')) {\n          return false;\n        } else {\n          throw new Marionette.Error('An \"el\" ' + this.$el.selector + ' must exist in DOM');\n        }\n      }\n      return true;\n    },\n\n    _ensureViewIsIntact: function(view) {\n      if (!view) {\n        throw new Marionette.Error({\n          name: 'ViewNotValid',\n          message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n        });\n      }\n\n      if (view.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + view.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n\n    // Override this method to change how the region finds the DOM\n    // element that it manages. Return a jQuery selector object scoped\n    // to a provided parent el or the document if none exists.\n    getEl: function(el) {\n      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));\n    },\n\n    // Override this method to change how the new view is\n    // appended to the `$el` that the region is managing\n    attachHtml: function(view) {\n      this.$el.contents().detach();\n\n      this.el.appendChild(view.el);\n    },\n\n    // Destroy the current view, if there is one. If there is no\n    // current view, it does nothing and returns immediately.\n    empty: function(options) {\n      var view = this.currentView;\n\n      var preventDestroy = Marionette._getValue(options, 'preventDestroy', this);\n      // If there is no view in the region\n      // we should not remove anything\n      if (!view) { return; }\n\n      view.off('destroy', this.empty, this);\n      this.triggerMethod('before:empty', view);\n      if (!preventDestroy) {\n        this._destroyView();\n      }\n      this.triggerMethod('empty', view);\n\n      // Remove region pointer to the currentView\n      delete this.currentView;\n\n      if (preventDestroy) {\n        this.$el.contents().detach();\n      }\n\n      return this;\n    },\n\n    // call 'destroy' or 'remove', depending on which is found\n    // on the view (if showing a raw Backbone view or a Marionette View)\n    _destroyView: function() {\n      var view = this.currentView;\n\n      if (view.destroy && !view.isDestroyed) {\n        view.destroy();\n      } else if (view.remove) {\n        view.remove();\n\n        // appending isDestroyed to raw Backbone View allows regions\n        // to throw a ViewDestroyedError for this view\n        view.isDestroyed = true;\n      }\n    },\n\n    // Attach an existing view to the region. This\n    // will not call `render` or `onShow` for the new view,\n    // and will not replace the current HTML for the `el`\n    // of the region.\n    attachView: function(view) {\n      this.currentView = view;\n      return this;\n    },\n\n    // Checks whether a view is currently present within\n    // the region. Returns `true` if there is and `false` if\n    // no view is present.\n    hasView: function() {\n      return !!this.currentView;\n    },\n\n    // Reset the region by destroying any existing view and\n    // clearing out the cached `$el`. The next time a view\n    // is shown via this region, the region will re-query the\n    // DOM for the region's `el`.\n    reset: function() {\n      this.empty();\n\n      if (this.$el) {\n        this.el = this.$el.selector;\n      }\n\n      delete this.$el;\n      return this;\n    }\n\n  },\n\n  // Static Methods\n  {\n\n    // Build an instance of a region by passing in a configuration object\n    // and a default region class to use if none is specified in the config.\n    //\n    // The config object should either be a string as a jQuery DOM selector,\n    // a Region class directly, or an object literal that specifies a selector,\n    // a custom regionClass, and any options to be supplied to the region:\n    //\n    // ```js\n    // {\n    //   selector: \"#foo\",\n    //   regionClass: MyCustomRegion,\n    //   allowMissingEl: false\n    // }\n    // ```\n    //\n    buildRegion: function(regionConfig, DefaultRegionClass) {\n      if (_.isString(regionConfig)) {\n        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);\n      }\n\n      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {\n        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);\n      }\n\n      if (_.isFunction(regionConfig)) {\n        return this._buildRegionFromRegionClass(regionConfig);\n      }\n\n      throw new Marionette.Error({\n        message: 'Improper region configuration type.',\n        url: 'marionette.region.html#region-configuration-types'\n      });\n    },\n\n    // Build the region from a string selector like '#foo-region'\n    _buildRegionFromSelector: function(selector, DefaultRegionClass) {\n      return new DefaultRegionClass({el: selector});\n    },\n\n    // Build the region from a configuration object\n    // ```js\n    // { selector: '#foo', regionClass: FooRegion, allowMissingEl: false }\n    // ```\n    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {\n      var RegionClass = regionConfig.regionClass || DefaultRegionClass;\n      var options = _.omit(regionConfig, 'selector', 'regionClass');\n\n      if (regionConfig.selector && !options.el) {\n        options.el = regionConfig.selector;\n      }\n\n      return new RegionClass(options);\n    },\n\n    // Build the region directly from a given `RegionClass`\n    _buildRegionFromRegionClass: function(RegionClass) {\n      return new RegionClass();\n    }\n  });\n\n  // Region Manager\n  // --------------\n\n  // Manage one or more related `Marionette.Region` objects.\n  Marionette.RegionManager = Marionette.Controller.extend({\n    constructor: function(options) {\n      this._regions = {};\n      this.length = 0;\n\n      Marionette.Controller.call(this, options);\n\n      this.addRegions(this.getOption('regions'));\n    },\n\n    // Add multiple regions using an object literal or a\n    // function that returns an object literal, where\n    // each key becomes the region name, and each value is\n    // the region definition.\n    addRegions: function(regionDefinitions, defaults) {\n      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);\n\n      return _.reduce(regionDefinitions, function(regions, definition, name) {\n        if (_.isString(definition)) {\n          definition = {selector: definition};\n        }\n        if (definition.selector) {\n          definition = _.defaults({}, definition, defaults);\n        }\n\n        regions[name] = this.addRegion(name, definition);\n        return regions;\n      }, {}, this);\n    },\n\n    // Add an individual region to the region manager,\n    // and return the region instance\n    addRegion: function(name, definition) {\n      var region;\n\n      if (definition instanceof Marionette.Region) {\n        region = definition;\n      } else {\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      }\n\n      this.triggerMethod('before:add:region', name, region);\n\n      region._parent = this;\n      this._store(name, region);\n\n      this.triggerMethod('add:region', name, region);\n      return region;\n    },\n\n    // Get a region by name\n    get: function(name) {\n      return this._regions[name];\n    },\n\n    // Gets all the regions contained within\n    // the `regionManager` instance.\n    getRegions: function() {\n      return _.clone(this._regions);\n    },\n\n    // Remove a region by name\n    removeRegion: function(name) {\n      var region = this._regions[name];\n      this._remove(name, region);\n\n      return region;\n    },\n\n    // Empty all regions in the region manager, and\n    // remove them\n    removeRegions: function() {\n      var regions = this.getRegions();\n      _.each(this._regions, function(region, name) {\n        this._remove(name, region);\n      }, this);\n\n      return regions;\n    },\n\n    // Empty all regions in the region manager, but\n    // leave them attached\n    emptyRegions: function() {\n      var regions = this.getRegions();\n      _.invoke(regions, 'empty');\n      return regions;\n    },\n\n    // Destroy all regions and shut down the region\n    // manager entirely\n    destroy: function() {\n      this.removeRegions();\n      return Marionette.Controller.prototype.destroy.apply(this, arguments);\n    },\n\n    // internal method to store regions\n    _store: function(name, region) {\n      if (!this._regions[name]) {\n        this.length++;\n      }\n\n      this._regions[name] = region;\n    },\n\n    // internal method to remove a region\n    _remove: function(name, region) {\n      this.triggerMethod('before:remove:region', name, region);\n      region.empty();\n      region.stopListening();\n\n      delete region._parent;\n      delete this._regions[name];\n      this.length--;\n      this.triggerMethod('remove:region', name, region);\n    }\n  });\n\n  Marionette.actAsCollection(Marionette.RegionManager.prototype, '_regions');\n\n\n  // Template Cache\n  // --------------\n\n  // Manage templates stored in `<script>` blocks,\n  // caching them for faster access.\n  Marionette.TemplateCache = function(templateId) {\n    this.templateId = templateId;\n  };\n\n  // TemplateCache object-level methods. Manage the template\n  // caches from these method calls instead of creating\n  // your own TemplateCache instances\n  _.extend(Marionette.TemplateCache, {\n    templateCaches: {},\n\n    // Get the specified template by id. Either\n    // retrieves the cached version, or loads it\n    // from the DOM.\n    get: function(templateId, options) {\n      var cachedTemplate = this.templateCaches[templateId];\n\n      if (!cachedTemplate) {\n        cachedTemplate = new Marionette.TemplateCache(templateId);\n        this.templateCaches[templateId] = cachedTemplate;\n      }\n\n      return cachedTemplate.load(options);\n    },\n\n    // Clear templates from the cache. If no arguments\n    // are specified, clears all templates:\n    // `clear()`\n    //\n    // If arguments are specified, clears each of the\n    // specified templates from the cache:\n    // `clear(\"#t1\", \"#t2\", \"...\")`\n    clear: function() {\n      var i;\n      var args = _.toArray(arguments);\n      var length = args.length;\n\n      if (length > 0) {\n        for (i = 0; i < length; i++) {\n          delete this.templateCaches[args[i]];\n        }\n      } else {\n        this.templateCaches = {};\n      }\n    }\n  });\n\n  // TemplateCache instance methods, allowing each\n  // template cache object to manage its own state\n  // and know whether or not it has been loaded\n  _.extend(Marionette.TemplateCache.prototype, {\n\n    // Internal method to load the template\n    load: function(options) {\n      // Guard clause to prevent loading this template more than once\n      if (this.compiledTemplate) {\n        return this.compiledTemplate;\n      }\n\n      // Load the template and compile it\n      var template = this.loadTemplate(this.templateId, options);\n      this.compiledTemplate = this.compileTemplate(template, options);\n\n      return this.compiledTemplate;\n    },\n\n    // Load a template from the DOM, by default. Override\n    // this method to provide your own template retrieval\n    // For asynchronous loading with AMD/RequireJS, consider\n    // using a template-loader plugin as described here:\n    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n    loadTemplate: function(templateId, options) {\n      var template = Backbone.$(templateId).html();\n\n      if (!template || template.length === 0) {\n        throw new Marionette.Error({\n          name: 'NoTemplateError',\n          message: 'Could not find template: \"' + templateId + '\"'\n        });\n      }\n\n      return template;\n    },\n\n    // Pre-compile the template before caching it. Override\n    // this method if you do not need to pre-compile a template\n    // (JST / RequireJS for example) or if you want to change\n    // the template engine used (Handebars, etc).\n    compileTemplate: function(rawTemplate, options) {\n      return _.template(rawTemplate, options);\n    }\n  });\n\n  // Renderer\n  // --------\n\n  // Render a template with data by passing in the template\n  // selector and the data to render.\n  Marionette.Renderer = {\n\n    // Render a template with data. The `template` parameter is\n    // passed to the `TemplateCache` object to retrieve the\n    // template function. Override this method to provide your own\n    // custom rendering and template handling for all of Marionette.\n    render: function(template, data) {\n      if (!template) {\n        throw new Marionette.Error({\n          name: 'TemplateNotFoundError',\n          message: 'Cannot render the template since its false, null or undefined.'\n        });\n      }\n\n      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);\n\n      return templateFunc(data);\n    }\n  };\n\n\n  /* jshint maxlen: 114, nonew: false */\n  // View\n  // ----\n\n  // The core view class that other Marionette views extend from.\n  Marionette.View = Backbone.View.extend({\n    isDestroyed: false,\n\n    constructor: function(options) {\n      _.bindAll(this, 'render');\n\n      options = Marionette._getValue(options, this);\n\n      // this exposes view options to the view initializer\n      // this is a backfill since backbone removed the assignment\n      // of this.options\n      // at some point however this may be removed\n      this.options = _.extend({}, _.result(this, 'options'), options);\n\n      this._behaviors = Marionette.Behaviors(this);\n\n      Backbone.View.call(this, this.options);\n\n      // SIRIANNI MANUAL PATCH OF https://github.com/marionettejs/backbone.marionette/pull/2241\n      this.delegateEntityEvents();\n\n      Marionette.MonitorDOMRefresh(this);\n    },\n\n    // Get the template for this view\n    // instance. You can set a `template` attribute in the view\n    // definition or pass a `template: \"whatever\"` parameter in\n    // to the constructor options.\n    getTemplate: function() {\n      return this.getOption('template');\n    },\n\n    // Serialize a model by returning its attributes. Clones\n    // the attributes to allow modification.\n    serializeModel: function(model) {\n      return model.toJSON.apply(model, _.rest(arguments));\n    },\n\n    // Mix in template helper methods. Looks for a\n    // `templateHelpers` attribute, which can either be an\n    // object literal, or a function that returns an object\n    // literal. All methods and attributes from this object\n    // are copies to the object passed in.\n    mixinTemplateHelpers: function(target) {\n      target = target || {};\n      var templateHelpers = this.getOption('templateHelpers');\n      templateHelpers = Marionette._getValue(templateHelpers, this);\n      return _.extend(target, templateHelpers);\n    },\n\n    // normalize the keys of passed hash with the views `ui` selectors.\n    // `{\"@ui.foo\": \"bar\"}`\n    normalizeUIKeys: function(hash) {\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, 'ui'));\n    },\n\n    // normalize the values of passed hash with the views `ui` selectors.\n    // `{foo: \"@ui.bar\"}`\n    normalizeUIValues: function(hash, properties) {\n      var ui = _.result(this, 'ui');\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIValues(hash, uiBindings || ui, properties);\n    },\n\n    // Configure `triggers` to forward DOM events to view\n    // events. `triggers: {\"click .foo\": \"do:foo\"}`\n    configureTriggers: function() {\n      if (!this.triggers) { return; }\n\n      // Allow `triggers` to be configured as a function\n      var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n      // Configure the triggers, prevent default\n      // action and stop propagation of DOM events\n      return _.reduce(triggers, function(events, value, key) {\n        events[key] = this._buildViewTrigger(value);\n        return events;\n      }, {}, this);\n    },\n\n// BEGIN SIRIANNI MANUAL PATCH OF https://github.com/marionettejs/backbone.marionette/pull/2241\n\n    // Overriding Backbone.View's `delegateEvents` to handle\n    // `events` and `triggers`\n    delegateEvents: function(eventsArg) {\n      var events = Marionette._getValue(eventsArg || this.events, this);\n\n      // normalize ui keys\n      events = this.normalizeUIKeys(events);\n      if(_.isUndefined(eventsArg)) {this.events = events;}\n\n      var combinedEvents = {};\n\n      // look up if this view has behavior events\n      var behaviorEvents = _.result(this, 'behaviorEvents') || {};\n      var triggers = this.configureTriggers();\n      var behaviorTriggers = _.result(this, 'behaviorTriggers') || {};\n\n      // behavior events will be overriden by view events and or triggers\n      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);\n\n      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n      return this;\n    },\n\n    // Handle `modelEvents`, and `collectionEvents` configuration\n    delegateEntityEvents: function() {\n      this.undelegateEntityEvents();\n\n      this.bindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.bindEntityEvents(this.collection, this.getOption('collectionEvents'));\n\n      _.each(this._behaviors, function(behavior) {\n        behavior.bindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.bindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n\n      return this;\n    },\n\n    // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n    undelegateEntityEvents: function() {\n      this.unbindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.unbindEntityEvents(this.collection, this.getOption('collectionEvents'));\n\n      _.each(this._behaviors, function(behavior) {\n        behavior.unbindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.unbindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n\n      return this;\n    },\n\n// END SIRIANNI MANUAL PATCH OF https://github.com/marionettejs/backbone.marionette/pull/2241\n\n    // Internal helper method to verify whether the view hasn't been destroyed\n    _ensureViewIsIntact: function() {\n      if (this.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + this.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n\n    // Default `destroy` implementation, for removing a view from the\n    // DOM and unbinding it. Regions will call this method\n    // for you. You can specify an `onDestroy` method in your view to\n    // add custom code that is called after the view is destroyed.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n\n      var args = _.toArray(arguments);\n\n      this.triggerMethod.apply(this, ['before:destroy'].concat(args));\n\n      // mark as destroyed before doing the actual destroy, to\n      // prevent infinite loops within \"destroy\" event handlers\n      // that are trying to destroy other views\n      this.isDestroyed = true;\n      this.triggerMethod.apply(this, ['destroy'].concat(args));\n\n      // unbind UI elements\n      this.unbindUIElements();\n\n      this.isRendered = false;\n\n      // remove the view from the DOM\n      this.remove();\n\n      // Call destroy on each behavior after\n      // destroying the view.\n      // This unbinds event listeners\n      // that behaviors have registered for.\n      _.invoke(this._behaviors, 'destroy', args);\n\n      return this;\n    },\n\n    bindUIElements: function() {\n      this._bindUIElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n    },\n\n    // This method binds the elements specified in the \"ui\" hash inside the view's code with\n    // the associated jQuery selectors.\n    _bindUIElements: function() {\n      if (!this.ui) { return; }\n\n      // store the ui hash in _uiBindings so they can be reset later\n      // and so re-rendering the view will be able to find the bindings\n      if (!this._uiBindings) {\n        this._uiBindings = this.ui;\n      }\n\n      // get the bindings result, as a function or otherwise\n      var bindings = _.result(this, '_uiBindings');\n\n      // empty the ui so we don't have anything to start with\n      this.ui = {};\n\n      // bind each of the selectors\n      _.each(bindings, function(selector, key) {\n        this.ui[key] = this.$(selector);\n      }, this);\n    },\n\n    // This method unbinds the elements specified in the \"ui\" hash\n    unbindUIElements: function() {\n      this._unbindUIElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n    },\n\n    _unbindUIElements: function() {\n      if (!this.ui || !this._uiBindings) { return; }\n\n      // delete all of the existing ui bindings\n      _.each(this.ui, function($el, name) {\n        delete this.ui[name];\n      }, this);\n\n      // reset the ui element to the original bindings configuration\n      this.ui = this._uiBindings;\n      delete this._uiBindings;\n    },\n\n    // Internal method to create an event handler for a given `triggerDef` like\n    // 'click:foo'\n    _buildViewTrigger: function(triggerDef) {\n      var hasOptions = _.isObject(triggerDef);\n\n      var options = _.defaults({}, (hasOptions ? triggerDef : {}), {\n        preventDefault: true,\n        stopPropagation: true\n      });\n\n      var eventName = hasOptions ? options.event : triggerDef;\n\n      return function(e) {\n        if (e) {\n          if (e.preventDefault && options.preventDefault) {\n            e.preventDefault();\n          }\n\n          if (e.stopPropagation && options.stopPropagation) {\n            e.stopPropagation();\n          }\n        }\n\n        var args = {\n          view: this,\n          model: this.model,\n          collection: this.collection\n        };\n\n        this.triggerMethod(eventName, args);\n      };\n    },\n\n    setElement: function() {\n      var ret = Backbone.View.prototype.setElement.apply(this, arguments);\n\n      // proxy behavior $el to the view's $el.\n      // This is needed because a view's $el proxy\n      // is not set until after setElement is called.\n      _.invoke(this._behaviors, 'proxyViewProperties', this);\n\n      return ret;\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: function() {\n      var ret = Marionette._triggerMethod(this, arguments);\n\n      this._triggerEventOnBehaviors(arguments);\n      this._triggerEventOnParentLayout(arguments[0], _.rest(arguments));\n\n      return ret;\n    },\n\n    _triggerEventOnBehaviors: function(args) {\n      var triggerMethod = Marionette._triggerMethod;\n      var behaviors = this._behaviors;\n      // Use good ol' for as this is a very hot function\n      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n        triggerMethod(behaviors[i], args);\n      }\n    },\n\n    _triggerEventOnParentLayout: function(eventName, args) {\n      var layoutView = this._parentLayoutView();\n      if (!layoutView) {\n        return;\n      }\n\n      // invoke triggerMethod on parent view\n      var eventPrefix = Marionette.getOption(layoutView, 'childViewEventPrefix');\n      var prefixedEventName = eventPrefix + ':' + eventName;\n\n      Marionette._triggerMethod(layoutView, [prefixedEventName, this].concat(args));\n\n      // call the parent view's childEvents handler\n      var childEvents = Marionette.getOption(layoutView, 'childEvents');\n      var normalizedChildEvents = layoutView.normalizeMethods(childEvents);\n\n      if (!!normalizedChildEvents && _.isFunction(normalizedChildEvents[eventName])) {\n        normalizedChildEvents[eventName].apply(layoutView, [this].concat(args));\n      }\n    },\n\n    // This method returns any views that are immediate\n    // children of this view\n    _getImmediateChildren: function() {\n      return [];\n    },\n\n    // Returns an array of every nested view within this view\n    _getNestedViews: function() {\n      var children = this._getImmediateChildren();\n\n      if (!children.length) { return children; }\n\n      return _.reduce(children, function(memo, view) {\n        if (!view._getNestedViews) { return memo; }\n        return memo.concat(view._getNestedViews());\n      }, children);\n    },\n\n    // Internal utility for building an ancestor\n    // view tree list.\n    _getAncestors: function() {\n      var ancestors = [];\n      var parent  = this._parent;\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent._parent;\n      }\n\n      return ancestors;\n    },\n\n    // Returns the containing parent view.\n    _parentLayoutView: function() {\n      var ancestors = this._getAncestors();\n      return _.find(ancestors, function(parent) {\n        return parent instanceof Marionette.LayoutView;\n      });\n    },\n\n    // Imports the \"normalizeMethods\" to transform hashes of\n    // events=>function references/names to a hash of events=>function references\n    normalizeMethods: Marionette.normalizeMethods,\n\n    // A handy way to merge passed-in options onto the instance\n    mergeOptions: Marionette.mergeOptions,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  // Item View\n  // ---------\n\n  // A single item view implementation that contains code for rendering\n  // with underscore.js templates, serializing the view's model or collection,\n  // and calling several methods on extended views, such as `onRender`.\n  Marionette.ItemView = Marionette.View.extend({\n\n    // Setting up the inheritance chain which allows changes to\n    // Marionette.View.prototype.constructor which allows overriding\n    constructor: function() {\n      Marionette.View.apply(this, arguments);\n    },\n\n    // Serialize the model or collection for the view. If a model is\n    // found, the view's `serializeModel` is called. If a collection is found,\n    // each model in the collection is serialized by calling\n    // the view's `serializeCollection` and put into an `items` array in\n    // the resulting data. If both are found, defaults to the model.\n    // You can override the `serializeData` method in your own view definition,\n    // to provide custom serialization for your view's data.\n    serializeData: function() {\n      if (!this.model && !this.collection) {\n        return {};\n      }\n\n      var args = [this.model || this.collection];\n      if (arguments.length) {\n        args.push.apply(args, arguments);\n      }\n\n      if (this.model) {\n        return this.serializeModel.apply(this, args);\n      } else {\n        return {\n          items: this.serializeCollection.apply(this, args)\n        };\n      }\n    },\n\n    // Serialize a collection by serializing each of its models.\n    serializeCollection: function(collection) {\n      return collection.toJSON.apply(collection, _.rest(arguments));\n    },\n\n    // Render the view, defaulting to underscore.js templates.\n    // You can override this in your view definition to provide\n    // a very specific rendering for your view. In general, though,\n    // you should override the `Marionette.Renderer` object to\n    // change how Marionette renders views.\n    render: function() {\n      this._ensureViewIsIntact();\n\n      this.triggerMethod('before:render', this);\n\n      this._renderTemplate();\n      this.isRendered = true;\n      this.bindUIElements();\n\n      this.triggerMethod('render', this);\n\n      return this;\n    },\n\n    // Internal method to render the template with the serialized data\n    // and template helpers via the `Marionette.Renderer` object.\n    // Throws an `UndefinedTemplateError` error if the template is\n    // any falsely value but literal `false`.\n    _renderTemplate: function() {\n      var template = this.getTemplate();\n\n      // Allow template-less item views\n      if (template === false) {\n        return;\n      }\n\n      if (!template) {\n        throw new Marionette.Error({\n          name: 'UndefinedTemplateError',\n          message: 'Cannot render the template since it is null or undefined.'\n        });\n      }\n\n      // Add in entity data and template helpers\n      var data = this.mixinTemplateHelpers(this.serializeData());\n\n      // Render and add to el\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n\n      return this;\n    },\n\n    // Attaches the content of a given view.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n\n      return this;\n    }\n  });\n\n  /* jshint maxstatements: 20, maxcomplexity: 7 */\n\n  // Collection View\n  // ---------------\n\n  // A view that iterates over a Backbone.Collection\n  // and renders an individual child view for each model.\n  Marionette.CollectionView = Marionette.View.extend({\n\n    // used as the prefix for child view events\n    // that are forwarded through the collectionview\n    childViewEventPrefix: 'childview',\n\n    // flag for maintaining the sorted order of the collection\n    sort: true,\n\n    // constructor\n    // option to pass `{sort: false}` to prevent the `CollectionView` from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    //\n    // option to pass `{comparator: compFunction()}` to allow the `CollectionView`\n    // to use a custom sort order for the collection.\n    constructor: function(options) {\n      this.once('render', this._initialEvents);\n      this._initChildViewStorage();\n\n      Marionette.View.apply(this, arguments);\n\n      this.on({\n        'before:show':   this._onBeforeShowCalled,\n        'show':          this._onShowCalled,\n        'before:attach': this._onBeforeAttachCalled,\n        'attach':        this._onAttachCalled\n      });\n      this.initRenderBuffer();\n    },\n\n    // Instead of inserting elements one by one into the page,\n    // it's much more performant to insert elements into a document\n    // fragment and then insert that document fragment into the page\n    initRenderBuffer: function() {\n      this._bufferedChildren = [];\n    },\n\n    startBuffering: function() {\n      this.initRenderBuffer();\n      this.isBuffering = true;\n    },\n\n    endBuffering: function() {\n      // Only trigger attach if already shown and attached, otherwise Region#show() handles this.\n      var canTriggerAttach = this._isShown && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n\n      this.isBuffering = false;\n\n      if (this._isShown) {\n        this._triggerMethodMany(this._bufferedChildren, this, 'before:show');\n      }\n      if (canTriggerAttach && this._triggerBeforeAttach) {\n        nestedViews = this._getNestedViews();\n        this._triggerMethodMany(nestedViews, this, 'before:attach');\n      }\n\n      this.attachBuffer(this, this._createBuffer());\n\n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = this._getNestedViews();\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      if (this._isShown) {\n        this._triggerMethodMany(this._bufferedChildren, this, 'show');\n      }\n      this.initRenderBuffer();\n    },\n\n    _triggerMethodMany: function(targets, source, eventName) {\n      var args = _.drop(arguments, 3);\n\n      _.each(targets, function(target) {\n        Marionette.triggerMethodOn.apply(target, [target, eventName, target, source].concat(args));\n      });\n    },\n\n    // Configured the initial events that the collection view\n    // binds to.\n    _initialEvents: function() {\n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this.render);\n\n        if (this.getOption('sort')) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n\n    // Handle a child added to the collection\n    _onCollectionAdd: function(child, collection, opts) {\n      var index;\n      if (opts.at !== undefined) {\n        index = opts.at;\n      } else {\n        index = _.indexOf(this._filteredSortedModels(), child);\n      }\n\n      if (this._shouldAddChild(child, index)) {\n        this.destroyEmptyView();\n        var ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }\n    },\n\n    // get the child view by model it holds, and remove it\n    _onCollectionRemove: function(model) {\n      var view = this.children.findByModel(model);\n      this.removeChildView(view);\n      this.checkEmpty();\n    },\n\n    _onBeforeShowCalled: function() {\n      // Reset attach event flags at the top of the Region#show() event lifecycle; if the Region's\n      // show() options permit onBeforeAttach/onAttach events, these flags will be set true again.\n      this._triggerBeforeAttach = this._triggerAttach = false;\n      this.children.each(function(childView) {\n        Marionette.triggerMethodOn(childView, 'before:show', childView);\n      });\n    },\n\n    _onShowCalled: function() {\n      this.children.each(function(childView) {\n        Marionette.triggerMethodOn(childView, 'show', childView);\n      });\n    },\n\n    // If during Region#show() onBeforeAttach was fired, continue firing it for child views\n    _onBeforeAttachCalled: function() {\n      this._triggerBeforeAttach = true;\n    },\n\n    // If during Region#show() onAttach was fired, continue firing it for child views\n    _onAttachCalled: function() {\n      this._triggerAttach = true;\n    },\n\n    // Render children views. Override this method to\n    // provide your own implementation of a render function for\n    // the collection view.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.triggerMethod('before:render', this);\n      this._renderChildren();\n      this.isRendered = true;\n      this.triggerMethod('render', this);\n      return this;\n    },\n\n    // Reorder DOM after sorting. When your element's rendering\n    // do not use their index, you can pass reorderOnSort: true\n    // to only reorder the DOM after a sort instead of rendering\n    // all the collectionView\n    reorder: function() {\n      var children = this.children;\n      var models = this._filteredSortedModels();\n      var modelsChanged = _.find(models, function(model) {\n        return !children.findByModel(model);\n      });\n\n      // If the models we're displaying have changed due to filtering\n      // We need to add and/or remove child views\n      // So render as normal\n      if (modelsChanged) {\n        this.render();\n      } else {\n        // get the DOM nodes in the same order as the models\n        var els = _.map(models, function(model, index) {\n          var view = children.findByModel(model);\n          view._index = index;\n          return view.el;\n        });\n\n        // since append moves elements that are already in the DOM,\n        // appending the elements will effectively reorder them\n        this.triggerMethod('before:reorder');\n        this._appendReorderedChildren(els);\n        this.triggerMethod('reorder');\n      }\n    },\n\n    // Render view after sorting. Override this method to\n    // change how the view renders after a `sort` on the collection.\n    // An example of this would be to only `renderChildren` in a `CompositeView`\n    // rather than the full view.\n    resortView: function() {\n      if (Marionette.getOption(this, 'reorderOnSort')) {\n        this.reorder();\n      } else {\n        this.render();\n      }\n    },\n\n    // Internal method. This checks for any changes in the order of the collection.\n    // If the index of any view doesn't match, it will render.\n    _sortViews: function() {\n      var models = this._filteredSortedModels();\n\n      // check for any changes in sort order of views\n      var orderChanged = _.find(models, function(item, index) {\n        var view = this.children.findByModel(item);\n        return !view || view._index !== index;\n      }, this);\n\n      if (orderChanged) {\n        this.resortView();\n      }\n    },\n\n    // Internal reference to what index a `emptyView` is.\n    _emptyViewIndex: -1,\n\n    // Internal method. Separated so that CompositeView can append to the childViewContainer\n    // if necessary\n    _appendReorderedChildren: function(children) {\n      this.$el.append(children);\n    },\n\n    // Internal method. Separated so that CompositeView can have\n    // more control over events being triggered, around the rendering\n    // process\n    _renderChildren: function() {\n      this.destroyEmptyView();\n      this.destroyChildren({checkEmpty: false});\n\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      } else {\n        this.triggerMethod('before:render:collection', this);\n        this.startBuffering();\n        this.showCollection();\n        this.endBuffering();\n        this.triggerMethod('render:collection', this);\n\n        // If we have shown children and none have passed the filter, show the empty view\n        if (this.children.isEmpty()) {\n          this.showEmptyView();\n        }\n      }\n    },\n\n    // Internal method to loop through collection and show each child view.\n    showCollection: function() {\n      var ChildView;\n\n      var models = this._filteredSortedModels();\n\n      _.each(models, function(child, index) {\n        ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }, this);\n    },\n\n    // Allow the collection to be sorted by a custom view comparator\n    _filteredSortedModels: function() {\n      var models;\n      var viewComparator = this.getViewComparator();\n\n      if (viewComparator) {\n        if (_.isString(viewComparator) || viewComparator.length === 1) {\n          models = this.collection.sortBy(viewComparator, this);\n        } else {\n          models = _.clone(this.collection.models).sort(_.bind(viewComparator, this));\n        }\n      } else {\n        models = this.collection.models;\n      }\n\n      // Filter after sorting in case the filter uses the index\n      if (this.getOption('filter')) {\n        models = _.filter(models, function(model, index) {\n          return this._shouldAddChild(model, index);\n        }, this);\n      }\n\n      return models;\n    },\n\n    // Internal method to show an empty view in place of\n    // a collection of child views, when the collection is empty\n    showEmptyView: function() {\n      var EmptyView = this.getEmptyView();\n\n      if (EmptyView && !this._showingEmptyView) {\n        this.triggerMethod('before:render:empty');\n\n        this._showingEmptyView = true;\n        var model = new Backbone.Model();\n        this.addEmptyView(model, EmptyView);\n\n        this.triggerMethod('render:empty');\n      }\n    },\n\n    // Internal method to destroy an existing emptyView instance\n    // if one exists. Called when a collection view has been\n    // rendered empty, and then a child is added to the collection.\n    destroyEmptyView: function() {\n      if (this._showingEmptyView) {\n        this.triggerMethod('before:remove:empty');\n\n        this.destroyChildren();\n        delete this._showingEmptyView;\n\n        this.triggerMethod('remove:empty');\n      }\n    },\n\n    // Retrieve the empty view class\n    getEmptyView: function() {\n      return this.getOption('emptyView');\n    },\n\n    // Render and show the emptyView. Similar to addChild method\n    // but \"add:child\" events are not fired, and the event from\n    // emptyView are not forwarded\n    addEmptyView: function(child, EmptyView) {\n      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or\n      // Region#show() handles this.\n      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n\n      // get the emptyViewOptions, falling back to childViewOptions\n      var emptyViewOptions = this.getOption('emptyViewOptions') ||\n                            this.getOption('childViewOptions');\n\n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);\n      }\n\n      // build the empty view\n      var view = this.buildChildView(child, EmptyView, emptyViewOptions);\n\n      view._parent = this;\n\n      // Proxy emptyView events\n      this.proxyChildEvents(view);\n\n      // trigger the 'before:show' event on `view` if the collection view has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, 'before:show', view);\n      }\n\n      // Store the `emptyView` like a `childView` so we can properly\n      // remove and/or close it later\n      this.children.add(view);\n\n      // Trigger `before:attach` following `render` to avoid adding logic and event triggers\n      // to public method `renderChildView()`.\n      if (canTriggerAttach && this._triggerBeforeAttach) {\n        nestedViews = [view].concat(view._getNestedViews());\n        view.once('render', function() {\n          this._triggerMethodMany(nestedViews, this, 'before:attach');\n        }, this);\n      }\n\n      // Render it and show it\n      this.renderChildView(view, this._emptyViewIndex);\n\n      // Trigger `attach`\n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = [view].concat(view._getNestedViews());\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      // call the 'show' method if the collection view has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, 'show', view);\n      }\n    },\n\n    // Retrieve the `childView` class, either from `this.options.childView`\n    // or from the `childView` in the object definition. The \"options\"\n    // takes precedence.\n    // This method receives the model that will be passed to the instance\n    // created from this `childView`. Overriding methods may use the child\n    // to determine what `childView` class to return.\n    getChildView: function(child) {\n      var childView = this.getOption('childView');\n\n      if (!childView) {\n        throw new Marionette.Error({\n          name: 'NoChildViewError',\n          message: 'A \"childView\" must be specified'\n        });\n      }\n\n      return childView;\n    },\n\n    // Render the child's view and add it to the\n    // HTML for the collection view at a given index.\n    // This will also update the indices of later views in the collection\n    // in order to keep the children in sync with the collection.\n    addChild: function(child, ChildView, index) {\n      var childViewOptions = this.getOption('childViewOptions');\n      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);\n\n      var view = this.buildChildView(child, ChildView, childViewOptions);\n\n      // increment indices of views after this one\n      this._updateIndices(view, true, index);\n\n      this.triggerMethod('before:add:child', view);\n      this._addChildView(view, index);\n      this.triggerMethod('add:child', view);\n\n      view._parent = this;\n\n      return view;\n    },\n\n    // Internal method. This decrements or increments the indices of views after the\n    // added/removed view to keep in sync with the collection.\n    _updateIndices: function(view, increment, index) {\n      if (!this.getOption('sort')) {\n        return;\n      }\n\n      if (increment) {\n        // assign the index to the view\n        view._index = index;\n      }\n\n      // update the indexes of views after this one\n      this.children.each(function(laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += increment ? 1 : -1;\n        }\n      });\n    },\n\n    // Internal Method. Add the view to children and render it at\n    // the given index.\n    _addChildView: function(view, index) {\n      // Only trigger attach if already shown, attached, and not buffering, otherwise endBuffer() or\n      // Region#show() handles this.\n      var canTriggerAttach = this._isShown && !this.isBuffering && Marionette.isNodeAttached(this.el);\n      var nestedViews;\n\n      // set up the child view event forwarding\n      this.proxyChildEvents(view);\n\n      // trigger the 'before:show' event on `view` if the collection view has already been shown\n      if (this._isShown && !this.isBuffering) {\n        Marionette.triggerMethodOn(view, 'before:show', view);\n      }\n\n      // Store the child view itself so we can properly remove and/or destroy it later\n      this.children.add(view);\n\n      // Trigger `before:attach` following `render` to avoid adding logic and event triggers\n      // to public method `renderChildView()`.\n      if (canTriggerAttach && this._triggerBeforeAttach) {\n        nestedViews = [view].concat(view._getNestedViews());\n        view.once('render', function() {\n          this._triggerMethodMany(nestedViews, this, 'before:attach');\n        }, this);\n      }\n\n      this.renderChildView(view, index);\n\n      // Trigger `attach`\n      if (canTriggerAttach && this._triggerAttach) {\n        nestedViews = [view].concat(view._getNestedViews());\n        this._triggerMethodMany(nestedViews, this, 'attach');\n      }\n      // Trigger `show`\n      if (this._isShown && !this.isBuffering) {\n        Marionette.triggerMethodOn(view, 'show', view);\n      }\n    },\n\n    // render the child view\n    renderChildView: function(view, index) {\n      view.render();\n      this.attachHtml(this, view, index);\n      return view;\n    },\n\n    // Build a `childView` for a model in the collection.\n    buildChildView: function(child, ChildViewClass, childViewOptions) {\n      var options = _.extend({model: child}, childViewOptions);\n      return new ChildViewClass(options);\n    },\n\n    // Remove the child view and destroy it.\n    // This function also updates the indices of\n    // later views in the collection in order to keep\n    // the children in sync with the collection.\n    removeChildView: function(view) {\n\n      if (view) {\n        this.triggerMethod('before:remove:child', view);\n\n        // call 'destroy' or 'remove', depending on which is found\n        if (view.destroy) {\n          view.destroy();\n        } else if (view.remove) {\n          view.remove();\n        }\n\n        delete view._parent;\n        this.stopListening(view);\n        this.children.remove(view);\n        this.triggerMethod('remove:child', view);\n\n        // decrement the index of views after this one\n        this._updateIndices(view, false);\n      }\n\n      return view;\n    },\n\n    // check if the collection is empty\n    isEmpty: function() {\n      return !this.collection || this.collection.length === 0;\n    },\n\n    // If empty, show the empty view\n    checkEmpty: function() {\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      }\n    },\n\n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(collectionView, buffer) {\n      collectionView.$el.append(buffer);\n    },\n\n    // Create a fragment buffer from the currently buffered children\n    _createBuffer: function() {\n      var elBuffer = document.createDocumentFragment();\n      _.each(this._bufferedChildren, function(b) {\n        elBuffer.appendChild(b.el);\n      });\n      return elBuffer;\n    },\n\n    // Append the HTML to the collection's `el`.\n    // Override this method to do something other\n    // than `.append`.\n    attachHtml: function(collectionView, childView, index) {\n      if (collectionView.isBuffering) {\n        // buffering happens on reset events and initial renders\n        // in order to reduce the number of inserts into the\n        // document, which are expensive.\n        collectionView._bufferedChildren.splice(index, 0, childView);\n      } else {\n        // If we've already rendered the main collection, append\n        // the new child into the correct order if we need to. Otherwise\n        // append to the end.\n        if (!collectionView._insertBefore(childView, index)) {\n          collectionView._insertAfter(childView);\n        }\n      }\n    },\n\n    // Internal method. Check whether we need to insert the view into\n    // the correct position.\n    _insertBefore: function(childView, index) {\n      var currentView;\n      var findPosition = this.getOption('sort') && (index < this.children.length - 1);\n      if (findPosition) {\n        // Find the view after this one\n        currentView = this.children.find(function(view) {\n          return view._index === index + 1;\n        });\n      }\n\n      if (currentView) {\n        currentView.$el.before(childView.el);\n        return true;\n      }\n\n      return false;\n    },\n\n    // Internal method. Append a view to the end of the $el\n    _insertAfter: function(childView) {\n      this.$el.append(childView.el);\n    },\n\n    // Internal method to set up the `children` object for\n    // storing all of the child views\n    _initChildViewStorage: function() {\n      this.children = new Backbone.ChildViewContainer();\n    },\n\n    // Handle cleanup and other destroying needs for the collection of views\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n\n      this.triggerMethod('before:destroy:collection');\n      this.destroyChildren({checkEmpty: false});\n      this.triggerMethod('destroy:collection');\n\n      return Marionette.View.prototype.destroy.apply(this, arguments);\n    },\n\n    // Destroy the child views that this collection view\n    // is holding on to, if any\n    destroyChildren: function(options) {\n      var destroyOptions = options || {};\n      var shouldCheckEmpty = true;\n      var childViews = this.children.map(_.identity);\n\n      if (!_.isUndefined(destroyOptions.checkEmpty)) {\n        shouldCheckEmpty = destroyOptions.checkEmpty;\n      }\n\n      this.children.each(this.removeChildView, this);\n\n      if (shouldCheckEmpty) {\n        this.checkEmpty();\n      }\n      return childViews;\n    },\n\n    // Return true if the given child should be shown\n    // Return false otherwise\n    // The filter will be passed (child, index, collection)\n    // Where\n    //  'child' is the given model\n    //  'index' is the index of that model in the collection\n    //  'collection' is the collection referenced by this CollectionView\n    _shouldAddChild: function(child, index) {\n      var filter = this.getOption('filter');\n      return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n    },\n\n    // Set up the child view event forwarding. Uses a \"childview:\"\n    // prefix in front of all forwarded events.\n    proxyChildEvents: function(view) {\n      var prefix = this.getOption('childViewEventPrefix');\n\n      // Forward all child view events through the parent,\n      // prepending \"childview:\" to the event name\n      this.listenTo(view, 'all', function() {\n        var args = _.toArray(arguments);\n        var rootEvent = args[0];\n        var childEvents = this.normalizeMethods(_.result(this, 'childEvents'));\n\n        args[0] = prefix + ':' + rootEvent;\n        args.splice(1, 0, view);\n\n        // call collectionView childEvent if defined\n        if (typeof childEvents !== 'undefined' && _.isFunction(childEvents[rootEvent])) {\n          childEvents[rootEvent].apply(this, args.slice(1));\n        }\n\n        this.triggerMethod.apply(this, args);\n      });\n    },\n\n    _getImmediateChildren: function() {\n      return _.values(this.children._views);\n    },\n\n    getViewComparator: function() {\n      return this.getOption('viewComparator');\n    }\n  });\n\n  /* jshint maxstatements: 17, maxlen: 117 */\n\n  // Composite View\n  // --------------\n\n  // Used for rendering a branch-leaf, hierarchical structure.\n  // Extends directly from CollectionView and also renders an\n  // a child view as `modelView`, for the top leaf\n  Marionette.CompositeView = Marionette.CollectionView.extend({\n\n    // Setting up the inheritance chain which allows changes to\n    // Marionette.CollectionView.prototype.constructor which allows overriding\n    // option to pass '{sort: false}' to prevent the CompositeView from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    constructor: function() {\n      Marionette.CollectionView.apply(this, arguments);\n    },\n\n    // Configured the initial events that the composite view\n    // binds to. Override this method to prevent the initial\n    // events, or to add your own initial events.\n    _initialEvents: function() {\n\n      // Bind only after composite view is rendered to avoid adding child views\n      // to nonexistent childViewContainer\n\n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this._renderChildren);\n\n        if (this.getOption('sort')) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n\n    // Retrieve the `childView` to be used when rendering each of\n    // the items in the collection. The default is to return\n    // `this.childView` or Marionette.CompositeView if no `childView`\n    // has been defined\n    getChildView: function(child) {\n      var childView = this.getOption('childView') || this.constructor;\n\n      return childView;\n    },\n\n    // Serialize the model for the view.\n    // You can override the `serializeData` method in your own view\n    // definition, to provide custom serialization for your view's data.\n    serializeData: function() {\n      var data = {};\n\n      if (this.model) {\n        data = _.partial(this.serializeModel, this.model).apply(this, arguments);\n      }\n\n      return data;\n    },\n\n    // Renders the model and the collection.\n    render: function() {\n      this._ensureViewIsIntact();\n      this._isRendering = true;\n      this.resetChildViewContainer();\n\n      this.triggerMethod('before:render', this);\n\n      this._renderTemplate();\n      this._renderChildren();\n\n      this._isRendering = false;\n      this.isRendered = true;\n      this.triggerMethod('render', this);\n      return this;\n    },\n\n    _renderChildren: function() {\n      if (this.isRendered || this._isRendering) {\n        Marionette.CollectionView.prototype._renderChildren.call(this);\n      }\n    },\n\n    // Render the root template that the children\n    // views are appended to\n    _renderTemplate: function() {\n      var data = {};\n      data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n\n      this.triggerMethod('before:render:template');\n\n      var template = this.getTemplate();\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n\n      // the ui bindings is done here and not at the end of render since they\n      // will not be available until after the model is rendered, but should be\n      // available before the collection is rendered.\n      this.bindUIElements();\n      this.triggerMethod('render:template');\n    },\n\n    // Attaches the content of the root.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n\n      return this;\n    },\n\n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(compositeView, buffer) {\n      var $container = this.getChildViewContainer(compositeView);\n      $container.append(buffer);\n    },\n\n    // Internal method. Append a view to the end of the $el.\n    // Overidden from CollectionView to ensure view is appended to\n    // childViewContainer\n    _insertAfter: function(childView) {\n      var $container = this.getChildViewContainer(this, childView);\n      $container.append(childView.el);\n    },\n\n    // Internal method. Append reordered childView'.\n    // Overidden from CollectionView to ensure reordered views\n    // are appended to childViewContainer\n    _appendReorderedChildren: function(children) {\n      var $container = this.getChildViewContainer(this);\n      $container.append(children);\n    },\n\n    // Internal method to ensure an `$childViewContainer` exists, for the\n    // `attachHtml` method to use.\n    getChildViewContainer: function(containerView, childView) {\n      if (!!containerView.$childViewContainer) {\n        return containerView.$childViewContainer;\n      }\n\n      var container;\n      var childViewContainer = Marionette.getOption(containerView, 'childViewContainer');\n      if (childViewContainer) {\n\n        var selector = Marionette._getValue(childViewContainer, containerView);\n\n        if (selector.charAt(0) === '@' && containerView.ui) {\n          container = containerView.ui[selector.substr(4)];\n        } else {\n          container = containerView.$(selector);\n        }\n\n        if (container.length <= 0) {\n          throw new Marionette.Error({\n            name: 'ChildViewContainerMissingError',\n            message: 'The specified \"childViewContainer\" was not found: ' + containerView.childViewContainer\n          });\n        }\n\n      } else {\n        container = containerView.$el;\n      }\n\n      containerView.$childViewContainer = container;\n      return container;\n    },\n\n    // Internal method to reset the `$childViewContainer` on render\n    resetChildViewContainer: function() {\n      if (this.$childViewContainer) {\n        this.$childViewContainer = undefined;\n      }\n    }\n  });\n\n  // Layout View\n  // -----------\n\n  // Used for managing application layoutViews, nested layoutViews and\n  // multiple regions within an application or sub-application.\n  //\n  // A specialized view class that renders an area of HTML and then\n  // attaches `Region` instances to the specified `regions`.\n  // Used for composite view management and sub-application areas.\n  Marionette.LayoutView = Marionette.ItemView.extend({\n    regionClass: Marionette.Region,\n\n    options: {\n      destroyImmediate: false\n    },\n\n    // used as the prefix for child view events\n    // that are forwarded through the layoutview\n    childViewEventPrefix: 'childview',\n\n    // Ensure the regions are available when the `initialize` method\n    // is called.\n    constructor: function(options) {\n      options = options || {};\n\n      this._firstRender = true;\n      this._initializeRegions(options);\n\n      Marionette.ItemView.call(this, options);\n    },\n\n    // LayoutView's render will use the existing region objects the\n    // first time it is called. Subsequent calls will destroy the\n    // views that the regions are showing and then reset the `el`\n    // for the regions to the newly rendered DOM elements.\n    render: function() {\n      this._ensureViewIsIntact();\n\n      if (this._firstRender) {\n        // if this is the first render, don't do anything to\n        // reset the regions\n        this._firstRender = false;\n      } else {\n        // If this is not the first render call, then we need to\n        // re-initialize the `el` for each region\n        this._reInitializeRegions();\n      }\n\n      return Marionette.ItemView.prototype.render.apply(this, arguments);\n    },\n\n    // Handle destroying regions, and then destroy the view itself.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n      // #2134: remove parent element before destroying the child views, so\n      // removing the child views doesn't retrigger repaints\n      if (this.getOption('destroyImmediate') === true) {\n        this.$el.remove();\n      }\n      this.regionManager.destroy();\n      return Marionette.ItemView.prototype.destroy.apply(this, arguments);\n    },\n\n    showChildView: function(regionName, view) {\n      return this.getRegion(regionName).show(view);\n    },\n\n    getChildView: function(regionName) {\n      return this.getRegion(regionName).currentView;\n    },\n\n    // Add a single region, by name, to the layoutView\n    addRegion: function(name, definition) {\n      var regions = {};\n      regions[name] = definition;\n      return this._buildRegions(regions)[name];\n    },\n\n    // Add multiple regions as a {name: definition, name2: def2} object literal\n    addRegions: function(regions) {\n      this.regions = _.extend({}, this.regions, regions);\n      return this._buildRegions(regions);\n    },\n\n    // Remove a single region from the LayoutView, by name\n    removeRegion: function(name) {\n      delete this.regions[name];\n      return this.regionManager.removeRegion(name);\n    },\n\n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this.regionManager.get(region);\n    },\n\n    // Get all regions\n    getRegions: function() {\n      return this.regionManager.getRegions();\n    },\n\n    // internal method to build regions\n    _buildRegions: function(regions) {\n      var defaults = {\n        regionClass: this.getOption('regionClass'),\n        parentEl: _.partial(_.result, this, 'el')\n      };\n\n      return this.regionManager.addRegions(regions, defaults);\n    },\n\n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on this layoutView.\n    _initializeRegions: function(options) {\n      var regions;\n      this._initRegionManager();\n\n      regions = Marionette._getValue(this.regions, this, [options]) || {};\n\n      // Enable users to define `regions` as instance options.\n      var regionOptions = this.getOption.call(options, 'regions');\n\n      // enable region options to be a function\n      regionOptions = Marionette._getValue(regionOptions, this, [options]);\n\n      _.extend(regions, regionOptions);\n\n      // Normalize region selectors hash to allow\n      // a user to use the @ui. syntax.\n      regions = this.normalizeUIValues(regions, ['selector', 'el']);\n\n      this.addRegions(regions);\n    },\n\n    // Internal method to re-initialize all of the regions by updating the `el` that\n    // they point to\n    _reInitializeRegions: function() {\n      this.regionManager.invoke('reset');\n    },\n\n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n\n    // Internal method to initialize the region manager\n    // and all regions in it\n    _initRegionManager: function() {\n      this.regionManager = this.getRegionManager();\n      this.regionManager._parent = this;\n\n      this.listenTo(this.regionManager, 'before:add:region', function(name) {\n        this.triggerMethod('before:add:region', name);\n      });\n\n      this.listenTo(this.regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        this.triggerMethod('add:region', name, region);\n      });\n\n      this.listenTo(this.regionManager, 'before:remove:region', function(name) {\n        this.triggerMethod('before:remove:region', name);\n      });\n\n      this.listenTo(this.regionManager, 'remove:region', function(name, region) {\n        delete this[name];\n        this.triggerMethod('remove:region', name, region);\n      });\n    },\n\n    _getImmediateChildren: function() {\n      return _.chain(this.regionManager.getRegions())\n        .pluck('currentView')\n        .compact()\n        .value();\n    }\n  });\n\n\n  // Behavior\n  // --------\n\n  // A Behavior is an isolated set of DOM /\n  // user interactions that can be mixed into any View.\n  // Behaviors allow you to blackbox View specific interactions\n  // into portable logical chunks, keeping your views simple and your code DRY.\n\n  Marionette.Behavior = Marionette.Object.extend({\n    constructor: function(options, view) {\n      // Setup reference to the view.\n      // this comes in handle when a behavior\n      // wants to directly talk up the chain\n      // to the view.\n      this.view = view;\n      this.defaults = _.result(this, 'defaults') || {};\n      this.options  = _.extend({}, this.defaults, options);\n      // Construct an internal UI hash using\n      // the views UI hash and then the behaviors UI hash.\n      // This allows the user to use UI hash elements\n      // defined in the parent view as well as those\n      // defined in the given behavior.\n      this.ui = _.extend({}, _.result(view, 'ui'), _.result(this, 'ui'));\n\n      Marionette.Object.apply(this, arguments);\n    },\n\n    // proxy behavior $ method to the view\n    // this is useful for doing jquery DOM lookups\n    // scoped to behaviors view.\n    $: function() {\n      return this.view.$.apply(this.view, arguments);\n    },\n\n    // Stops the behavior from listening to events.\n    // Overrides Object#destroy to prevent additional events from being triggered.\n    destroy: function() {\n      this.stopListening();\n\n      return this;\n    },\n\n    proxyViewProperties: function(view) {\n      this.$el = view.$el;\n      this.el = view.el;\n    }\n  });\n\n  /* jshint maxlen: 143 */\n  // Behaviors\n  // ---------\n\n  // Behaviors is a utility class that takes care of\n  // gluing your behavior instances to their given View.\n  // The most important part of this class is that you\n  // **MUST** override the class level behaviorsLookup\n  // method for things to work properly.\n\n  Marionette.Behaviors = (function(Marionette, _) {\n    // Borrow event splitter from Backbone\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n    function Behaviors(view, behaviors) {\n\n      if (!_.isObject(view.behaviors)) {\n        return {};\n      }\n\n      // Behaviors defined on a view can be a flat object literal\n      // or it can be a function that returns an object.\n      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, 'behaviors'));\n\n      // Wraps several of the view's methods\n      // calling the methods first on each behavior\n      // and then eventually calling the method on the view.\n      Behaviors.wrap(view, behaviors, _.keys(methods));\n      return behaviors;\n    }\n\n    var methods = {\n      behaviorTriggers: function(behaviorTriggers, behaviors) {\n        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);\n        return triggerBuilder.buildBehaviorTriggers();\n      },\n\n      behaviorEvents: function(behaviorEvents, behaviors) {\n        var _behaviorsEvents = {};\n\n        _.each(behaviors, function(b, i) {\n          var _events = {};\n          var behaviorEvents = _.clone(_.result(b, 'events')) || {};\n\n          // Normalize behavior events hash to allow\n          // a user to use the @ui. syntax.\n          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, getBehaviorsUI(b));\n\n          var j = 0;\n          _.each(behaviorEvents, function(behaviour, key) {\n            var match     = key.match(delegateEventSplitter);\n\n            // Set event name to be namespaced using the view cid,\n            // the behavior index, and the behavior event index\n            // to generate a non colliding event namespace\n            // http://api.jquery.com/event.namespace/\n            var eventName = match[1] + '.' + [this.cid, i, j++, ' '].join('');\n            var selector  = match[2];\n\n            var eventKey  = eventName + selector;\n            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];\n\n            _events[eventKey] = _.bind(handler, b);\n          }, this);\n\n          _behaviorsEvents = _.extend(_behaviorsEvents, _events);\n        }, this);\n\n        return _behaviorsEvents;\n      }\n    };\n\n    _.extend(Behaviors, {\n\n      // Placeholder method to be extended by the user.\n      // The method should define the object that stores the behaviors.\n      // i.e.\n      //\n      // ```js\n      // Marionette.Behaviors.behaviorsLookup: function() {\n      //   return App.Behaviors\n      // }\n      // ```\n      behaviorsLookup: function() {\n        throw new Marionette.Error({\n          message: 'You must define where your behaviors are stored.',\n          url: 'marionette.behaviors.html#behaviorslookup'\n        });\n      },\n\n      // Takes care of getting the behavior class\n      // given options and a key.\n      // If a user passes in options.behaviorClass\n      // default to using that. Otherwise delegate\n      // the lookup to the users `behaviorsLookup` implementation.\n      getBehaviorClass: function(options, key) {\n        if (options.behaviorClass) {\n          return options.behaviorClass;\n        }\n\n        // Get behavior class can be either a flat object or a method\n        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];\n      },\n\n      // Iterate over the behaviors object, for each behavior\n      // instantiate it and get its grouped behaviors.\n      parseBehaviors: function(view, behaviors) {\n        return _.chain(behaviors).map(function(options, key) {\n          var BehaviorClass = Behaviors.getBehaviorClass(options, key);\n\n          var behavior = new BehaviorClass(options, view);\n          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n          return [behavior].concat(nestedBehaviors);\n        }).flatten().value();\n      },\n\n      // Wrap view internal methods so that they delegate to behaviors. For example,\n      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.\n      // i.e.\n      //\n      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`\n      wrap: function(view, behaviors, methodNames) {\n        _.each(methodNames, function(methodName) {\n          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);\n        });\n      }\n    });\n\n    // Class to build handlers for `triggers` on behaviors\n    // for views\n    function BehaviorTriggersBuilder(view, behaviors) {\n      this._view      = view;\n      this._behaviors = behaviors;\n      this._triggers  = {};\n    }\n\n    _.extend(BehaviorTriggersBuilder.prototype, {\n      // Main method to build the triggers hash with event keys and handlers\n      buildBehaviorTriggers: function() {\n        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);\n        return this._triggers;\n      },\n\n      // Internal method to build all trigger handlers for a given behavior\n      _buildTriggerHandlersForBehavior: function(behavior, i) {\n        var triggersHash = _.clone(_.result(behavior, 'triggers')) || {};\n\n        triggersHash = Marionette.normalizeUIKeys(triggersHash, getBehaviorsUI(behavior));\n\n        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));\n      },\n\n      // Internal method to create and assign the trigger handler for a given\n      // behavior\n      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {\n        // Unique identifier for the `this._triggers` hash\n        var triggerKey = trigger.replace(/^\\S+/, function(triggerName) {\n          return triggerName + '.' + 'behaviortriggers' + i;\n        });\n\n        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);\n      }\n    });\n\n    function getBehaviorsUI(behavior) {\n      return behavior._uiBindings || behavior.ui;\n    }\n\n    return Behaviors;\n\n  })(Marionette, _);\n\n\n  // App Router\n  // ----------\n\n  // Reduce the boilerplate code of handling route events\n  // and then calling a single method on another object.\n  // Have your routers configured to call the method on\n  // your object, directly.\n  //\n  // Configure an AppRouter with `appRoutes`.\n  //\n  // App routers can only take one `controller` object.\n  // It is recommended that you divide your controller\n  // objects in to smaller pieces of related functionality\n  // and have multiple routers / controllers, instead of\n  // just one giant router and controller.\n  //\n  // You can also add standard routes to an AppRouter.\n\n  Marionette.AppRouter = Backbone.Router.extend({\n\n    constructor: function(options) {\n      this.options = options || {};\n\n      Backbone.Router.apply(this, arguments);\n\n      var appRoutes = this.getOption('appRoutes');\n      var controller = this._getController();\n      this.processAppRoutes(controller, appRoutes);\n      this.on('route', this._processOnRoute, this);\n    },\n\n    // Similar to route method on a Backbone Router but\n    // method is called on the controller\n    appRoute: function(route, methodName) {\n      var controller = this._getController();\n      this._addAppRoute(controller, route, methodName);\n    },\n\n    // process the route event and trigger the onRoute\n    // method call, if it exists\n    _processOnRoute: function(routeName, routeArgs) {\n      // make sure an onRoute before trying to call it\n      if (_.isFunction(this.onRoute)) {\n        // find the path that matches the current route\n        var routePath = _.invert(this.getOption('appRoutes'))[routeName];\n        this.onRoute(routeName, routePath, routeArgs);\n      }\n    },\n\n    // Internal method to process the `appRoutes` for the\n    // router, and turn them in to routes that trigger the\n    // specified method on the specified `controller`.\n    processAppRoutes: function(controller, appRoutes) {\n      if (!appRoutes) { return; }\n\n      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n      _.each(routeNames, function(route) {\n        this._addAppRoute(controller, route, appRoutes[route]);\n      }, this);\n    },\n\n    _getController: function() {\n      return this.getOption('controller');\n    },\n\n    _addAppRoute: function(controller, route, methodName) {\n      var method = controller[methodName];\n\n      if (!method) {\n        throw new Marionette.Error('Method \"' + methodName + '\" was not found on the controller');\n      }\n\n      this.route(route, methodName, _.bind(method, controller));\n    },\n\n    mergeOptions: Marionette.mergeOptions,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    triggerMethod: Marionette.triggerMethod,\n\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  // Application\n  // -----------\n\n  // Contain and manage the composite application as a whole.\n  // Stores and starts up `Region` objects, includes an\n  // event aggregator as `app.vent`\n  Marionette.Application = Marionette.Object.extend({\n    constructor: function(options) {\n      this._initializeRegions(options);\n      this._initCallbacks = new Marionette.Callbacks();\n      this.submodules = {};\n      _.extend(this, options);\n      this._initChannel();\n      Marionette.Object.call(this, options);\n    },\n\n    // Command execution, facilitated by Backbone.Wreqr.Commands\n    execute: function() {\n      this.commands.execute.apply(this.commands, arguments);\n    },\n\n    // Request/response, facilitated by Backbone.Wreqr.RequestResponse\n    request: function() {\n      return this.reqres.request.apply(this.reqres, arguments);\n    },\n\n    // Add an initializer that is either run at when the `start`\n    // method is called, or run immediately if added after `start`\n    // has already been called.\n    addInitializer: function(initializer) {\n      this._initCallbacks.add(initializer);\n    },\n\n    // kick off all of the application's processes.\n    // initializes all of the regions that have been added\n    // to the app, and runs all of the initializer functions\n    start: function(options) {\n      this.triggerMethod('before:start', options);\n      this._initCallbacks.run(options, this);\n      this.triggerMethod('start', options);\n    },\n\n    // Add regions to your app.\n    // Accepts a hash of named strings or Region objects\n    // addRegions({something: \"#someRegion\"})\n    // addRegions({something: Region.extend({el: \"#someRegion\"}) });\n    addRegions: function(regions) {\n      return this._regionManager.addRegions(regions);\n    },\n\n    // Empty all regions in the app, without removing them\n    emptyRegions: function() {\n      return this._regionManager.emptyRegions();\n    },\n\n    // Removes a region from your app, by name\n    // Accepts the regions name\n    // removeRegion('myRegion')\n    removeRegion: function(region) {\n      return this._regionManager.removeRegion(region);\n    },\n\n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this._regionManager.get(region);\n    },\n\n    // Get all the regions from the region manager\n    getRegions: function() {\n      return this._regionManager.getRegions();\n    },\n\n    // Create a module, attached to the application\n    module: function(moduleNames, moduleDefinition) {\n\n      // Overwrite the module class if the user specifies one\n      var ModuleClass = Marionette.Module.getClass(moduleDefinition);\n\n      var args = _.toArray(arguments);\n      args.unshift(this);\n\n      // see the Marionette.Module object for more information\n      return ModuleClass.create.apply(ModuleClass, args);\n    },\n\n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business-specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n\n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on the application instance\n    _initializeRegions: function(options) {\n      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};\n\n      this._initRegionManager();\n\n      // Enable users to define `regions` in instance options.\n      var optionRegions = Marionette.getOption(options, 'regions');\n\n      // Enable region options to be a function\n      if (_.isFunction(optionRegions)) {\n        optionRegions = optionRegions.call(this, options);\n      }\n\n      // Overwrite current regions with those passed in options\n      _.extend(regions, optionRegions);\n\n      this.addRegions(regions);\n\n      return this;\n    },\n\n    // Internal method to set up the region manager\n    _initRegionManager: function() {\n      this._regionManager = this.getRegionManager();\n      this._regionManager._parent = this;\n\n      this.listenTo(this._regionManager, 'before:add:region', function() {\n        Marionette._triggerMethod(this, 'before:add:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        Marionette._triggerMethod(this, 'add:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'before:remove:region', function() {\n        Marionette._triggerMethod(this, 'before:remove:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'remove:region', function(name) {\n        delete this[name];\n        Marionette._triggerMethod(this, 'remove:region', arguments);\n      });\n    },\n\n    // Internal method to setup the Wreqr.radio channel\n    _initChannel: function() {\n      this.channelName = _.result(this, 'channelName') || 'global';\n      this.channel = _.result(this, 'channel') || Backbone.Wreqr.radio.channel(this.channelName);\n      this.vent = _.result(this, 'vent') || this.channel.vent;\n      this.commands = _.result(this, 'commands') || this.channel.commands;\n      this.reqres = _.result(this, 'reqres') || this.channel.reqres;\n    }\n  });\n\n  /* jshint maxparams: 9 */\n\n  // Module\n  // ------\n\n  // A simple module system, used to create privacy and encapsulation in\n  // Marionette applications\n  Marionette.Module = function(moduleName, app, options) {\n    this.moduleName = moduleName;\n    this.options = _.extend({}, this.options, options);\n    // Allow for a user to overide the initialize\n    // for a given module instance.\n    this.initialize = options.initialize || this.initialize;\n\n    // Set up an internal store for sub-modules.\n    this.submodules = {};\n\n    this._setupInitializersAndFinalizers();\n\n    // Set an internal reference to the app\n    // within a module.\n    this.app = app;\n\n    if (_.isFunction(this.initialize)) {\n      this.initialize(moduleName, app, this.options);\n    }\n  };\n\n  Marionette.Module.extend = Marionette.extend;\n\n  // Extend the Module prototype with events / listenTo, so that the module\n  // can be used as an event aggregator or pub/sub.\n  _.extend(Marionette.Module.prototype, Backbone.Events, {\n\n    // By default modules start with their parents.\n    startWithParent: true,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic when extending Marionette.Module.\n    initialize: function() {},\n\n    // Initializer for a specific module. Initializers are run when the\n    // module's `start` method is called.\n    addInitializer: function(callback) {\n      this._initializerCallbacks.add(callback);\n    },\n\n    // Finalizers are run when a module is stopped. They are used to teardown\n    // and finalize any variables, references, events and other code that the\n    // module had set up.\n    addFinalizer: function(callback) {\n      this._finalizerCallbacks.add(callback);\n    },\n\n    // Start the module, and run all of its initializers\n    start: function(options) {\n      // Prevent re-starting a module that is already started\n      if (this._isInitialized) { return; }\n\n      // start the sub-modules (depth-first hierarchy)\n      _.each(this.submodules, function(mod) {\n        // check to see if we should start the sub-module with this parent\n        if (mod.startWithParent) {\n          mod.start(options);\n        }\n      });\n\n      // run the callbacks to \"start\" the current module\n      this.triggerMethod('before:start', options);\n\n      this._initializerCallbacks.run(options, this);\n      this._isInitialized = true;\n\n      this.triggerMethod('start', options);\n    },\n\n    // Stop this module by running its finalizers and then stop all of\n    // the sub-modules for this module\n    stop: function() {\n      // if we are not initialized, don't bother finalizing\n      if (!this._isInitialized) { return; }\n      this._isInitialized = false;\n\n      this.triggerMethod('before:stop');\n\n      // stop the sub-modules; depth-first, to make sure the\n      // sub-modules are stopped / finalized before parents\n      _.invoke(this.submodules, 'stop');\n\n      // run the finalizers\n      this._finalizerCallbacks.run(undefined, this);\n\n      // reset the initializers and finalizers\n      this._initializerCallbacks.reset();\n      this._finalizerCallbacks.reset();\n\n      this.triggerMethod('stop');\n    },\n\n    // Configure the module with a definition function and any custom args\n    // that are to be passed in to the definition function\n    addDefinition: function(moduleDefinition, customArgs) {\n      this._runModuleDefinition(moduleDefinition, customArgs);\n    },\n\n    // Internal method: run the module definition function with the correct\n    // arguments\n    _runModuleDefinition: function(definition, customArgs) {\n      // If there is no definition short circut the method.\n      if (!definition) { return; }\n\n      // build the correct list of arguments for the module definition\n      var args = _.flatten([\n        this,\n        this.app,\n        Backbone,\n        Marionette,\n        Backbone.$, _,\n        customArgs\n      ]);\n\n      definition.apply(this, args);\n    },\n\n    // Internal method: set up new copies of initializers and finalizers.\n    // Calling this method will wipe out all existing initializers and\n    // finalizers.\n    _setupInitializersAndFinalizers: function() {\n      this._initializerCallbacks = new Marionette.Callbacks();\n      this._finalizerCallbacks = new Marionette.Callbacks();\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod\n  });\n\n  // Class methods to create modules\n  _.extend(Marionette.Module, {\n\n    // Create a module, hanging off the app parameter as the parent object.\n    create: function(app, moduleNames, moduleDefinition) {\n      var module = app;\n\n      // get the custom args passed in after the module definition and\n      // get rid of the module name and definition function\n      var customArgs = _.drop(arguments, 3);\n\n      // Split the module names and get the number of submodules.\n      // i.e. an example module name of `Doge.Wow.Amaze` would\n      // then have the potential for 3 module definitions.\n      moduleNames = moduleNames.split('.');\n      var length = moduleNames.length;\n\n      // store the module definition for the last module in the chain\n      var moduleDefinitions = [];\n      moduleDefinitions[length - 1] = moduleDefinition;\n\n      // Loop through all the parts of the module definition\n      _.each(moduleNames, function(moduleName, i) {\n        var parentModule = module;\n        module = this._getModule(parentModule, moduleName, app, moduleDefinition);\n        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);\n      }, this);\n\n      // Return the last module in the definition chain\n      return module;\n    },\n\n    _getModule: function(parentModule, moduleName, app, def, args) {\n      var options = _.extend({}, def);\n      var ModuleClass = this.getClass(def);\n\n      // Get an existing module of this name if we have one\n      var module = parentModule[moduleName];\n\n      if (!module) {\n        // Create a new module if we don't have one\n        module = new ModuleClass(moduleName, app, options);\n        parentModule[moduleName] = module;\n        // store the module on the parent\n        parentModule.submodules[moduleName] = module;\n      }\n\n      return module;\n    },\n\n    // ## Module Classes\n    //\n    // Module classes can be used as an alternative to the define pattern.\n    // The extend function of a Module is identical to the extend functions\n    // on other Backbone and Marionette classes.\n    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.\n    getClass: function(moduleDefinition) {\n      var ModuleClass = Marionette.Module;\n\n      if (!moduleDefinition) {\n        return ModuleClass;\n      }\n\n      // If all of the module's functionality is defined inside its class,\n      // then the class can be passed in directly. `MyApp.module(\"Foo\", FooModule)`.\n      if (moduleDefinition.prototype instanceof ModuleClass) {\n        return moduleDefinition;\n      }\n\n      return moduleDefinition.moduleClass || ModuleClass;\n    },\n\n    // Add the module definition and add a startWithParent initializer function.\n    // This is complicated because module definitions are heavily overloaded\n    // and support an anonymous function, module class, or options object\n    _addModuleDefinition: function(parentModule, module, def, args) {\n      var fn = this._getDefine(def);\n      var startWithParent = this._getStartWithParent(def, module);\n\n      if (fn) {\n        module.addDefinition(fn, args);\n      }\n\n      this._addStartWithParent(parentModule, module, startWithParent);\n    },\n\n    _getStartWithParent: function(def, module) {\n      var swp;\n\n      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {\n        swp = module.constructor.prototype.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n\n      if (_.isObject(def)) {\n        swp = def.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n\n      return true;\n    },\n\n    _getDefine: function(def) {\n      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {\n        return def;\n      }\n\n      if (_.isObject(def)) {\n        return def.define;\n      }\n\n      return null;\n    },\n\n    _addStartWithParent: function(parentModule, module, startWithParent) {\n      module.startWithParent = module.startWithParent && startWithParent;\n\n      if (!module.startWithParent || !!module.startWithParentIsConfigured) {\n        return;\n      }\n\n      module.startWithParentIsConfigured = true;\n\n      parentModule.addInitializer(function(options) {\n        if (module.startWithParent) {\n          module.start(options);\n        }\n      });\n    }\n  });\n\n\n  return Marionette;\n}));\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    ARRAYS_LIST_FETCH,\n    ARRAYS_CSV_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('arrays'),\n    ...getInitialState('arraysCsv'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: ARRAYS_LIST_FETCH, stateKey: 'arrays' }),\n    ...createReducersForAction({ type: ARRAYS_CSV_FETCH, stateKey: 'arraysCsv' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).arrayCollection;\nexport const listSelector = createSelector(baseSelector, 'arrays');\nexport const csvSelector = createSelector(baseSelector, 'arraysCsv');\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport {\n    VOLUME_FETCH,\n    VOLUME_DETAIL_PROTECTION_FETCH,\n    VOLUME_DETAIL_CAPACITY_FETCH,\n    VOLUME_DETAIL_PERFORMANCE_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\nimport { firstOrNullData, firstOrNull } from '../../../../util/genericQuery';\n\nexport const getVolume = volumeSn => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUME_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('volumes')\n        .post({\n            scope: {\n                type: 'volume',\n                id: volumeSn,\n            },\n        })\n        .then(firstOrNullData)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getVolumeCapacity = (volumeSn, timeRange) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUME_DETAIL_CAPACITY_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('volume', ['capacity'])\n        .post({\n            ...timeRange,\n            scope: {\n                type: 'volume',\n                id: volumeSn,\n            },\n        })\n        .then(firstOrNull)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getVolumeProtection = volumeId => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUME_DETAIL_PROTECTION_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('volume', ['protection'])\n        .post({\n            scope: {\n                type: 'volume',\n                id: `${volumeId}`,\n            },\n        })\n        .then(x => x.data)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getVolumePerformance = (volumeSn, time) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUME_DETAIL_PERFORMANCE_FETCH, dispatch);\n    dispatchStart();\n\n    // TODO get severity score\n    return new Request().pod().genericQuery('volume', ['performance'])\n        .post({\n            scope: {\n                type: 'volume',\n                id: volumeSn,\n            },\n            ...time,\n        })\n        .then(x => x.data)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport classnames from 'classnames/bind';\nimport styles from './styles.scss';\n\nconst cx = classnames.bind(styles);\n\nconst isEmpty = value => !!((value === null || value === undefined || value === ''));\n\nconst percentGrowthRenderer = (growthValue, dayCount) => (\n    isEmpty(growthValue)\n        ? null\n        :\n        <div className=\"column flex-dir-column shrink\">\n            <PercentGrowth value={growthValue} isPercent />\n            <div className={cx('dayCount')}>\n                <small>{dayCount} Days</small>\n            </div>\n        </div>\n);\n\nconst PastGrowthList = ({ last90daysGrowth, last60daysGrowth, last30daysGrowth }) => {\n    if ([last30daysGrowth, last60daysGrowth, last90daysGrowth].every(isEmpty)) {\n        return null;\n    }\n\n    return (\n        <div className=\"flex-container row expanded align-center\">\n            {[last90daysGrowth, last60daysGrowth, last30daysGrowth].map((growth, index) =>\n                (percentGrowthRenderer(growth, 90 - (index * 30))))}\n        </div>\n    );\n};\n\nPastGrowthList.propTypes = {\n    last90daysGrowth: PropTypes.number,\n    last60daysGrowth: PropTypes.number,\n    last30daysGrowth: PropTypes.number,\n};\n\nexport default PastGrowthList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Headline from '@infosight/elmer/dist/components/Headline';\nimport KeyStatistic from '@infosight/elmer/dist/components/KeyStatistic';\nimport StatusIndicator from '@infosight/elmer/dist/components/StatusIndicator';\nimport NamedNimbleIcon from '../../../../components/NamedNimbleIcon';\nimport { getValueAndUnit, getByteValueAndUnit } from '../../../../../../util/numeralHelpers';\nimport { DataProtection, DaysUntilFull } from '../../../common';\nimport PastGrowthList from './PastGrowthList';\nimport {\n    NUMBER_FORMAT_PRECISION,\n    NUMBER_ABBREVIATE_FORMAT,\n    INFO_NOT_AVAILABLE,\n    formatValue,\n    isEmpty,\n} from '../../../../../constants';\n\nconst numeralPerSec = (value, format) => {\n    const valueAndUnit = getValueAndUnit(value, format);\n    const number = valueAndUnit[0];\n    const unit = valueAndUnit[1] || 'B';\n\n    if (!number) {\n        return INFO_NOT_AVAILABLE;\n    }\n    return (<span>{number} <small>{unit}/sec</small></span>);\n};\n\n\nfunction VolumeHeadline({\n    appCategory, dataUsageBytes, snapshotBytes, allocatedBytes, protectionLevel, last30daysGrowth,\n    last60daysGrowth, last90daysGrowth, daysUntilFull, avgIopsPerWeek, avgReadLatencyMs,\n    avgWriteLatencyMs, avgThroughput, dedupeEnabled }) {\n    const [volumeUsedValue, usedUnit] = getByteValueAndUnit(dataUsageBytes);\n    const [snapshotUsedValue, snapshotUnit] = getByteValueAndUnit(snapshotBytes);\n    const [volumeCapacityValue, capacityUnit] = getByteValueAndUnit(allocatedBytes);\n    const daysUntilFullDataExists = daysUntilFull !== null;\n\n    return (\n        <Headline>\n            <Headline.Section className=\"columns\">\n                <h6>Application</h6>\n                <div>\n                    <NamedNimbleIcon iconName={appCategory} className=\"flex-child-grow align-center\" />\n                </div>\n            </Headline.Section>\n            <Headline.Section className={daysUntilFullDataExists ? 'columns medium-11' : 'columns medium-9'}>\n                <div className=\"row\">\n                    <div className={daysUntilFullDataExists ? 'columns medium-10' : 'columns medium-12'}>\n                        <h6>Volume Usage</h6>\n                        <KeyStatistic>\n                            {volumeUsedValue} <small>{usedUnit}{volumeCapacityValue ? ' of ' : null}</small>{volumeCapacityValue} <small>{capacityUnit}</small>\n                        </KeyStatistic>\n                        <PastGrowthList last90daysGrowth={last90daysGrowth} last60daysGrowth={last60daysGrowth} last30daysGrowth={last30daysGrowth} />\n                    </div>\n                    <div className=\"columns\">\n                        <h6>Snapshot Usage</h6>\n                        <KeyStatistic>\n                            {snapshotUsedValue} <small>{snapshotUnit}</small>\n                        </KeyStatistic>\n                    </div>\n                    {daysUntilFullDataExists &&\n                        <div className=\"columns\">\n                            <h6>Days Until Full</h6>\n                            <KeyStatistic>\n                                <DaysUntilFull className=\"font-weight-inherit\" days={daysUntilFull} />\n                            </KeyStatistic>\n                        </div>\n                    }\n                    <div className=\"columns\">\n                        <h6>Dedupe</h6>\n                        <StatusIndicator status={dedupeEnabled ? 'success' : 'unavailable'} size=\"small\" />\n                        <span>{dedupeEnabled ? 'Enabled' : 'Disabled'}</span>\n                    </div>\n                </div>\n            </Headline.Section>\n            <Headline.Section className=\"columns medium-9\">\n                <h6 className=\"stacked-title\">Performance<br /><small>(Past Week Avg)</small></h6>\n                <div className=\"row\">\n                    <div className=\"columns\">\n                        <KeyStatistic className=\"nowrap\">\n                            {formatValue(avgIopsPerWeek, NUMBER_ABBREVIATE_FORMAT)} {!isEmpty(avgIopsPerWeek) ? <small>IO/sec</small> : null }\n                        </KeyStatistic>\n                        <h6 className=\"no-margin\">IOPS</h6>\n                    </div>\n                    <div className=\"columns\">\n                        <KeyStatistic>\n                            {numeralPerSec(avgThroughput, '0.0 ib')}\n                        </KeyStatistic>\n                        <h6 className=\"no-margin\">Throughput</h6>\n                    </div>\n                    <div className=\"columns\">\n                        <KeyStatistic>\n                            {formatValue(avgReadLatencyMs, NUMBER_FORMAT_PRECISION)} {!isEmpty(avgReadLatencyMs) ? <small>ms</small> : null }\n                        </KeyStatistic>\n                        <h6 className=\"no-margin\">R Latency</h6>\n                    </div>\n                    <div className=\"columns end\">\n                        <KeyStatistic>\n                            {formatValue(avgWriteLatencyMs, NUMBER_FORMAT_PRECISION)} {!isEmpty(avgWriteLatencyMs) ? <small>ms</small> : null }\n                        </KeyStatistic>\n                        <h6 className=\"no-margin\">W Latency</h6>\n                    </div>\n                </div>\n            </Headline.Section>\n            <Headline.Section className=\"columns\">\n                <h6>Data Protection</h6>\n                <div className=\"row\">\n                    <div className=\"columns\">\n                        <DataProtection protectionLevel={protectionLevel} />\n                    </div>\n                </div>\n            </Headline.Section>\n        </Headline>\n    );\n}\n\nVolumeHeadline.propTypes = {\n    appCategory: PropTypes.string,\n    dataUsageBytes: PropTypes.number,\n    snapshotBytes: PropTypes.number,\n    allocatedBytes: PropTypes.number,\n    protectionLevel: PropTypes.string,\n    last30daysGrowth: PropTypes.number,\n    last60daysGrowth: PropTypes.number,\n    last90daysGrowth: PropTypes.number,\n    daysUntilFull: PropTypes.number,\n    avgIopsPerWeek: PropTypes.number,\n    avgReadLatencyMs: PropTypes.number,\n    avgWriteLatencyMs: PropTypes.number,\n    avgThroughput: PropTypes.number,\n    dedupeEnabled: PropTypes.bool,\n};\n\nexport default VolumeHeadline;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport { getVolume, reset } from '../../actionCreators';\nimport { volumeSelector } from '../../reducer';\nimport VolumeHeadline from './VolumeHeadline';\n\nclass VolumeHeadlineContainer extends PureComponent {\n    componentWillMount() {\n        if (!this.props.loadingVolume && !this.props.loadedVolume) {\n            this.props.getVolume(this.props.volumeSn);\n        }\n    }\n\n    render() {\n        const { loadingVolume, volume } = this.props;\n\n        return (\n            <Async loading={loadingVolume}>\n                <VolumeHeadline {...(volume || {})} />\n            </Async>\n        );\n    }\n}\n\nVolumeHeadlineContainer.propTypes = {\n    volumeSn: PropTypes.string,\n    volume: PropTypes.shape({\n        applicationCategory: PropTypes.string,\n        dataUsageBytes: PropTypes.number,\n        snapshotBytes: PropTypes.number,\n        allocatedBytes: PropTypes.number,\n        perWeekIops: PropTypes.number,\n        perWeekMibs: PropTypes.number,\n        perWeekLatencyRead: PropTypes.number,\n        perWeekLatencyWrite: PropTypes.number,\n        localRecoveryPoint: PropTypes.bool,\n        remoteRecoveryPoint: PropTypes.bool,\n        last30daysGrowth: PropTypes.number,\n        last60daysGrowth: PropTypes.number,\n        last90daysGrowth: PropTypes.number,\n        avgIopsPerWeek: PropTypes.number,\n        avgReadLatencyMs: PropTypes.number,\n        avgWriteLatencyMs: PropTypes.number,\n        avgThroughput: PropTypes.number,\n    }),\n    loadingVolume: PropTypes.bool,\n    loadedVolume: PropTypes.bool,\n    getVolume: PropTypes.func,\n};\n\nVolumeHeadlineContainer.defaultProps = {\n    loadingVolume: false,\n};\n\nconst mapStateToProps = state => ({\n    ...volumeSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getVolume,\n    reset,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumeHeadlineContainer);\n","import { compact } from 'underscore';\nimport { CHART_COLORS } from '../../../util/chartColors';\n\nconst initialPlotBand = (chartRangeStart, timeSeriesStart) => {\n    if (chartRangeStart.valueOf() < timeSeriesStart) {\n        return {\n            color: CHART_COLORS.plotBandGrey,\n            from: chartRangeStart.valueOf(),\n            to: timeSeriesStart,\n        };\n    }\n\n    return undefined;\n};\n\nconst finalPlotBand = (chartRangeEnd, timeSeriesEnd) => {\n    if (chartRangeEnd.valueOf() > timeSeriesEnd) {\n        return {\n            color: CHART_COLORS.plotBandGrey,\n            from: timeSeriesEnd,\n            to: chartRangeEnd.valueOf(),\n        };\n    }\n\n    return undefined;\n};\n\nexport default ({ chartRangeStart, chartRangeEnd, timeSeriesStart, timeSeriesEnd }) =>\n    compact([initialPlotBand(chartRangeStart, timeSeriesStart), finalPlotBand(chartRangeEnd, timeSeriesEnd)]);\n","import moment from 'moment-timezone';\nimport { convertPhpFormatToMomentFormat } from '@infosight/elmer/dist/utils/time';\n\n/**\n * Generate the config used for a DateTime Axis label formatter\n *\n * Use: Spread the result into the xAxis.label object\n */\nexport function dateTimeAxisLabelFormatterSnippet() {\n    return {\n        formatter() {\n            return moment(this.value).format(convertPhpFormatToMomentFormat(this.dateTimeLabelFormat));\n        },\n    };\n}\n\n/**\n * Generate the config used for a DateTime Axis that includes the label formatter\n *\n * Use: Spread the result into the xAxis object\n */\nexport function dateTimeAxisSnippet() {\n    return {\n        type: 'datetime',\n        lineWidth: 2,\n        labels: {\n            ...dateTimeAxisLabelFormatterSnippet(),\n        },\n    };\n}\n\nexport function dateTimeXAxisMixin({ min, max }) {\n    return () => ({\n        xAxis: {\n            min,\n            max,\n        },\n    });\n}\n","import { isFunction, isObject } from 'underscore';\nimport { Highstock } from 'progeny/modules/nimble/highchartsProxy';\n\nconst mixinReducer = (accumulation, mixin) => {\n    let config;\n\n    if (isFunction(mixin)) {\n        config = mixin(accumulation);\n    } else if (isObject(mixin)) {\n        config = mixin;\n    } else {\n        return accumulation;\n    }\n\n    return config ? Highstock.merge(accumulation, config) : accumulation;\n};\n\nexport default function applyMixins(...mixins) {\n    return mixins.reduce(mixinReducer, {});\n}\n","export default function dragZoomMixin(onChartSelect) {\n    return {\n        chart: {\n            events: {\n                selection: onChartSelect,\n            },\n        },\n    };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { property } from 'underscore';\nimport numeral from 'numeral';\nimport moment from 'moment-timezone';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { DAY_MOMENT_FORMAT } from '@infosight/elmer/dist/utils/time';\nimport { getUnitPrefix, convertBytes, BINARY_BASE } from '@infosight/elmer/dist/utils/bytes';\nimport unavailableDataPlotBands from './unavailableDataPlotBands';\nimport { dateTimeAxisSnippet } from '../mixins/dateTimeAxis';\nimport { xAxisDataRange } from '../mixins/xAxis';\nimport applyMixins from '../mixins/applyMixins';\nimport dragZoomMixin from '../mixins/dragZoom';\n\nconst BYTE_FORMAT = '0.0 ib';\n\nconst Chart = mergeSharedTooltip({\n    valueFormatter(point) {\n        return numeral(point.y).format(BYTE_FORMAT);\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, DAY_MOMENT_FORMAT);\n    },\n});\n\nexport const FORECAST_RANGE_SERIES = 'forecastRangeSeries';\n\nconst ForecastChart = mergeSharedTooltip({\n    valueFormatter(point) {\n        if (point.series.options.id === FORECAST_RANGE_SERIES) {\n            return `${numeral(point.point.low).format(BYTE_FORMAT)} - ${numeral(point.point.high).format(BYTE_FORMAT)}`;\n        }\n        return numeral(point.y).format(BYTE_FORMAT);\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, DAY_MOMENT_FORMAT);\n    },\n});\n\nconst preventDefault = e => e.preventDefault();\n\nexport class CapacityTimeSeries extends Component {\n    shouldComponentUpdate({\n        timeSeries,\n        chartConfig,\n        chartRangeStart,\n        chartRangeEnd,\n        containerHeight,\n        containerWidth,\n    }) {\n        return !(\n            moment(chartRangeStart).isSame(this.props.chartRangeStart) &&\n            moment(chartRangeEnd).isSame(this.props.chartRangeEnd) &&\n            timeSeries === this.props.timeSeries &&\n            chartConfig === this.props.chartConfig &&\n            containerHeight === this.props.containerHeight &&\n            containerWidth === this.props.containerWidth\n        );\n    }\n\n    static getUnavailableDataBands(chartRangeStart, chartRangeEnd, timeSeries) {\n        return unavailableDataPlotBands({\n            chartRangeStart,\n            chartRangeEnd,\n            timeSeriesStart: timeSeries[0].timestamp,\n            timeSeriesEnd: timeSeries.slice(-1)[0].timestamp,\n        });\n    }\n\n    static getXAxis(chartRangeStart, chartRangeEnd, timeSeries, showUnavailableDataBands) {\n        return {\n            ...dateTimeAxisSnippet(),\n            ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n            plotBands: showUnavailableDataBands && CapacityTimeSeries.getUnavailableDataBands(\n                chartRangeStart,\n                chartRangeEnd,\n                timeSeries\n            ),\n        };\n    }\n\n    getMaxTotalCapacity(timeSeries) {\n        const { getTotalCapacity } = this.props;\n        let sizes = timeSeries.map(getTotalCapacity);\n        let maxSize = Math.max.apply(null, sizes);\n        if (!maxSize) {\n            const { getForecastedCapacity } = this.props;\n            sizes = timeSeries.map(getForecastedCapacity);\n            maxSize = Math.max.apply(null, sizes);\n        }\n        return maxSize;\n    }\n\n    getYAxis(yAxisTitle, enableYAxisTitle, timeSeries) {\n        const maxTotalCapacity = this.getMaxTotalCapacity(timeSeries);\n        const storageUnit = getUnitPrefix(maxTotalCapacity, BINARY_BASE);\n        const displayUnit = storageUnit ? `${storageUnit}iB` : '';\n        return {\n            title: {\n                text: `${yAxisTitle} (${displayUnit})`,\n                enabled: enableYAxisTitle,\n            },\n            labels: {\n                formatter() {\n                    return `${numeral(convertBytes(this.value, storageUnit)).format('0.0')} ${displayUnit}`;\n                },\n            },\n        };\n    }\n\n    capacityUsageSeries() {\n        const { timeSeries, getUsedCapacity, seriesName } = this.props;\n        return {\n            type: 'area',\n            name: seriesName,\n            data: timeSeries.map(val => ({\n                x: val.timestamp,\n                y: getUsedCapacity(val),\n            })),\n            events: {\n                legendItemClick: preventDefault,\n            },\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n            },\n            lineWidth: 2,\n        };\n    }\n\n    snapshotSeries() {\n        const { timeSeries, getSnapshotUsage, snapshotSeriesTitle } = this.props;\n\n        return {\n            type: 'area',\n            color: '#666',\n            fillColor: '#E2E6EA',\n            name: snapshotSeriesTitle,\n            data: timeSeries.map(val => ({\n                x: val.timestamp,\n                y: getSnapshotUsage(val),\n            })),\n            events: {\n                legendItemClick: preventDefault,\n            },\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n            },\n            lineWidth: 2,\n        };\n    }\n\n    totalCapacitySeries() {\n        const { timeSeries, getTotalCapacity, totalCapacityColor } = this.props;\n\n        return {\n            type: 'line',\n            color: totalCapacityColor,\n            name: 'Total Capacity',\n            data: timeSeries.map(val => ({\n                x: val.timestamp,\n                y: getTotalCapacity(val),\n            })),\n            events: {\n                legendItemClick: preventDefault,\n            },\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n            },\n            lineWidth: 2,\n        };\n    }\n\n    config() {\n        const {\n            chartRangeStart,\n            chartRangeEnd,\n            timeSeries,\n            showUnavailableDataBands,\n            dateTimeFormat,\n            yAxisTitle,\n            includeSnapshotUsageSeries,\n            includeTotalCapacityUsageSeries,\n            onChartSelect,\n            enableYAxisTitle,\n        } = this.props;\n\n        const series = [this.capacityUsageSeries()];\n\n        if (includeSnapshotUsageSeries) {\n            series.push(this.snapshotSeries());\n        }\n\n        if (includeTotalCapacityUsageSeries) {\n            series.push(this.totalCapacitySeries());\n        }\n\n        return applyMixins(\n            dragZoomMixin(onChartSelect),\n            {\n                series,\n                chart: {\n                    height: this.props.containerHeight,\n                    spacingTop: 20,\n                },\n                title: false,\n                xAxis: CapacityTimeSeries.getXAxis(\n                    chartRangeStart,\n                    chartRangeEnd,\n                    timeSeries,\n                    showUnavailableDataBands,\n                    dateTimeFormat),\n                yAxis: this.getYAxis(yAxisTitle, enableYAxisTitle, timeSeries),\n            }\n        );\n    }\n\n    render() {\n        const { timeSeries, forecastChart } = this.props;\n        const hasData = timeSeries && timeSeries.length > 0;\n        return (\n            <NoData hasData={hasData} message=\"No capacity history data available.\">\n                {() => (\n                    forecastChart ?\n                        <ForecastChart config={{ ...this.config(), ...this.props.chartConfig }} {...this.props} /> :\n                        <Chart config={{ ...this.config(), ...this.props.chartConfig }} {...this.props} />\n                )}\n            </NoData>\n        );\n    }\n}\n\nCapacityTimeSeries.propTypes = {\n\n    /**\n     * HighChart Config object.\n     * This will be shallow merged with default config object.\n     * Usage: If the default behavior of the chart has to be changed,\n     * construct an object with the key which has to be replaced with\n     * the default. The possible key values are 'chart', 'title',\n     * 'xAxis', 'yAxis', 'legend', 'series', 'credits'.\n     *\n     * If a config object with any other key is passed it will be just\n     * added to the default config object.\n     */\n    chartConfig: PropTypes.object,\n\n    timeSeries: PropTypes.arrayOf(PropTypes.shape({\n        timestamp: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n        usedCapacity: PropTypes.number,\n        totalCapacity: PropTypes.number,\n    })),\n\n    /**\n     * If `props.timeSeries.usedCapacity` has a different key, provide a getter to get the value\n     */\n    getUsedCapacity: PropTypes.func,\n\n    /**\n     * If `props.timeSeries.forecastedUsageBytes` has a different key, provide a getter to get the value\n     * Only used when usedCapacity is null\n     */\n    getForecastedCapacity: PropTypes.func,\n\n    /**\n     * If `props.timeSeries.totalCapacity` has a different key, provide a getter to get the value\n     */\n    getTotalCapacity: PropTypes.func,\n    totalCapacityColor: PropTypes.string,\n\n    /**\n     * If `props.timeSeries.snapshotUsage` has a different key, provide a getter to get the value\n     */\n    getSnapshotUsage: PropTypes.func,\n\n    /**\n     * Starting timestamp where the chart begins\n     * moment or number\n     */\n    chartRangeStart: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Last timestamp where the chart ends\n     * moment or number\n     */\n    chartRangeEnd: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Chart start/end date may differ from TimeSeries data availability.\n     * <p>\n     * In such cases to make the data unavailability more obvious,<br/> paint\n     * chart areas with different color where the data is unavailabile.\n     * </p>\n     */\n    showUnavailableDataBands: PropTypes.bool,\n\n    /**\n     *\n     * @ignore\n     */\n    containerHeight: PropTypes.number.isRequired,\n\n    /**\n     *\n     * @ignore\n     */\n    containerWidth: PropTypes.number.isRequired,\n\n    /**\n     * Title to be shown on Y-Axis\n     */\n    yAxisTitle: PropTypes.string,\n\n    /**\n     *  Name of the series, used to show as Legend too\n     */\n    seriesName: PropTypes.string,\n    snapshotSeriesTitle: PropTypes.string,\n\n    includeSnapshotUsageSeries: PropTypes.bool,\n    includeTotalCapacityUsageSeries: PropTypes.bool,\n\n    /**\n     * Date format to be used for plotting X-Axis\n     */\n    dateTimeFormat: PropTypes.string,\n\n    /**\n     * Is this a Capacity Forecast chart?\n     */\n    forecastChart: PropTypes.bool,\n\n    onChartSelect: PropTypes.func,\n\n    enableYAxisTitle: PropTypes.bool,\n};\n\nCapacityTimeSeries.defaultProps = {\n    containerHeight: 0,\n    showUnavailableDataBands: false,\n    dateTimeFormat: 'M/D',\n    yAxisTitle: 'Usage',\n    seriesName: 'Volume Usage',\n    getUsedCapacity: property('usedCapacity'),\n    getTotalCapacity: property('totalCapacity'),\n    totalCapacityColor: '#F1C232', // warningYellow\n    getSnapshotUsage: property('snapshotUsage'),\n    snapshotSeriesTitle: 'Snapshot Usage',\n    includeSnapshotUsageSeries: false,\n    includeTotalCapacityUsageSeries: false,\n    forecastChart: false,\n    enableYAxisTitle: false,\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default ReactDimensions({ elementResize: true })(CapacityTimeSeries);\n","import CapacityTimeSeriesChart, { FORECAST_RANGE_SERIES } from './CapacityTimeSeries';\n\nexport { FORECAST_RANGE_SERIES };\nexport default CapacityTimeSeriesChart;\n","import { isNumber, findLastIndex } from 'underscore';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\n\nconst preventDefault = e => e.preventDefault();\n\nlet legendIndex = 0;\nconst getLegendIndex = () => {\n    legendIndex += 1;\n    return legendIndex;\n};\n\nfunction dataUsageSeries(timeSeries) {\n    return {\n        type: 'area',\n        id: 'volumeUsage',\n        name: 'Volume Usage',\n        color: CHART_COLORS.blue,\n        fillColor: CHART_COLORS.blueLight,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.dataUsageBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction snapshotUsageSeries(timeSeries) {\n    return {\n        type: 'area',\n        id: 'snapshotUsage',\n        name: 'Snapshot Usage',\n        color: CHART_COLORS.teal,\n        fillColor: CHART_COLORS.tealLight,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.snapshotUsageBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction allocatedCapacitySeries(timeSeries) {\n    // Reverse search the data array for the last actual data point ( data point just before the forecast starts)\n    const lastActualDataPoint = timeSeries[findLastIndex(timeSeries, { dataSource: 'Actual' })];\n    return {\n        type: 'line',\n        id: 'Capacity',\n        name: 'Volume Capacity',\n        color: CHART_COLORS.redOrange,\n        lineWidth: 2,\n        data: lastActualDataPoint && timeSeries.map(val => ({\n            x: val.timestamp,\n            y: isNumber(val.allocatedBytes) ? val.allocatedBytes : lastActualDataPoint.allocatedBytes,\n        })),\n        step: true,\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction usageForecastSeries(timeSeries) {\n    return {\n        type: 'line',\n        id: 'forecastedUsage',\n        name: 'Forecasted Volume Usage',\n        color: CHART_COLORS.blue,\n        dashStyle: 'shortdash',\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.forecastedUsageBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction usageRangeForecastSeries(timeSeries, forecastRangeId) {\n    return {\n        type: 'arearange',\n        id: forecastRangeId,\n        name: 'Forecasted Range',\n        color: CHART_COLORS.blue,\n        linkedTo: 'forecastedUsage',\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            low: val.forecastedLowerBoundBytes,\n            high: val.forecastedUpperBoundBytes,\n        })),\n        lineWidth: 0,\n        fillOpacity: 0.3,\n        zIndex: 0,\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nexport default ({ timeseries, forecastRangeId }) => ({\n    series: [\n        allocatedCapacitySeries(timeseries),\n        snapshotUsageSeries(timeseries),\n        dataUsageSeries(timeseries),\n        usageRangeForecastSeries(timeseries, forecastRangeId),\n        usageForecastSeries(timeseries),\n    ],\n    plotOptions: {\n        area: {\n            animation: false,\n            stacking: 'normal',\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                states: {\n                    hover: {\n                        enabled: true,\n                    },\n                },\n            },\n        },\n        line: {\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                states: {\n                    hover: {\n                        enabled: true,\n                    },\n                },\n            },\n        },\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { property } from 'underscore';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport CapacityTimeSeries, { FORECAST_RANGE_SERIES } from '../../../../../charts/CapacityTimeSeries';\nimport chartOptions from './capacityChartOptions';\nimport { VolumeDataUsageInfo } from '../../../common';\n\nconst VolumeCapacityChart = ({ volumeCapacity, onChartSelect }) => (\n    <Card title={<h2><VolumeDataUsageInfo title=\"Usage\" /></h2>}>\n        <div className=\"chart-container--medium\">\n            <CapacityTimeSeries\n                timeSeries={volumeCapacity.data.timeseries}\n                chartRangeStart={volumeCapacity.meta.time.start}\n                chartRangeEnd={volumeCapacity.meta.time.end}\n                getTotalCapacity={property('allocatedBytes')}\n                getForecastedCapacity={property('forecastedUsageBytes')}\n                chartConfig={chartOptions({ timeseries: volumeCapacity.data.timeseries, forecastRangeId: FORECAST_RANGE_SERIES })}\n                forecastChart\n                onChartSelect={onChartSelect}\n            />\n        </div>\n    </Card>\n);\n\nVolumeCapacityChart.propTypes = {\n    volumeCapacity: PropTypes.shape({\n        data: PropTypes.shape({\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                dataUsageBytes: PropTypes.number,\n                sizeBytes: PropTypes.number,\n                snapshotUsageBytes: PropTypes.number,\n                timestamp: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n    onChartSelect: PropTypes.func,\n};\n\nexport default VolumeCapacityChart;\n","const buildParam = (type, param) => `capacity.${type}${param}`;\nexport const timeParam = param => buildParam('time.', param);\n\nconst capacityParam = param => `capacity.${param || ''}`;\nexport const capacityTimeRangeParam = param => capacityParam(`time.${param || ''}`);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport {\n    QueryTimeRangeSelector,\n    TimeRangeSelection,\n    deserialize,\n    makeChartSelector,\n    makeRangeSelector,\n} from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { getVolumeCapacity } from '../../actionCreators';\nimport { capacitySelector } from '../../reducer';\nimport VolumeCapacityChart from './VolumeCapacityChart';\nimport { capacityTimeRangeParam } from '../../queryParams';\n\nclass CapacityChartContainer extends Component {\n    componentDidMount() {\n        const {\n            loadingVolumeCapacity,\n            loadedVolumeCapacity,\n        } = this.props;\n\n        if (!loadingVolumeCapacity && !loadedVolumeCapacity) {\n            this.fetchData(this.props);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { volumeSn, timeRange } = nextProps;\n\n        if (volumeSn !== this.props.volumeSn || !timeRange.equals(this.props.timeRange)) {\n            this.fetchData(nextProps);\n        }\n    }\n\n    fetchData(props) {\n        let { timeRange } = props;\n\n        if (timeRange.type === 'DURATION') {\n            // Avoid fetching only forecast data\n            const { from } = timeRange.asFixedRange();\n            timeRange = {\n                time: {\n                    range: {\n                        start: from.valueOf(),\n                    },\n                },\n            };\n        } else {\n            timeRange = timeRange.toGenericQueryTime();\n        }\n\n        this.props.getVolumeCapacity(props.volumeSn, timeRange);\n    }\n\n    render() {\n        const { volumeCapacity, timeRange, loadingVolumeCapacity, history, location } = this.props;\n        let displayTimeRange;\n        const hasCapacityData = !!(volumeCapacity && volumeCapacity.data.timeseries);\n        if (hasCapacityData) {\n            displayTimeRange = TimeRangeSelection.toTimeRangeSelection(volumeCapacity.meta.time);\n        }\n\n        const onSelectRange = makeRangeSelector(location, capacityTimeRangeParam(), false, history);\n        const onChartSelect = makeChartSelector(onSelectRange);\n\n        return (\n            <div>\n                <QueryTimeRangeSelector\n                    parameterPrefix={capacityTimeRangeParam()}\n                    value={timeRange}\n                    presets={QueryTimeRangeSelector.PRESETS.NONVOLATILE}\n                    displayValue={displayTimeRange}\n                    card\n                />\n                <Async loading={loadingVolumeCapacity}>\n                    <NoData hasData={hasCapacityData}>\n                        {() => <VolumeCapacityChart volumeCapacity={volumeCapacity} onChartSelect={onChartSelect} />}\n                    </NoData>\n                </Async>\n            </div>\n        );\n    }\n}\n\nCapacityChartContainer.propTypes = {\n    volumeSn: PropTypes.string.isRequired,\n    loadingVolumeCapacity: PropTypes.bool,\n    loadedVolumeCapacity: PropTypes.bool,\n    getVolumeCapacity: PropTypes.func,\n    volumeCapacity: PropTypes.shape({\n        data: PropTypes.shape({\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                dataUsageBytes: PropTypes.number,\n                sizeBytes: PropTypes.number,\n                snapshotUsageBytes: PropTypes.number,\n                timestamp: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n    timeRange: PropTypes.instanceOf(TimeRangeSelection).isRequired,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object,\n};\n\nconst mapUrlToProps = ({ match: { params } }) => ({\n    timeRange: deserialize(params, capacityTimeRangeParam('')) || QueryTimeRangeSelector.DEFAULTS.NONVOLATILE,\n});\n\nconst mapStateToProps = (state, props) => ({\n    ...capacitySelector(state),\n    ...mapUrlToProps(props),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getVolumeCapacity,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CapacityChartContainer);\n","// TODO try to condense all these \"queryParams.js\" files into a single util\nconst buildParam = (type, param) => `perf.${type}${param}`;\nexport const timeParam = param => buildParam('time.', param);\nexport const perspectiveParam = param => buildParam('perspective.', param);\nconst performanceParam = param => `perf.${param || ''}`;\nexport const performanceTimeRangeParam = param => performanceParam(`time.${param || ''}`);\n","export default class ValueWithUnits {\n    constructor(value, units, separator = ' ') {\n        this.value = value;\n        this.separator = separator;\n        this.units = units;\n    }\n\n    toString() {\n        return `${this.value}${this.separator}${this.units}`;\n    }\n\n    toValue() {\n        return `${this.value}`;\n    }\n}\n","import numeral from 'numeral';\nimport ValueWithUnits from './ValueWithUnits';\n\nexport function toIops(value) {\n    return new ValueWithUnits(numeral(value).format('0,[.][00]'), 'IOPS');\n}\n\nexport function toLatency(value) {\n    return new ValueWithUnits(numeral(value).format('0,[.][00]'), 'ms');\n}\n\nexport function toThroughput(value) {\n    let formatted = numeral(value).format('0,[.][00] ib');\n\n    if (formatted.trim() === Number(formatted).toString()) {\n        formatted = `${formatted.trim()} B`;\n    }\n    return new ValueWithUnits(formatted, '/sec', '');\n}\n\nexport function toPercent(value) {\n    return new ValueWithUnits(numeral(value).format('0'), '%');\n}\n","export default function legendConfigMixin(legendDisabled) {\n    return () => ({\n        legend: {\n            enabled: !legendDisabled,\n        },\n    });\n}\n\nexport function disableLegendMixin() {\n    return {\n        legend: {\n            enabled: false,\n        },\n    };\n}\n","export default function plotOptionsMixin(type) {\n    const area = (type === 'area' ? {\n        stacking: 'normal',\n    } : null);\n\n    return () => ({\n        plotOptions: {\n            area,\n            column: {\n                pointPlacement: 'on',\n            },\n            series: {\n                borderWidth: 0,\n                pointPadding: 0,\n                groupPadding: 0,\n                marker: {\n                    enabled: false,\n                    symbol: 'circle',\n                },\n                events: {\n                    legendItemClick: (e) => {\n                        e.preventDefault();\n                    },\n                },\n                turboThreshold: Number.MAX_VALUE,\n            },\n        },\n    });\n}\n","export default function titleMixin(title) {\n    return () => ({\n        title: {\n            align: 'left',\n            margin: 0,\n            style: {\n                fontFamily: null,\n                fontSize: null,\n                fontWeight: null,\n            },\n            text: title,\n            useHTML: true,\n            x: 70,\n            y: -23,\n        },\n    });\n}\n","import moment from 'moment-timezone';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport ReactDimensions from 'react-dimensions';\nimport { mergeSharedTooltipConfig } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\n\nimport { Highstock as Highcharts } from 'progeny/modules/nimble/highchartsProxy';\nimport ImpactScore from '../../../../app/modules/asset_details/performance/ImpactScoreImpl';\n\nimport { toIops } from '../util/formatterLibrary';\n\nimport applyMixins from '../mixins/applyMixins';\nimport legendConfigMixin from '../mixins/legend';\nimport chartDimensionsMixin from '../mixins/dimensions';\nimport plotOptionsMixin from '../mixins/plotOptions';\nimport titleMixin from '../mixins/title';\nimport xAxisMixin from '../mixins/xAxis';\nimport dragZoomMixin from '../mixins/dragZoom';\n\nconst LOCAL_TIMEZONE = moment.tz.guess();\nclass iOpsChart extends PureComponent {\n    data() {\n        const { title, timeSeries } = this.props;\n        const colorDefault = this.props.color;\n\n        const data = [{\n            name: title,\n            data: timeSeries.map((val) => {\n                const y = val[this.props.timeSeriesKey];\n                const severity = (val.severityScore / 100) || 0;\n                const percentile = Math.min(1, severity);\n                const score = ImpactScore.percentileToScore(percentile);\n                const color = ImpactScore.scoreToColor(score).hex();\n                const classification = ImpactScore.scoreToClassification(score);\n\n                return {\n                    x: val.timestamp,\n                    y,\n                    color,\n                    classification,\n                    score,\n                };\n            }),\n            color: colorDefault,\n        }];\n\n        return data;\n    }\n\n    config() {\n        const { chartRangeStart, chartRangeEnd, title, legendDisabled, onChartSelect } = this.props;\n\n        const data = this.data();\n\n        const chartConfig = Highcharts.merge(\n            chartDimensionsMixin(),\n            {\n                chart: {\n                    type: this.props.type,\n                    height: this.props.containerHeight,\n                    spacingRight: 10,\n                },\n            }\n        );\n\n        const xopt = applyMixins(\n            () => chartConfig,\n            legendConfigMixin(legendDisabled),\n            plotOptionsMixin(this.props.type),\n            titleMixin(title),\n            xAxisMixin(chartRangeStart, chartRangeEnd),\n            dragZoomMixin(onChartSelect),\n            {\n                yAxis: {\n                    title: {\n                        text: this.props.yAxisLabel,\n                    },\n                    max: this.props.yAxisMax || null,\n                    min: 0,\n                },\n            }\n        );\n\n        xopt.series = data;\n\n        return mergeSharedTooltipConfig(xopt, {\n            /* remove severity until we have real data\n            pointFormatter: chartPt => (\n                `${toIops(chartPt.point.y)}\\\n                 &nbsp;&nbsp;&nbsp;&nbsp;\\\n                 Potential Impact:\\\n                 <i class=\"fa fa-square\" style=\"color: ${chartPt.point.color};\"></i>\\\n                 ${chartPt.point.classification.name.toUpperCase()}\\\n                 (${Math.round(chartPt.point.score)}/10)\\\n                &nbsp;&nbsp;&nbsp;&nbsp;`\n            */\n            pointFormatter: chartPt => (\n                `${toIops(chartPt.point.y)}\\\n                &nbsp;&nbsp;&nbsp;&nbsp;`\n            ),\n            xValueFormatter: chartPt => (\n                `${moment(chartPt.x).tz(LOCAL_TIMEZONE).format('L hh:mm a z')}`\n            ),\n        });\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} />}\n            </NoData>\n        );\n    }\n}\n\niOpsChart.propTypes = {\n    /**\n     * Moment\n     */\n    chartRangeStart: PropTypes.object,\n    /**\n     * Moment\n     */\n    chartRangeEnd: PropTypes.object,\n    color: PropTypes.string,\n    // From ReactDimensions\n    containerHeight: PropTypes.number.isRequired,\n    legendDisabled: PropTypes.bool,\n    timeSeries: PropTypes.arrayOf(PropTypes.shape({\n        localDate: PropTypes.number,\n    })),\n    timeSeriesKey: PropTypes.string,\n    title: PropTypes.string,\n    // tooltipFormatter: PropTypes.function,\n    type: PropTypes.string,\n    yAxisLabel: PropTypes.string,\n    yAxisMax: PropTypes.number,\n    onChartSelect: PropTypes.func,\n};\n\niOpsChart.defaultProps = {\n    containerHeight: 0,\n    legendDisabled: false,\n    title: null,\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default ReactDimensions({ elementResize: true })(iOpsChart);\n","export default function dimensionsMixin() {\n    return {\n        chart: {\n            marginLeft: 80,\n            spacingTop: 30 + 5,\n            spacingBottom: 1,\n            // spacingLeft: 1,\n            spacingRight: 1,\n        },\n    };\n}\n","import moment from 'moment-timezone';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport ReactDimensions from 'react-dimensions';\nimport { mergeSharedTooltipConfig } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\n\nimport { Highstock } from 'progeny/modules/nimble/highchartsProxy';\nimport { COLOR_SETS } from '../../../util/chartColors';\n\nimport { toLatency, toThroughput, toPercent, toIops } from '../util/formatterLibrary';\n\nimport applyMixins from '../mixins/applyMixins';\nimport legendConfigMixin from '../mixins/legend';\nimport chartDimensionsMixin from '../mixins/dimensions';\nimport plotOptionsMixin from '../mixins/plotOptions';\nimport titleMixin from '../mixins/title';\nimport xAxisMixin from '../mixins/xAxis';\nimport dragZoomMixin from '../mixins/dragZoom';\n\n\nconst LOCAL_TIMEZONE = moment.tz.guess();\nclass PerfChart extends PureComponent {\n    data() {\n        const { timeSeries, titles, timeSeriesKeys, colorList, invisibleSeries } = this.props;\n\n        if (timeSeriesKeys.length !== titles.length) {\n            throw new Error('PerfChart: props timeseriesKeys and titles must have the same length');\n        }\n\n        const data = timeSeriesKeys.map((key, i) => {\n            const color = colorList[i % colorList.length];\n            return {\n                name: titles[i],\n                data: timeSeries.map(val => ({\n                    x: val.timestamp,\n                    y: val[key],\n                })),\n                color: color.stroke,\n                fillColor: color.fill,\n                lineWidth: 2,\n                states: {\n                    hover: {\n                        lineWidth: 2,\n                    },\n                },\n                visible: !invisibleSeries.includes(i),\n            };\n        });\n\n        return data;\n    }\n\n    config() {\n        const {\n            chartRangeStart,\n            chartRangeEnd,\n            title,\n            legendDisabled,\n            type,\n            yAxisMax,\n            customDimensions,\n            onChartSelect,\n        } = this.props;\n\n        const data = this.data();\n\n        const chartConfig = Highstock.merge(\n            customDimensions || chartDimensionsMixin(),\n            {\n                chart: {\n                    type,\n                    height: this.props.containerHeight,\n                    spacingRight: 10,\n                },\n            }\n        );\n\n        const formatByUnit = (chartPt) => {\n            switch (this.props.yAxisLabel) {\n            case 'MiB/sec':\n                return toThroughput(chartPt * 1024 * 1024);\n            case 'ms':\n                return toLatency(chartPt);\n            case '%':\n                return toPercent(chartPt);\n            case 'IO/sec':\n                return toIops(chartPt);\n            default:\n                return undefined;\n            }\n        };\n\n        const xopt = applyMixins(\n            () => chartConfig,\n            legendConfigMixin(legendDisabled),\n            plotOptionsMixin(type),\n            titleMixin(title),\n            xAxisMixin(chartRangeStart, chartRangeEnd),\n            dragZoomMixin(onChartSelect),\n            {\n                yAxis: {\n                    title: {\n                        text: '',\n                    },\n                    max: yAxisMax || null,\n                    min: 0,\n                    labels: {\n                        formatter() {\n                            const val = formatByUnit(this.value);\n                            return val && val.toValue().split(' ')[0];\n                        },\n                    },\n                },\n            }\n        );\n\n        xopt.series = data;\n\n        return mergeSharedTooltipConfig(xopt, {\n            pointFormatter: chartPt => (\n                `<i class=\"fa fa-square\" style=\"color: ${chartPt.point.color};\"></i>\\\n                ${chartPt.series.name}:\\\n                ${formatByUnit(chartPt.y)}\\\n                &nbsp;&nbsp;&nbsp;&nbsp;`\n            ),\n            xValueFormatter: chartPt => (\n                `${moment(chartPt.x).tz(LOCAL_TIMEZONE).format('L hh:mm a z')}`\n            ),\n        });\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} />}\n            </NoData>\n        );\n    }\n}\n\nPerfChart.propTypes = {\n    /**\n     * Moment\n     */\n    chartRangeStart: PropTypes.object,\n\n    /**\n     * Moment\n     */\n    chartRangeEnd: PropTypes.object,\n\n    // From ReactDimensions\n    containerHeight: PropTypes.number.isRequired,\n    legendDisabled: PropTypes.bool,\n    timeSeries: PropTypes.array,\n    timeSeriesKeys: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n    titles: PropTypes.arrayOf(PropTypes.string),\n    // tooltipFormatter: PropTypes.function,\n    type: PropTypes.string,\n    yAxisLabel: PropTypes.string,\n    yAxisMax: PropTypes.number,\n    customDimensions: PropTypes.object,\n    colorList: PropTypes.arrayOf(PropTypes.object),\n    invisibleSeries: PropTypes.arrayOf(PropTypes.number),\n    onChartSelect: PropTypes.func,\n};\n\nPerfChart.defaultProps = {\n    containerHeight: 0,\n    legendDisabled: false,\n    title: null,\n    colorList: [COLOR_SETS.teal, COLOR_SETS.purple, COLOR_SETS.green, COLOR_SETS.blue],\n    invisibleSeries: [],\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default ReactDimensions({ elementResize: true })(PerfChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst totalColumns = 24;\n\nfunction generateColumnConfig(columnRatios) {\n    const colCount = [];\n    let total = 0;\n\n    columnRatios.forEach((item) => {\n        total += item;\n    });\n\n    columnRatios.forEach((item) => {\n        const gridColumnsInColumn = (item / total) * totalColumns;\n        if (gridColumnsInColumn !== Math.floor(gridColumnsInColumn)) {\n            throw (new Error('column ratios must neatly fill 24 total columns'));\n        }\n        colCount.push(gridColumnsInColumn);\n    });\n\n    return colCount;\n}\n\nfunction getResponsiveGridColumnClassName(i, sm, md, lg) {\n    const small = sm ? `small-${sm[i]}` : '';\n    const medium = md ? `medium-${md[i]}` : '';\n    const large = lg ? `large-${lg[i]}` : '';\n\n    return `${small} ${medium} ${large} columns`;\n}\n\n// TODO can this be used? The idea is good, but need to make it easy to use or hide it by exporting prescriptive\n// components that build on this.\nexport default function LayoutGenerator(options) {\n    const {\n        columnRatiosSmall,\n        columnCountSmall,\n        columnRatiosMedium,\n        columnCountMedium,\n        columnRatiosLarge,\n        columnCountLarge,\n        rowClasses,\n    } = options;\n\n    let colCountSmall;\n    let colCountMedium;\n    let colCountLarge;\n\n    if (columnRatiosSmall) {\n        colCountSmall = generateColumnConfig(columnRatiosSmall);\n    } else if (columnCountSmall) {\n        colCountSmall = columnCountSmall;\n    }\n\n    if (columnRatiosMedium) {\n        colCountMedium = generateColumnConfig(columnRatiosMedium);\n    } else if (columnCountMedium) {\n        colCountMedium = columnCountMedium;\n    }\n\n    if (columnRatiosLarge) {\n        colCountLarge = generateColumnConfig(columnRatiosLarge);\n    } else if (columnCountLarge) {\n        colCountLarge = columnCountLarge;\n    }\n\n    const colCount = colCountSmall || colCountMedium || colCountLarge;\n\n    const Layout = ({ children }) => (\n        <div className={`row ${rowClasses ? rowClasses.join(' ') : null}`}>\n            {colCount.map((item, i) => (\n                <div\n                    className={getResponsiveGridColumnClassName(\n                        i,\n                        colCountSmall,\n                        colCountMedium,\n                        colCountLarge\n                    )}\n                    key={i.toString()}\n                >\n                    {children.filter(obj => (obj.key === i.toString()))}\n                </div>\n            ))}\n        </div>\n    );\n\n    Layout.propTypes = {\n        children: PropTypes.arrayOf(PropTypes.node),\n    };\n\n    return Layout;\n}\n","import classnames from 'classnames/bind';\nimport LayoutGenerator from './LayoutGenerator';\nimport style from './styles.scss';\n\nconst cx = classnames.bind(style);\n\nconst Layout = LayoutGenerator({\n    columnRatiosSmall: [3, 1],\n    rowClasses: ['expanded', cx('gridRowChartContainer')],\n});\n\n// 'expanded', 'collapse'\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\n\nimport _ from 'underscore';\n\nimport { ProgressWithValue, Progress } from '@infosight/elmer/dist/components/Progress';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport { Highstock as Highcharts } from 'progeny/modules/nimble/highchartsProxy';\nimport IopsChart from '../Iops';\nimport PerfChart from '../Performance';\n\nimport { toIops, toLatency, toThroughput } from '../util/formatterLibrary';\nimport { isEmpty } from '../../../util/formatter';\nimport ChartSummaryLayout from './layout/ChartSummaryLayout';\n\nimport style from './layout/styles.scss';\n\nimport { COLOR_SETS } from '../../../util/chartColors';\n\nconst colorList = [COLOR_SETS.teal, COLOR_SETS.purple, COLOR_SETS.green, COLOR_SETS.blue];\nconst transparentFirstColorList = [COLOR_SETS.transparent, ...colorList];\n\nconst cx = classnames.bind(style);\n\nfunction onMouseMove(e) {\n    let point;\n    let j;\n    let seriesLen;\n    let event;\n\n    // Guard against charts left hanging around in memory that are not in this view\n    Highcharts.charts.filter(x => x && e.currentTarget.contains(x.renderTo)).forEach((chart) => {\n        event = chart.pointer.normalize(Object.assign({}, e)); // Find coordinates within the chart\n        const hoverPoints = [];\n        for (j = 0, seriesLen = chart.series.length; j < seriesLen; j += 1) {\n            point = chart.series[j].searchPoint(event, true); // Get the hovered point\n\n            if (point) {\n                point.onMouseOver(); // Show the hover marker\n                hoverPoints.push(point);\n            }\n        }\n\n        if (hoverPoints.length) {\n            chart.tooltip.refresh(hoverPoints);\n        }\n        chart.xAxis[0].drawCrosshair(e, point); // Show the crosshair\n    });\n}\n\nconst hasValue = x => !isEmpty(x);\nconst min = arr => (arr && arr.length > 0 && Math.min(...arr, Number.POSITIVE_INFINITY)) || 0;\n/*\nMake sure the performance charts max is always at least 1.\nThis avoids problematic divide-by-zero problems with data that's all zeroes.\n*/\nconst max = arr => Math.max(...arr, 1);\nconst sum = arr => arr.reduce((memo, num) => memo + num, 0);\nconst avg = (arr) => {\n    const values = arr.filter(hasValue);\n    if (!values.length) {\n        return undefined;\n    }\n\n    return values.reduce((memo, num) => memo + num, 0) / (values.length);\n};\n\nconst weightedAverage = (values, weights, weightedTotal, minVal, maxVal) => {\n    const weightedAvg = values.reduce((accumulator, currentValue, currentIndex) =>\n        accumulator + (currentValue * weights[currentIndex]), 0) / weightedTotal;\n    // Constrain the weighted average value to be within the min and max bounds to correct for JS precision problems\n    return Math.min(maxVal, Math.max(minVal, weightedAvg));\n};\n\nclass PerformanceChartsPage extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    render() {\n        const { chartRangeStart, chartRangeEnd, missingSeverity, useDeviceLatency, onChartSelect } = this.props;\n\n        const hasHostLatencyMs = _.find(this.props.timeseries, obj => typeof obj.hostLatencyMs === 'number');\n        const hostLatencyMs = hasHostLatencyMs ? _.pluck(this.props.timeseries, 'hostLatencyMs') : [];\n        const hostLatencyMsCompact = _.compact(hostLatencyMs);\n        const hostLatencyMsAvg = avg(hostLatencyMsCompact);\n\n        const hasNetworkLatencyMs = _.find(this.props.timeseries, obj => typeof obj.networkLatencyMs === 'number');\n        const networkLatencyMs = hasNetworkLatencyMs ? _.pluck(this.props.timeseries, 'networkLatencyMs') : [];\n        const networkLatencyMsCompact = _.compact(networkLatencyMs);\n        const networkLatencyMsAvg = avg(networkLatencyMsCompact);\n\n        const hasStorageLatencyMs = _.find(this.props.timeseries, obj => typeof obj.storageLatencyMs === 'number');\n        const storageLatencyMs = hasStorageLatencyMs ? _.pluck(this.props.timeseries, 'storageLatencyMs') : [];\n        const storageLatencyMsCompact = _.compact(storageLatencyMs);\n        const storageLatencyMsAvg = avg(storageLatencyMsCompact);\n\n        const hasDeviceLatencyMs = _.find(this.props.timeseries, obj => typeof obj.deviceLatencyMs === 'number');\n        const deviceLatencyMs = hasDeviceLatencyMs ? _.pluck(this.props.timeseries, 'deviceLatencyMs') : [];\n        const deviceLatencyMsCompact = _.compact(deviceLatencyMs);\n        const deviceLatencyMsAvg = avg(deviceLatencyMsCompact);\n\n        let latencyFactors = 0;\n        let maxTotalLatency = 0;\n        let latency = null;\n        if (useDeviceLatency) {\n            latencyFactors = hostLatencyMs.concat(deviceLatencyMs);\n            latency = this.props.timeseries.map(data => data.hostLatencyMs + data.deviceLatencyMs);\n            maxTotalLatency = max(_.compact(latency));\n        } else {\n            latencyFactors = hostLatencyMs.concat(networkLatencyMs).concat(storageLatencyMs);\n            latency = this.props.timeseries.map(data => data.hostLatencyMs + data.networkLatencyMs + data.storageLatencyMs);\n            maxTotalLatency = max(_.compact(latency));\n        }\n        const latencyFactorsComapct = _.compact(latencyFactors);\n        const latencyFactorsMin = min(latencyFactorsComapct);\n        const latencyFactorsMax = max(latencyFactorsComapct);\n\n        const readLatencyMs = _.pluck(this.props.timeseries, 'readLatencyMs');\n        const writeLatencyMs = _.pluck(this.props.timeseries, 'writeLatencyMs');\n        const totalLatencyMs = _.pluck(this.props.timeseries, 'totalLatencyMs');\n        const latencyRaw = _.compact(readLatencyMs.concat(writeLatencyMs).concat(totalLatencyMs));\n        const latencyRawMin = min(latencyRaw);\n        const latencyRawMax = max(latencyRaw);\n\n        const readIops = _.pluck(this.props.timeseries, 'readIops');\n        const readIopsAvg = avg(readIops);\n        const writeIops = _.pluck(this.props.timeseries, 'writeIops');\n        const writeIopsAvg = avg(writeIops);\n        const iops = readIops.concat(writeIops);\n        const iopsMin = min(iops);\n        const iopsMax = max(iops);\n\n        const totalReadIops = sum(readIops);\n        const totalWriteIops = sum(writeIops);\n        /**\n         * Latency has to be weighted with IOPS\n         * Read Latency Avg = SIGMA (ReadLatency * ReadIOPS) / SIGMA (readIOPS)\n         */\n        const readLatencyMsAvg = weightedAverage(readLatencyMs, readIops, totalReadIops, latencyRawMin, latencyRawMax);\n        const writeLatencyMsAvg = weightedAverage(writeLatencyMs, writeIops, totalWriteIops, latencyRawMin, latencyRawMax);\n\n        const readMbps = _.pluck(this.props.timeseries, 'readMbps');\n        const readMbpsAvg = avg(readMbps);\n        const writeMbps = _.pluck(this.props.timeseries, 'writeMbps');\n        const writeMbpsAvg = avg(writeMbps);\n        const mbps = readMbps.concat(writeMbps);\n        const mbpsMin = min(mbps);\n        const mbpsMax = max(mbps);\n\n        const latencyTitles = useDeviceLatency\n            ? ['Total', 'Host', 'Storage/Network']\n            : ['Total', 'Host', 'Network', 'Storage'];\n        const latencyTimeSeriesKeys = useDeviceLatency\n            ? ['totalLatencyMs', 'hostLatencyMs', 'deviceLatencyMs']\n            : ['totalLatencyMs', 'hostLatencyMs', 'networkLatencyMs', 'storageLatencyMs'];\n        const latencyCard = (\n            <Card title=\"Latency\">\n                {latencyFactors.length > 0 && (\n                    <ChartSummaryLayout>\n                        <div key=\"0\" className={useDeviceLatency ? 'chart-container--small' : 'chart-container--medium'}>\n                            <PerfChart\n                                title=\"Total Latency\"\n                                titles={latencyTitles}\n                                legendDisabled\n                                yAxisLabel=\"ms\"\n                                yAxisMax={max([latencyFactorsMax, maxTotalLatency])}\n                                type=\"area\"\n                                timeSeries={this.props.timeseries}\n                                timeSeriesKeys={latencyTimeSeriesKeys}\n                                chartRangeStart={chartRangeStart}\n                                chartRangeEnd={chartRangeEnd}\n                                colorList={transparentFirstColorList}\n                                invisibleSeries={[0]}\n                                onChartSelect={onChartSelect}\n                            />\n                        </div>\n                        <div key=\"1\" className={cx('summaryCharts')}>\n                            <h3 className={cx('chartLabel')}>Average Host</h3>\n                            <ProgressWithValue\n                                className={cx('progressContainer')}\n                                leftLabel={toLatency(hostLatencyMsAvg).toString()}\n                            >\n                                <Progress\n                                    min={latencyFactorsMin}\n                                    max={latencyFactorsMax}\n                                    value={hostLatencyMsAvg}\n                                    color={colorList[0].stroke}\n                                />\n                            </ProgressWithValue>\n                            {useDeviceLatency ? (\n                                <div>\n                                    <h3 className={cx('chartLabel')}>Average Storage/Network</h3>\n                                    <ProgressWithValue\n                                        className={cx('progressContainer')}\n                                        leftLabel={toLatency(deviceLatencyMsAvg).toString()}\n                                    >\n                                        <Progress\n                                            min={latencyFactorsMin}\n                                            max={latencyFactorsMax}\n                                            value={deviceLatencyMsAvg}\n                                            color={colorList[1].stroke}\n                                        />\n                                    </ProgressWithValue>\n                                </div>\n                            ) : (\n                                <div>\n                                    <h3 className={cx('chartLabel')}>Average Network</h3>\n                                    <ProgressWithValue\n                                        className={cx('progressContainer')}\n                                        leftLabel={toLatency(networkLatencyMsAvg).toString()}\n                                    >\n                                        <Progress\n                                            min={latencyFactorsMin}\n                                            max={latencyFactorsMax}\n                                            value={networkLatencyMsAvg}\n                                            color={colorList[1].stroke}\n                                        />\n                                    </ProgressWithValue>\n\n                                    <h3 className={cx('chartLabel')}>Average Storage</h3>\n                                    <ProgressWithValue\n                                        className={cx('progressContainer')}\n                                        leftLabel={toLatency(storageLatencyMsAvg).toString()}\n                                    >\n                                        <Progress\n                                            min={latencyFactorsMin}\n                                            max={latencyFactorsMax}\n                                            value={storageLatencyMsAvg}\n                                            color={colorList[2].stroke}\n                                        />\n                                    </ProgressWithValue>\n                                </div>\n                            )}\n                        </div>\n                    </ChartSummaryLayout>)}\n                <ChartSummaryLayout>\n                    <div key=\"0\" className=\"chart-container--small\">\n                        <PerfChart\n                            title=\"Read/Write Latency\"\n                            titles={['Read', 'Write']}\n                            legendDisabled\n                            yAxisLabel=\"ms\"\n                            yAxisMax={max([latencyFactorsMax, latencyRawMax])}\n                            type=\"line\"\n                            timeSeries={this.props.timeseries}\n                            timeSeriesKeys={['readLatencyMs', 'writeLatencyMs']}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            onChartSelect={onChartSelect}\n                        />\n                    </div>\n                    <div key=\"1\" className={cx('summaryCharts')}>\n                        <h3 className={cx('chartLabel')}>Average Read</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toLatency(readLatencyMsAvg).toString()}\n                        >\n                            <Progress\n                                min={latencyRawMin}\n                                max={latencyRawMax}\n                                value={readLatencyMsAvg}\n                                color={colorList[0].stroke}\n                            />\n                        </ProgressWithValue>\n\n                        <h3 className={cx('chartLabel')}>Average Write</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toLatency(writeLatencyMsAvg).toString()}\n                        >\n                            <Progress\n                                min={latencyRawMin}\n                                max={latencyRawMax}\n                                value={writeLatencyMsAvg}\n                                color={colorList[1].stroke}\n                            />\n                        </ProgressWithValue>\n                    </div>\n                </ChartSummaryLayout>\n            </Card>\n        );\n\n        const iopsCard = (\n            <Card title=\"IOPS\">\n                <ChartSummaryLayout>\n                    <div key=\"0\" className=\"chart-container--small\">\n                        <IopsChart\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            legendDisabled\n                            timeSeries={this.props.timeseries}\n                            timeSeriesKey=\"readIops\"\n                            title=\"Read\"\n                            type=\"column\"\n                            yAxisLabel=\"IO/sec\"\n                            yAxisMax={iopsMax}\n                            onChartSelect={onChartSelect}\n                        />\n                    </div>\n                    <div key=\"1\" className={cx('summaryCharts')}>\n                        <h3 className={cx('chartLabel')}>Average Read</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toIops(readIopsAvg).toString()}\n                        >\n                            <Progress\n                                min={iopsMin}\n                                max={iopsMax}\n                                value={readIopsAvg}\n                                color=\"#CCCCCC\"\n                            />\n                        </ProgressWithValue>\n                    </div>\n                </ChartSummaryLayout>\n                <ChartSummaryLayout>\n                    <div key=\"0\" className=\"chart-container--small\">\n                        <IopsChart\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            legendDisabled\n                            timeSeries={this.props.timeseries}\n                            timeSeriesKey=\"writeIops\"\n                            title=\"Write\"\n                            type=\"column\"\n                            yAxisLabel=\"IO/sec\"\n                            yAxisMax={iopsMax}\n                            onChartSelect={onChartSelect}\n                        />\n                    </div>\n                    <div key=\"1\" className={cx('summaryCharts')}>\n                        <h3 className={cx('chartLabel')}>Average Write</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toIops(writeIopsAvg).toString()}\n                        >\n                            <Progress\n                                min={iopsMin}\n                                max={iopsMax}\n                                value={writeIopsAvg}\n                                color=\"#CCCCCC\"\n                            />\n                        </ProgressWithValue>\n                    </div>\n                </ChartSummaryLayout>\n            </Card>\n        );\n\n        // We have 2 versions of the IOPS card because this is a common component and certain types of objects have\n        // the severity data while other types of objects do not.\n        const iopsCardWithoutSeverity = (\n            <Card title=\"IOPS\">\n                <ChartSummaryLayout>\n                    <div key=\"0\" className=\"chart-container--small\">\n                        <PerfChart\n                            titles={['Read', 'Write']}\n                            legendDisabled\n                            yAxisLabel=\"IO/sec\"\n                            type=\"line\"\n                            timeSeries={this.props.timeseries}\n                            timeSeriesKeys={['readIops', 'writeIops']}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            onChartSelect={onChartSelect}\n                        />\n                    </div>\n                    <div key=\"1\" className={cx('summaryCharts')}>\n                        <h3 className={cx('chartLabel')}>Average Read</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toIops(readIopsAvg).toString()}\n                        >\n                            <Progress\n                                min={iopsMin}\n                                max={iopsMax}\n                                value={readIopsAvg}\n                                color={colorList[0].stroke}\n                            />\n                        </ProgressWithValue>\n                        <h3 className={cx('chartLabel')}>Average Write</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toIops(writeIopsAvg).toString()}\n                        >\n                            <Progress\n                                min={iopsMin}\n                                max={iopsMax}\n                                value={writeIopsAvg}\n                                color={colorList[1].stroke}\n                            />\n                        </ProgressWithValue>\n                    </div>\n                </ChartSummaryLayout>\n            </Card>\n        );\n\n        const throughputCard = (\n            <Card title=\"Throughput\">\n                <ChartSummaryLayout>\n                    <div key=\"0\" className=\"chart-container--small\">\n                        <PerfChart\n                            titles={['Read', 'Write']}\n                            legendDisabled\n                            yAxisLabel=\"MiB/sec\"\n                            type=\"area\"\n                            timeSeries={this.props.timeseries}\n                            timeSeriesKeys={['readMbps', 'writeMbps']}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            onChartSelect={onChartSelect}\n                        />\n                    </div>\n                    <div key=\"1\" className={cx('summaryCharts')}>\n                        <h3 className={cx('chartLabel')}>Average Read</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toThroughput(readMbpsAvg * 1024 * 1024).toString()}\n                        >\n                            <Progress\n                                min={mbpsMin}\n                                max={mbpsMax}\n                                value={readMbpsAvg}\n                                color={colorList[0].stroke}\n                            />\n                        </ProgressWithValue>\n                        <h3 className={cx('chartLabel')}>Average Write</h3>\n                        <ProgressWithValue\n                            className={cx('progressContainer')}\n                            leftLabel={toThroughput(writeMbpsAvg * 1024 * 1024).toString()}\n                        >\n                            <Progress\n                                min={mbpsMin}\n                                max={mbpsMax}\n                                value={writeMbpsAvg}\n                                color={colorList[1].stroke}\n                            />\n                        </ProgressWithValue>\n                    </div>\n                </ChartSummaryLayout>\n            </Card>\n        );\n\n        return (\n            <div onMouseMove={onMouseMove}>\n                {latencyCard}\n                {missingSeverity ? iopsCardWithoutSeverity : iopsCard}\n                {throughputCard}\n            </div>\n        );\n    }\n}\n\nPerformanceChartsPage.propTypes = {\n    timeseries: PropTypes.arrayOf(PropTypes.shape({\n        timestamp: PropTypes.number,\n        hostLatencyMs: PropTypes.number,\n        networkLatencyMs: PropTypes.number,\n        storageLatencyMs: PropTypes.number,\n        readLatencyMs: PropTypes.number,\n        writeLatencyMs: PropTypes.number,\n        totalLatencyMs: PropTypes.number,\n        readIops: PropTypes.number,\n        writeIops: PropTypes.number,\n        readMbps: PropTypes.number,\n        writeMbps: PropTypes.number,\n    })),\n    chartRangeStart: PropTypes.object.isRequired,\n    chartRangeEnd: PropTypes.object.isRequired,\n    missingSeverity: PropTypes.bool,\n    useDeviceLatency: PropTypes.bool,\n    onChartSelect: PropTypes.func,\n};\n\nexport default PerformanceChartsPage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport moment from 'moment-timezone';\nimport {\n    QueryTimeRangeSelector,\n    deserialize,\n    makeChartSelector,\n    makeRangeSelector,\n} from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { performanceTimeRangeParam } from '../../../collection/components/performance/queryParams';\nimport PerformanceChartsPage from '../../../../../charts/PerformanceChartsPage';\nimport { getVolumePerformance } from '../../actionCreators';\nimport { performanceSelector } from '../../reducer';\n\nconst timeRangePresets = [\n    moment.duration(1, 'day'),\n    moment.duration(1, 'week'),\n    moment.duration(1, 'month'),\n    moment.duration(3, 'months'),\n];\n\nclass VolumePerformanceContainer extends Component {\n    componentDidMount() {\n        const {\n            loadingVolumePerformance,\n            loadedVolumePerformance,\n        } = this.props;\n\n        if (!loadingVolumePerformance && !loadedVolumePerformance) {\n            this.fetchData(this.props);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { volumeSn, timeRange } = nextProps;\n\n        if (volumeSn !== this.props.volumeSn || !timeRange.equals(this.props.timeRange)) {\n            this.fetchData(nextProps);\n        }\n    }\n\n    fetchData(props) {\n        this.props.getVolumePerformance(props.volumeSn, props.timeRange.toGenericQueryTime());\n    }\n\n    render() {\n        const {\n            loadingVolumePerformance,\n            loadedVolumePerformance,\n            timeRange,\n            volumePerformance,\n            history,\n            location,\n        } = this.props;\n\n        let displayTimeRange;\n        if (volumePerformance && volumePerformance.data && volumePerformance.data.length) {\n            displayTimeRange = QueryTimeRangeSelector.toTimeRangeSelection(volumePerformance.meta.time);\n        }\n\n        const transformedVolumePerformance = ((volumePerformance && volumePerformance.data\n            && volumePerformance.data.length && volumePerformance.data[0].timeseries) || []).map(obj => ({\n            timestamp: obj.timestamp,\n            readLatencyMs: obj.latencyRead,\n            writeLatencyMs: obj.latencyWrite,\n            readIops: obj.iopsRandomSequentialRead,\n            writeIops: obj.iopsRandomSequentialWrite,\n            readMbps: obj.mbpsRandomSequentialRead / (2 ** 20),\n            writeMbps: obj.mbpsRandomSequentialWrite / (2 ** 20),\n            severityScore: obj.severityScore,\n        }));\n\n        const onSelectRange = makeRangeSelector(location, performanceTimeRangeParam(), false, history);\n        const onChartSelect = makeChartSelector(onSelectRange);\n\n        return (\n            <div>\n                <QueryTimeRangeSelector\n                    parameterPrefix={performanceTimeRangeParam()}\n                    value={timeRange}\n                    presets={timeRangePresets}\n                    displayValue={displayTimeRange}\n                    card\n                />\n                <Async loading={loadingVolumePerformance}>\n                    <NoData hasData={!!(loadedVolumePerformance && transformedVolumePerformance.length > 0)}>\n                        {() => (\n                            <PerformanceChartsPage\n                                timeseries={transformedVolumePerformance}\n                                chartRangeStart={moment(volumePerformance.meta.time.start)}\n                                chartRangeEnd={moment(volumePerformance.meta.time.end)}\n                                onChartSelect={onChartSelect}\n                            />\n                        )}\n                    </NoData>\n                </Async>\n            </div>\n        );\n    }\n}\n\nVolumePerformanceContainer.propTypes = {\n    volumeSn: PropTypes.string.isRequired,\n    loadingVolumePerformance: PropTypes.bool,\n    loadedVolumePerformance: PropTypes.bool,\n    volumePerformance: PropTypes.object,\n    getVolumePerformance: PropTypes.func,\n    timeRange: PropTypes.object,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nconst mapUrlToProps = ({ match: { params } }) => ({\n    timeRange: deserialize(params, performanceTimeRangeParam('')) || QueryTimeRangeSelector.DEFAULTS.VOLATILE,\n});\n\nconst mapStateToProps = (state, props) => ({\n    ...mapUrlToProps(props),\n    ...performanceSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getVolumePerformance,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VolumePerformanceContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { QueryTabs, Tab, TabList, TabPanel } from '@infosight/elmer/dist/components/Tabs';\nimport VolumeHeadlineContainer from './headline/VolumeHeadlineContainer';\nimport VolumeCapacityContainer from './capacity/VolumeCapacityContainer';\nimport VolumePerformanceContainer from './performance/VolumePerformanceContainer';\nimport { reset } from '../actionCreators';\n\nclass VolumeDetailContainer extends Component {\n    componentWillUnmount() {\n        this.props.reset();\n    }\n\n    render() {\n        const { scope: { id }, ...props } = this.props;\n\n        return (\n            <div>\n                <VolumeHeadlineContainer volumeSn={id} />\n                <QueryTabs values={['performance', 'capacity']}>\n                    <TabList>\n                        <Tab>Performance</Tab>\n                        <Tab>Capacity</Tab>\n                    </TabList>\n                    <TabPanel>\n                        <VolumePerformanceContainer {...props} volumeSn={id} />\n                    </TabPanel>\n                    <TabPanel>\n                        <VolumeCapacityContainer {...props} volumeSn={id} />\n                    </TabPanel>\n                </QueryTabs>\n            </div>\n        );\n    }\n}\n\nVolumeDetailContainer.propTypes = {\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n\n    reset: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    reset,\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(VolumeDetailContainer);\n\n","import VolumeDetailContainer from './components/VolumeDetailContainer'; // eslint-disable-line\n\nexport { default as reducer } from './reducer';\nexport default VolumeDetailContainer;\n","import { dateTimeXAxisMixin } from './dateTimeAxis';\nimport applyMixins from './applyMixins';\nimport { hijackSharedTooltipMixin } from './tooltip';\nimport { disableLegendMixin } from './legend';\n\nexport function stackedAreaMixin() {\n    return {\n        chart: {\n            spacingBottom: 0,\n            spacingLeft: 0,\n            type: 'area',\n        },\n        plotOptions: {\n            area: {\n                animation: false,\n                marker: {\n                    enabled: false,\n                    symbol: 'circle',\n                },\n                stack: 0,\n                stacking: 'normal',\n                stickyTracking: true,\n            },\n        },\n    };\n}\n\nexport function stackedAreaTimeSeriesMixin({\n    baseTimeSeries,\n    chartRangeStart,\n    chartRangeEnd,\n    onMouseOverPoint,\n    onRedraw,\n    width,\n    height,\n    title,\n    yAxisTitle,\n    yAxisLabelFormatter,\n    seriesMapper,\n}) {\n    return applyMixins(\n        dateTimeXAxisMixin({\n            min: chartRangeStart.valueOf(),\n            max: chartRangeEnd.valueOf(),\n        }),\n        hijackSharedTooltipMixin({ formatterCallback: onMouseOverPoint }),\n        disableLegendMixin,\n        stackedAreaMixin,\n        {\n            chart: {\n                width,\n                height,\n                ignoreHiddenSeries: true,\n                events: {\n                    redraw() {\n                        onRedraw(this);\n                    },\n                },\n            },\n            plotOptions: {\n                line: {\n                    marker: {\n                        enabled: false,\n                        symbol: 'circle',\n                    },\n                },\n            },\n            series: baseTimeSeries.map((series, index) => ({\n                index,\n                legendIndex: index,\n                ...seriesMapper(series, index),\n            })),\n            title,\n            yAxis: {\n                title: {\n                    text: yAxisTitle,\n                },\n                labels: {\n                    formatter: yAxisLabelFormatter && function formatter() {\n                        return yAxisLabelFormatter(this);\n                    },\n                },\n            },\n        }\n    );\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { uniqueId } from 'underscore';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\n\nclass MouseOutTrackingHighchart extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.containerElementId = uniqueId(this.constructor.name);\n    }\n\n    // TODO what if the chart is destroyed but the component is not unmounted?\n    componentWillUnmount() {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.removeEventListener('mouseleave', this.props.onMouseOut);\n    }\n\n    callback(chart) {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.addEventListener('mouseleave', this.props.onMouseOut);\n\n        if (this.props.callback) {\n            this.props.callback(chart);\n        }\n    }\n\n    render() {\n        return (\n            <ReactHighcharts\n                {...this.props}\n                domProps={{ ...this.props.domProps, id: this.containerElementId }}\n                callback={this.callback}\n            />\n        );\n    }\n}\n\nMouseOutTrackingHighchart.propTypes = {\n    onMouseOut: PropTypes.func.isRequired,\n    callback: PropTypes.func,\n    domProps: PropTypes.object,\n};\n\nexport default MouseOutTrackingHighchart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDimensions from 'react-dimensions';\nimport MouseOutTrackingHighchart from '../MouseOutTrackingHighchart';\n\nclass ChartProvider extends PureComponent { // eslint-disable-line react/prefer-stateless-function\n    render() {\n        const { buildConfig, onAfterChartRendered } = this.props;\n        return (\n            <MouseOutTrackingHighchart\n                callback={onAfterChartRendered}\n                {...this.props}\n                config={buildConfig(this.props)}\n                domProps={{\n                    className: this.props.className,\n                }}\n            />\n        );\n    }\n}\n\nChartProvider.propTypes = {\n    /**\n     * @param {Object} `this.props`\n     * @return {Object} Highcharts config object\n     */\n    buildConfig: PropTypes.func.isRequired,\n\n    onAfterChartRendered: PropTypes.func.isRequired,\n};\n\nexport default ReactDimensions({ elementResize: true })(ChartProvider);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { compact } from 'underscore';\nimport Legend from '@infosight/elmer/dist/components/Legend';\nimport ChartProvider from './ChartProvider';\nimport style from './styles.scss';\n\nconst cx = classnames.bind(style);\n\n// TODO unlikely, but I wonder how well this whole thing will work with synchronized charts\n\nconst buildLegend = (pointTracking, valueFormatter, getObjectLinkProps, defaultLegendValues) => {\n    const values = pointTracking.values || defaultLegendValues;\n    return compact(pointTracking.series).map((series) => {\n        const value = valueFormatter(values[series.id] && values[series.id].value);\n        return {\n            id: series.id,\n            label: series.name,\n            icon: true,\n            color: series.color === null ? 'transparent' : series.color,\n            value,\n            linkProps: getObjectLinkProps(series.highchartsSeries),\n        };\n    });\n};\n\nconst PointTrackingChart = ({\n    className,\n    pointTracking,\n    buildConfig,\n    valueFormatter,\n    getObjectLinkProps,\n    timestampFormat,\n    chartContainerClassName,\n    defaultLegendItems,\n}) => (\n\n    <div className={classnames(className, 'row expanded collapse')}>\n        <div className={classnames('column large-19 medium-16', cx('chart-column'))}>\n            <ChartProvider\n                className={chartContainerClassName}\n                onAfterChartRendered={pointTracking.onAfterChartRendered}\n                onMouseOverPoint={pointTracking.onMouseOverPoint}\n                onMouseOut={pointTracking.onMouseOut}\n                buildConfig={buildConfig}\n            />\n        </div>\n        <Legend\n            className=\"column large-5 medium-8\"\n            timestampFormat={timestampFormat}\n            items={buildLegend(pointTracking, valueFormatter, getObjectLinkProps, defaultLegendItems)}\n            timestamp={pointTracking.timestamp || null}\n            reserveTimestampSpace\n            valueTitle=\"Usage\"\n        />\n    </div>\n);\n\nPointTrackingChart.propTypes = {\n    chartContainerClassName: PropTypes.string,\n\n    /**\n     * @param Object containing these values:\n     * onAfterChartRendered,\n     * onMouseOverPoint,\n     * onMouseOut,\n     * containerWidth,\n     * containerHeight\n     *\n     * @return {Object} Highcharts config object\n     */\n    buildConfig: PropTypes.func.isRequired,\n\n    /**\n     * Get the props for a elmer.QueryLink component\n     * @param highchartsSeries\n     * @return {Object}\n     */\n    getObjectLinkProps: PropTypes.func.isRequired,\n\n    defaultLegendItems: PropTypes.object,\n\n    /**\n     * @param {*} value\n     * @return {*}\n     */\n    valueFormatter: PropTypes.func,\n\n    /**\n     * Moment format\n     */\n    timestampFormat: PropTypes.string.isRequired,\n\n    // Passthrough from providePointTracking in parent component\n    pointTracking: PropTypes.shape({\n        onMouseOverPoint: PropTypes.func.isRequired,\n        onMouseOut: PropTypes.func.isRequired,\n        onAfterChartRendered: PropTypes.func,\n        chart: PropTypes.shape({\n            series: PropTypes.arrayOf(PropTypes.shape({\n                color: PropTypes.string,\n                options: PropTypes.shape({\n                    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n                }),\n                name: PropTypes.string.isRequired,\n            })),\n        }),\n\n        /**\n         * WHen the point is active (hovered), this should be the timestamp; otherwise null\n         */\n        timestamp: PropTypes.number,\n\n        /**\n         * Keys in this object should be the `chart.series.id`\n         */\n        values: PropTypes.objectOf(PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            value: PropTypes.node.isRequired,\n            data: PropTypes.object,\n            color: PropTypes.string,\n        })),\n    }).isRequired,\n};\n\nPointTrackingChart.defaultProps = {\n    timestampFormat: 'L',\n};\n\nexport default PointTrackingChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport autobind from 'react-autobind';\nimport { MINUTE_MOMENT_FORMAT } from '@infosight/elmer/dist/utils/time';\nimport { OBJECTS } from '../../../../inventory';\nimport providePointTracking from '../../../../../charts/PointTrackingChart/providePointTracking';\nimport { stackedAreaTimeSeriesMixin } from '../../../../../charts/mixins/stackedAreaChart';\nimport applyMixins from '../../../../../charts/mixins/applyMixins';\nimport dragZoomMixin from '../../../../../charts/mixins/dragZoom';\nimport { PointTrackingChart } from '../../../../../charts/PointTrackingChart';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\n\nconst legendValueFormatter = value => (typeof value === 'number' ? numeral(value).format('0.0 ib') : 'N/A');\n\n/**\n * Scoped Object can be Group, Pool Or Folder\n * NOTE: All folders wont have limits\n * Check if the returned Scoped Object has data and it is valid\n * @param {*}\n */\nconst hasValidScopingObject = ({ type, timeseries, hasFolderLimit }) => {\n    if (timeseries && timeseries.length > 0) {\n        return type !== 'folder' || (type === 'folder' && hasFolderLimit);\n    }\n    return false;\n};\n\nexport class TopVolumesByCapacity extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    getLinkProps({ options: { id, isAggregatedRemainder, scopingObjectType } }) {\n        const { scope, config, location } = this.props;\n        if (scopingObjectType) {\n            return config.getLinkPropsForView(config.getDetailView(scope.type), { id }, null, location);\n        }\n\n        const view = config.findView(OBJECTS.VOLUME, isAggregatedRemainder ? 'list' : 'detail');\n        const innerScope = isAggregatedRemainder ? scope : { id, type: OBJECTS.VOLUME };\n        return config.getLinkPropsForView(view, innerScope, null, location);\n    }\n\n    buildScopingObjectSizeSeries() {\n        const { scopingObjectSizeSeries: { id, type, timeseries } } = this.props;\n        return {\n            type: 'line',\n            // Folders doesn't have Hard Limit\n            dashStyle: type === 'folder' ? 'dot' : 'solid',\n            id,\n            scopingObjectType: type,\n            name: `${type[0].toUpperCase()}${type.slice(1)} ${type === 'folder' ? 'Limit' : 'Size'}`,\n            color: type === 'folder' ? CHART_COLORS.warningYellow : CHART_COLORS.redOrange,\n            lineWidth: 2,\n            data: timeseries.map(val => ({\n                x: val.timestamp,\n                y: val.sizeBytes,\n            })),\n            step: true,\n        };\n    }\n\n    buildConfig({ containerWidth, containerHeight, onMouseOverPoint, onAfterChartRendered }) {\n        const { baseTimeSeries, chartRangeStart, chartRangeEnd, scopingObjectSizeSeries, onChartSelect } = this.props;\n        const chartConfig = applyMixins(\n            dragZoomMixin(onChartSelect),\n            stackedAreaTimeSeriesMixin({\n                baseTimeSeries,\n                chartRangeStart,\n                chartRangeEnd,\n                onMouseOverPoint,\n                onRedraw: onAfterChartRendered,\n                width: containerWidth,\n                height: containerHeight,\n                yAxisTitle: 'Usage (TiB)',\n                yAxisLabelFormatter({ value }) {\n                    return numeral(value / (2 ** 40)).format('0.0');\n                },\n                seriesMapper({ name, timeseries, id, isAggregatedRemainder }) {\n                    return {\n                        id,\n                        isAggregatedRemainder: !!isAggregatedRemainder,\n                        name: isAggregatedRemainder ? 'All other volumes' : name,\n                        data: timeseries.map(val => ({\n                            x: val.timestamp,\n                            y: val.dataUsageBytes,\n                        })),\n                    };\n                },\n            }));\n\n        if (scopingObjectSizeSeries && hasValidScopingObject(scopingObjectSizeSeries)) {\n            chartConfig.series.push(this.buildScopingObjectSizeSeries());\n        }\n\n        return chartConfig;\n    }\n\n    render() {\n        const { baseTimeSeries, scopingObjectSizeSeries } = this.props;\n        const defaultLegendValues = baseTimeSeries.reduce((memo, vol) => {\n            memo[vol.id] = { value: vol.dataUsageBytes };\n            return memo;\n        }, {});\n\n        if (scopingObjectSizeSeries && hasValidScopingObject(scopingObjectSizeSeries)) {\n            defaultLegendValues[scopingObjectSizeSeries.id] = {\n                value: scopingObjectSizeSeries.timeseries[scopingObjectSizeSeries.timeseries.length - 1].sizeBytes,\n            };\n        }\n\n        return (\n            <PointTrackingChart\n                className=\"chart-container--medium\"\n                pointTracking={this.props.pointTracking}\n                buildConfig={this.buildConfig}\n                valueFormatter={legendValueFormatter}\n                getObjectLinkProps={this.getLinkProps}\n                defaultLegendItems={defaultLegendValues}\n                timestampFormat={MINUTE_MOMENT_FORMAT}\n            />\n        );\n    }\n}\n\nTopVolumesByCapacity.propTypes = {\n    baseTimeSeries: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        timeseries: PropTypes.arrayOf(PropTypes.shape({\n            timestamp: PropTypes.number.isRequired,\n            dataUsageBytes: PropTypes.number.isRequired,\n        })).isRequired,\n    })),\n    scopingObjectSizeSeries: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        type: PropTypes.string,\n        // Only when the Scoped Object is folder\n        hasFolderLimit: PropTypes.bool,\n        timeseries: PropTypes.arrayOf(PropTypes.shape({\n            timestamp: PropTypes.number,\n            sizeBytes: PropTypes.number,\n        })),\n    }),\n    chartRangeStart: PropTypes.number,\n    chartRangeEnd: PropTypes.number,\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n\n    onChartSelect: PropTypes.func,\n\n    // Injected by providePointTracking\n    pointTracking: PropTypes.object.isRequired,\n};\n\nTopVolumesByCapacity.defaultProps = {\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default providePointTracking(TopVolumesByCapacity);\n","/* eslint-disable import/prefer-default-export */\nexport function hijackSharedTooltipMixin({ formatterCallback }) {\n    return () => ({\n        tooltip: {\n            enabled: true,\n            shared: true,\n            formatter() {\n                formatterCallback(this);\n                return false;\n            },\n        },\n    });\n}\n","import React, { Component } from 'react';\nimport autobind from 'react-autobind';\nimport getDisplayName from 'recompose/getDisplayName';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nexport default function providePointTracking(WrappedComponent) {\n    class PointTrackingProvider extends Component {\n        constructor(props) {\n            super(props);\n            autobind(this);\n\n            this.state = {\n                legendValues: null,\n                legendSeries: [],\n                legendTimestamp: null,\n            };\n        }\n\n        onMouseOut() {\n            this.setState(() => ({ legendValues: null, legendTimestamp: null }));\n        }\n\n        // TODO optimize performance\n        onMouseOverPoint({ x, points }) {\n            const legendValues = points.reduce((memo, { y, series }) => {\n                const data = series.data[series.index];\n                memo[series.options.id] = { value: y, data };\n                return memo;\n            }, {});\n\n            this.setState(() => ({ legendValues, legendTimestamp: x }));\n        }\n\n        onAfterChartRendered(chart) {\n            this.chart = chart;\n            this.setState(() => ({\n                legendSeries: chart.series.map((set) => {\n                    const { color, options: { id }, name } = set;\n                    return ({\n                        color,\n                        id,\n                        name,\n                        highchartsSeries: set,\n                    });\n                }),\n            }));\n        }\n\n        render() {\n            const { legendValues, legendSeries, legendTimestamp } = this.state;\n\n            const pointTracking = {\n                values: legendValues,\n                timestamp: legendTimestamp,\n\n                // These references are maintained for the lifetime of the chart\n                chart: this.chart,\n                series: legendSeries,\n\n                // These references are maintained for the lifetime of this component\n                onAfterChartRendered: this.onAfterChartRendered,\n                onMouseOverPoint: this.onMouseOverPoint,\n                onMouseOut: this.onMouseOut,\n            };\n\n            return <WrappedComponent {...this.props} pointTracking={pointTracking} />;\n        }\n    }\n\n    PointTrackingProvider.displayName = wrapDisplayName(\n        WrappedComponent,\n        getDisplayName(PointTrackingProvider));\n\n    return hoistNonReactStatics(PointTrackingProvider, WrappedComponent);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport {\n    QueryTimeRangeSelector,\n    TimeRangeSelection,\n    deserialize,\n    toTimeRangeSelection,\n    makeChartSelector,\n    makeRangeSelector,\n} from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { volumesCapacitySelector, scopingObjectSizeSeriesSelector } from '../../reducer';\nimport { getTopVolumesCapacity, getScopingObjectSizeSeries, reset } from '../../actionCreators';\nimport TopVolumesChart from './TopVolumesChart';\n\nconst buildParam = (type, param) => `capacity.${type}${param}`;\nexport const timeParam = param => buildParam('time.', param);\n\nclass CapacityContainer extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    componentDidUpdate({ timeRange }) {\n        if (!this.props.timeRange.equals(timeRange)) {\n            this.fetchData();\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetVolumeCollectionStore();\n    }\n\n    fetchData() {\n        const { config, scope, timeRange } = this.props;\n\n        this.props.getVolumesCapacity({\n            rankBy: 'dataUsageBytes',\n            scope: config.convertToGenericQueryScope(scope),\n            timeRange: timeRange.toGenericQueryTime(),\n        });\n\n        this.props.getScopingObjectSizeSeries({\n            scope: config.convertToGenericQueryScope(scope),\n            timeRange: timeRange.toGenericQueryTime(),\n        });\n    }\n\n    render() {\n        const {\n            volumesCapacity,\n            timeRange,\n            loadingVolumesCapacity,\n            config,\n            scope,\n            loadingScopingObjectSizeSeries,\n            loadedScopingObjectSizeSeries,\n            scopingObjectSizeSeries,\n            history,\n            location,\n        } = this.props;\n        const hasData = !!(volumesCapacity && volumesCapacity.data && volumesCapacity.data.length > 0) && loadedScopingObjectSizeSeries;\n        let displayTimeRange;\n        let chartStartTime;\n        let chartEndTime;\n\n        if (hasData) {\n            displayTimeRange = TimeRangeSelection.from(volumesCapacity.meta.time);\n            chartStartTime = volumesCapacity.meta.time.start;\n            chartEndTime = volumesCapacity.meta.time.end;\n        }\n\n        const parameterPrefix = timeParam('');\n        const onSelectRange = makeRangeSelector(location, parameterPrefix, false, history);\n        const onChartSelect = makeChartSelector(onSelectRange);\n\n        return (\n            <div>\n                <QueryTimeRangeSelector\n                    value={timeRange}\n                    presets={QueryTimeRangeSelector.PRESETS.NONVOLATILE}\n                    parameterPrefix={parameterPrefix}\n                    displayValue={displayTimeRange}\n                    card\n                />\n                <Card title=\"Top Volumes by Data Usage\">\n                    <Async loading={loadingVolumesCapacity || loadingScopingObjectSizeSeries}>\n                        <NoData hasData={hasData} message=\"No capacity history data available.\">\n                            {() => (<TopVolumesChart\n                                className=\"chart-container--medium\"\n                                baseTimeSeries={volumesCapacity.data}\n                                scopingObjectSizeSeries={scopingObjectSizeSeries.data}\n                                chartRangeStart={chartStartTime}\n                                chartRangeEnd={chartEndTime}\n                                config={config}\n                                scope={scope}\n                                onChartSelect={onChartSelect}\n                            />)\n                            }\n                        </NoData>\n                    </Async>\n                </Card>\n            </div>\n        );\n    }\n}\n\nCapacityContainer.propTypes = {\n    // Injected by mapDispatchToProps\n    getScopingObjectSizeSeries: PropTypes.func,\n    getVolumesCapacity: PropTypes.func,\n    resetVolumeCollectionStore: PropTypes.func.isRequired,\n\n    // Injected by mapStateToProps\n    loadingVolumesCapacity: PropTypes.bool,\n    volumesCapacity: PropTypes.shape({\n        data: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }),\n        }),\n    }),\n    loadingScopingObjectSizeSeries: PropTypes.bool,\n    loadedScopingObjectSizeSeries: PropTypes.bool,\n    scopingObjectSizeSeries: PropTypes.shape({\n        data: PropTypes.shape({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            type: PropTypes.string,\n            // Only when the Scoped Object is folder\n            hasFolderLimit: PropTypes.bool,\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                timestamp: PropTypes.number,\n                sizeBytes: PropTypes.number,\n            })),\n        }),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }),\n        }),\n    }),\n    timeRange: PropTypes.oneOfType([\n        PropTypes.instanceOf(TimeRangeSelection),\n        PropTypes.string,\n    ]).isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    match: PropTypes.shape({ // eslint-disable-line react/no-unused-prop-types\n        params: PropTypes.shape({\n            // Time Range\n            [timeParam('duration')]: PropTypes.string,\n            [timeParam('from')]: PropTypes.string,\n            [timeParam('to')]: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nconst mapStateToProps = (state, { match }) => ({\n    ...volumesCapacitySelector(state),\n    ...scopingObjectSizeSeriesSelector(state),\n\n    // TODO this default should be set deeper in the tree, closer to the TimeRangeSelector instance\n    timeRange: deserialize(match.params, timeParam('')) || toTimeRangeSelection({ duration: 'P3M' }),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getVolumesCapacity: getTopVolumesCapacity,\n    getScopingObjectSizeSeries,\n    resetVolumeCollectionStore: reset,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CapacityContainer);\n","/* eslint-disable import/prefer-default-export */\n/**\n * Find points in all series in a chart that align on the same timestamp\n * @param chart {object} Highcharts chart object\n * @param index {number} Potential index where you'd expect this point to be located in the source data\n * @param xValue {number} Timestamp/xValue-axis value of this expected point\n * @param pointMapper {function(point, series)} transform Highhcharts.Point to some object. This function should handle falsy point values.\n * @return {{}}\n */\nexport const findPoints = (chart, index, xValue, pointMapper) => {\n    if (!chart || !chart.series || !chart.series.length) {\n        return {};\n    }\n\n    return chart.series.reduce((memo, series) => {\n        // Do we have a point at the same index as the other charts?\n        let point = series.points[index];\n\n        // Does the point have the same timestamp? If not, find the right point\n        if (!point || point.x !== xValue) {\n            point = series.points.find(pt => pt.x === xValue);\n        }\n\n        memo[series.options.id] = point && point.x === xValue ? pointMapper(point, series) : pointMapper(null, series);\n\n        return memo;\n    }, {});\n};\n\n/**\n * Instead of re-implementing Highcharts, exploit the tooltip to highlight points and draw crosshairs.\n * Also handles unhighlighting and removal of crosshairs.\n * @param hoverPoints {Array<Highcharts.Point>}\n * @param chart {Highcharts.Chart}\n * @param event {Event} mousemove event that triggered this sync\n */\nexport const moveCrosshair = (hoverPoints, chart, event) => {\n    if (hoverPoints.length) {\n        // Refreshing the tooltip is more reliable than using Point.setState('hover') directly\n        chart.tooltip.refresh(hoverPoints, event);\n        chart.xAxis[0].drawCrosshair(event, hoverPoints[0]);\n    } else if (chart.hoverPoints && chart.hoverPoints.length) {\n        // If there is no active point for this chart, remove the markers and crosshair\n        chart.hoverPoints.forEach(point => point.setState());\n        chart.xAxis[0].hideCrosshair();\n    }\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport ReactDimensions from 'react-dimensions';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport { uniqueId, pluck } from 'underscore';\nimport { xAxisDataRange } from '../mixins/xAxis';\nimport applyMixins from '../mixins/applyMixins';\nimport dragZoomMixin from '../mixins/dragZoom';\n\n// Amount of space between each cell\nexport const POINT_BORDER_WIDTH_PIXELS = 2;\n\nexport class ChartWrapper extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.containerElementId = uniqueId(this.constructor.name);\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.removeEventListener('mouseleave', this.props.onMouseOut);\n    }\n\n    onAfterChartRendered(chart) {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.addEventListener('mouseleave', this.props.onMouseOut);\n        this.props.onAfterChartRendered(chart);\n    }\n\n    config() {\n        const thisComponent = this;\n\n        const {\n            containerHeight,\n            containerWidth,\n            chartRangeStart,\n            chartRangeEnd,\n            baseTimeSeries,\n            field,\n            onAfterChartRendered,\n            onMouseOverPoint,\n            granularity,\n            min,\n            max,\n            minColor,\n            maxColor,\n            spacingLeft,\n            onChartSelect,\n        } = this.props;\n\n        return applyMixins(\n            dragZoomMixin(onChartSelect),\n            {\n                chart: {\n                    type: 'heatmap',\n                    height: containerHeight,\n                    width: containerWidth,\n                    plotBorderWidth: 0,\n                    spacingTop: 0,\n                    spacingBottom: 0,\n                    spacingLeft,\n                    spacingRight: 0,\n                    marginTop: 24,\n                    ignoreHiddenSeries: true,\n                    events: {\n                        redraw() {\n                            if (typeof onAfterChartRendered === 'function') {\n                                onAfterChartRendered(this);\n                            }\n                        },\n                    },\n                },\n\n                colorAxis: { min, max, minColor, maxColor, marker: { color: 'transparent' } },\n\n                legend: {\n                    enabled: true,\n                    align: 'right',\n                    layout: 'horizontal',\n                    verticalAlign: 'bottom',\n                    symbolHeight: 10,\n                    symbolWidth: 200,\n                },\n\n                plotOptions: {\n                    heatmap: {\n                        borderWidth: POINT_BORDER_WIDTH_PIXELS,\n                        borderColor: 'white',\n                        colsize: granularity.asMilliseconds(),\n                        color: 'transparent',\n                        nullColor: '#FFF',\n                        nullInteraction: true,\n                        states: {\n                            hover: {\n                                enabled: false,\n                            },\n                        },\n                    },\n                },\n\n                series: baseTimeSeries.map((obj, index) => {\n                    const { name, timeseries, id, isAggregatedRemainder } = obj;\n                    return {\n                        index,\n                        isAggregatedRemainder,\n                        id,\n                        name,\n                        data: timeseries.map(val => ([\n                            val.timestamp,\n                            index,\n                            val[field],\n                        ])),\n                        legendIndex: index,\n                        aggregatedValue: obj[field],\n                        point: {\n                            events: {\n                                mouseOver(event) {\n                                    if (thisComponent.lastPointHovered !== this) {\n                                        thisComponent.lastPointHovered = this;\n                                        onMouseOverPoint({ point: this, event });\n                                    }\n                                },\n                            },\n                        },\n                    };\n                }),\n\n                title: {\n                    text: null,\n                },\n\n                tooltip: {\n                    enabled: false,\n                },\n\n                xAxis: {\n                    ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n                },\n\n                yAxis: {\n                    title: false,\n                    categories: pluck(baseTimeSeries, 'name'),\n                    minPadding: 0,\n                    maxPadding: 0,\n                    reversed: true,\n                    min: 0,\n                    labels: {\n                        enabled: false,\n                    },\n                    gridLineWidth: 0,\n                    lineWidth: 0,\n                },\n            }\n        );\n    }\n\n    render() {\n        return (\n            <ReactHighcharts\n                config={this.config()}\n                domProps={{ id: this.containerElementId }}\n                callback={this.onAfterChartRendered}\n            />\n        );\n    }\n}\n\nChartWrapper.propTypes = {\n    chartRangeStart: PropTypes.oneOfType([\n        /**\n         * Moment\n         */\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n\n    chartRangeEnd: PropTypes.oneOfType([\n        /**\n         * Moment\n         */\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n\n    /**\n     * Key of data point used for the value in `props.baseTimeSeries.timeseries[n]` object\n     */\n    field: PropTypes.string.isRequired,\n\n    baseTimeSeries: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        timeseries: PropTypes.arrayOf(PropTypes.shape({\n            timestamp: PropTypes.number.isRequired,\n        })).isRequired,\n    })),\n    onMouseOverPoint: PropTypes.func.isRequired,\n    onMouseOut: PropTypes.func.isRequired,\n    onAfterChartRendered: PropTypes.func.isRequired,\n\n    /**\n     * The minimum value of the axis in terms of map point values.\n     * If null, the min value is automatically calculated.\n     */\n    min: PropTypes.number,\n\n    /**\n     * The minimum value of the axis in terms of map point values.\n     * If null, the min value is automatically calculated.\n     */\n    max: PropTypes.number,\n\n    /**\n     * The color to represent the minimum of the color axis.\n     */\n    minColor: PropTypes.string.isRequired,\n\n    /**\n     * The color to represent the maximum of the color axis.\n     */\n    maxColor: PropTypes.string.isRequired,\n\n    /**\n     * Granularity (per-sample resolution) as Moment.Duration, which is the X-Axis unit\n     */\n    granularity: PropTypes.object,\n\n    // From ReactDimensions\n    containerHeight: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n\n    /**\n     * Some optional padding/spacing to put on the left side of the chart. Defaults to 0.\n     */\n    spacingLeft: PropTypes.number,\n\n    onChartSelect: PropTypes.func,\n};\n\nChartWrapper.defaultProps = {\n    spacingLeft: 0,\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default ReactDimensions({ elementResize: true })(ChartWrapper);\n","/* eslint-disable react/no-unused-state */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport numeral from 'numeral';\nimport chroma from 'chroma-js';\nimport { pick, pluck, compact, flatten } from 'underscore';\nimport Legend from '@infosight/elmer/dist/components/Legend';\nimport { MINUTE_MOMENT_FORMAT } from '@infosight/elmer/dist/utils/time';\nimport { minWidthPixelsSelector } from 'progeny/modules/user/reducer';\nimport { getStore } from 'progeny/util/storeProvider';\nimport { CHART_COLORS } from '../../../util/chartColors';\nimport { findPoints } from '../../charts/util/synchronization';\nimport HighchartsWrapper, { POINT_BORDER_WIDTH_PIXELS } from './HighchartsWrapper';\n\n// Give each series a fixed height to align the legend/axis labels\nconst SERIES_HEIGHT_PIXELS = 24;\n\n// Fix a cell width to acheive optimal data resolution\nconst POINT_WIDTH_PIXELS = 6;\n\n// Total horizontal space used by each cell\nconst POINT_WIDTH = POINT_WIDTH_PIXELS + POINT_BORDER_WIDTH_PIXELS;\n\nexport const formatValue = (value) => {\n    if (value === undefined || value === null) {\n        return 'N/A';\n    }\n\n    return numeral(value).format('0,0.00');\n};\n\nexport const buildDefaultPointValues = ({ baseTimeSeries, field, min, max, minColor, maxColor }) => {\n    if (!baseTimeSeries) {\n        return {};\n    }\n\n    const aggregatedValues = pluck(flatten(pluck(baseTimeSeries, 'timeseries')), field);\n    if (typeof min !== 'number') {\n        min = Math.min(...aggregatedValues);\n    }\n\n    if (typeof max !== 'number') {\n        max = Math.max(...aggregatedValues);\n    }\n\n    if (max === 0) {\n        maxColor = minColor;\n    }\n\n    const chromaScale = chroma.scale([minColor, maxColor]).domain([min, max]);\n\n    return baseTimeSeries.reduce((memo, set) => {\n        const value = set[field];\n        const color = chromaScale(value);\n        memo[set.id] = { value, color };\n        return memo;\n    }, {});\n};\n\n// TODO Test this\nexport default class CorrelationHeatmapTimeSeries extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        const defaultPointValues = buildDefaultPointValues(this.props);\n        this.state = {\n            defaultPointValues,\n            pointValues: defaultPointValues,\n            pointTimestamp: null,\n            isPointHovered: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.monitorChart(this, { syncPoints: this.syncPoints, resetPoints: this.resetPoints });\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        const { baseTimeSeries, field } = newProps;\n        if (this.props.baseTimeSeries !== baseTimeSeries || this.props.field !== field) {\n            this.setState({ defaultPointValues: buildDefaultPointValues(newProps) });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevPointTimestamp = prevState.pointTimestamp;\n        const { pointTimestamp } = this.state;\n        if (this.chart && pointTimestamp !== prevPointTimestamp) {\n            // we need to do this by modifying the chart rather than with props\n            // because ReactHighcharts is not truly functional and breaks\n            // if you just modify the props to have a different config\n            const plotLineId = 'fake-crosshair-plotline';\n            this.chart.xAxis[0].removePlotLine(plotLineId);\n            if (pointTimestamp) {\n                this.chart.xAxis[0].addPlotLine({\n                    id: plotLineId,\n                    value: pointTimestamp,\n                    color: CHART_COLORS.crosshairs,\n                    width: 2,\n                    zIndex: 10,\n                });\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.removeChart(this);\n        }\n    }\n\n    onMouseOverPoint(opts) {\n        if (!opts.point) {\n            return;\n        }\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints(opts);\n        } else {\n            this.syncPoints(opts.point);\n        }\n    }\n\n    onMouseOut(event) {\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints({ event });\n        } else {\n            this.resetPoints();\n        }\n    }\n\n    onAfterChartRendered(chart) {\n        this.chart = chart;\n        const { requestDataResolution } = this.props;\n\n        if (requestDataResolution) {\n            requestDataResolution({ maxSamples: Math.floor(chart.plotWidth / POINT_WIDTH) });\n        }\n\n        this.forceUpdate();\n    }\n\n    resetPoints() {\n        this.setState(({ defaultPointValues }) => ({\n            pointValues: defaultPointValues,\n            pointTimestamp: null,\n            isPointHovered: false,\n        }));\n    }\n\n    syncPoints({ index, x }) {\n        this.setState({\n            pointValues: findPoints(this.chart, index, x, (point, series) => (point ? pick(point, 'value', 'color') : { color: series.color, value: null })),\n            pointTimestamp: x,\n            isPointHovered: true,\n        });\n    }\n\n    // TODO do this only when chart size has changed\n    calculateChartHeight() {\n        const { baseTimeSeries } = this.props;\n        let plotVerticalMargin;\n\n        if (this.chart) {\n            const { chartHeight, plotHeight } = this.chart;\n            plotVerticalMargin = chartHeight - plotHeight;\n        } else {\n            plotVerticalMargin = 101;\n        }\n        return (baseTimeSeries.length * SERIES_HEIGHT_PIXELS) + plotVerticalMargin;\n    }\n\n    buildLegendItems() {\n        const { unit, getObjectLinkProps, valueFormatter } = this.props;\n        const { series } = this.chart;\n        const { pointValues } = this.state;\n        return compact(series).map((highchartsSeries) => {\n            const { options: { id } } = highchartsSeries;\n            return {\n                id,\n                unit,\n                label: highchartsSeries.name,\n                icon: true,\n                color: !pointValues[id] || pointValues[id].value === null ? 'transparent' : pointValues[id].color,\n                value: pointValues[id] && valueFormatter(pointValues[id].value),\n                linkProps: getObjectLinkProps(highchartsSeries),\n            };\n        });\n    }\n\n    render() {\n        const {\n            baseTimeSeries,\n            chartRangeStart,\n            chartRangeEnd,\n            field,\n            minColor,\n            maxColor,\n            granularity,\n            spacingLeft,\n            timestampFormat,\n            valueTitle,\n            onChartSelect,\n        } = this.props;\n        let {\n            min,\n            max,\n        } = this.props;\n        const { chart } = this;\n        const { pointTimestamp, isPointHovered } = this.state;\n\n        const aggregatedValues = pluck(flatten(pluck(baseTimeSeries, 'timeseries')), field);\n        if (typeof min !== 'number') {\n            min = Math.min(...aggregatedValues);\n        }\n\n        if (typeof max !== 'number') {\n            max = Math.max(...aggregatedValues);\n        }\n\n        return (\n            <div className=\"row expanded\" style={{ height: `${this.calculateChartHeight()}px` }}>\n                <div className=\"column large-19\">\n                    <HighchartsWrapper\n                        baseTimeSeries={baseTimeSeries}\n                        chartRangeStart={chartRangeStart}\n                        chartRangeEnd={chartRangeEnd}\n                        onAfterChartRendered={this.onAfterChartRendered}\n                        onMouseOverPoint={this.onMouseOverPoint}\n                        onMouseOut={this.onMouseOut}\n                        onChartSelect={onChartSelect}\n                        granularity={granularity}\n                        field={field}\n                        min={min}\n                        max={max}\n                        minColor={minColor}\n                        maxColor={max === 0 ? minColor : maxColor}\n                        spacingLeft={spacingLeft}\n                        containerHeight={this.calculateChartHeight()}\n                    />\n                </div>\n                {chart && chart.series && (\n                    <Legend\n                        className=\"column large-5\"\n                        timestampFormat={timestampFormat}\n                        items={this.buildLegendItems()}\n                        timestamp={(isPointHovered && pointTimestamp) || null}\n                        reserveTimestampSpace\n                        height={SERIES_HEIGHT_PIXELS}\n                        valueTitle={valueTitle}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nCorrelationHeatmapTimeSeries.propTypes = {\n    /**\n     * Each element in `props.baseTimeSeries[].` should have a `props.field` stanza, which is the aggregated value\n     * Each element in `props.baseTimeSeries[].timeseries[]` should have a `props.field` stanza which is the value\n     * at that point.\n     */\n    baseTimeSeries: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        timeseries: PropTypes.arrayOf(PropTypes.shape({\n            timestamp: PropTypes.number.isRequired,\n        })).isRequired,\n    })),\n\n    chartRangeStart: PropTypes.oneOfType([\n        /**\n         * Moment\n         */\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n\n    chartRangeEnd: PropTypes.oneOfType([\n        /**\n         * Moment\n         */\n        PropTypes.object,\n        PropTypes.number,\n    ]),\n\n    /**\n     * Callback used to request data at a specific resolution\n     * @param {{maxSamples: Number}} options\n     */\n    requestDataResolution: PropTypes.func,\n    field: PropTypes.string.isRequired,\n    unit: PropTypes.string.isRequired,\n\n    /**\n     * Moment.Duration\n     */\n    granularity: PropTypes.object.isRequired,\n\n    /**\n     * The minimum value of the axis in terms of map point values.\n     * If null, the min value is automatically calculated.\n     */\n    min: PropTypes.number,\n\n    /**\n     * The minimum value of the axis in terms of map point values.\n     * If null, the min value is automatically calculated.\n     */\n    max: PropTypes.number,\n\n    /**\n     * The color to represent the minimum of the color axis.\n     */\n    minColor: PropTypes.string.isRequired,\n\n    /**\n     * The color to represent the maximum of the color axis.\n     */\n    maxColor: PropTypes.string.isRequired,\n\n    /**\n     * Get the props for a elmer.QueryLink component\n     * @param highchartsSeries\n     * @return {Object}\n     */\n    getObjectLinkProps: PropTypes.func.isRequired,\n\n    /**\n     * Format the value displayed in the point\n     * @param value\n     * @return {String}\n     */\n    valueFormatter: PropTypes.func.isRequired,\n\n    /**\n     * Some optional padding/spacing to put on the left side of the chart.\n     */\n    spacingLeft: PropTypes.number,\n\n    timestampFormat: PropTypes.string,\n    valueTitle: PropTypes.node,\n    chartSync: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n\n    onChartSelect: PropTypes.func,\n};\n\nCorrelationHeatmapTimeSeries.defaultProps = {\n    min: 0,\n    minColor: CHART_COLORS.gradientMinGrey,\n    maxColor: CHART_COLORS.blue,\n    valueFormatter: formatValue,\n    timestampFormat: MINUTE_MOMENT_FORMAT,\n};\n\n/**\n * Notice the column widths above which are based on foundation's flex grid?\n * @type {number}\n */\nconst CHART_AREA_GRID_WIDTH_RATIO = 19 / 24;\n\n/**\n * Guess the sample rate used to determine the granularity of the chart. Useful for the first render.\n * @return {number}\n */\nexport const guessMaxSampleCount = () => {\n    const width = Math.max((window && window.innerWidth) || 0, minWidthPixelsSelector(getStore().getState()));\n    return Math.floor((width * CHART_AREA_GRID_WIDTH_RATIO) / POINT_WIDTH);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Highstock as Highcharts } from 'progeny/modules/nimble/highchartsProxy';\n\n/**\n * Reset tooltip\n * @param {*} mouseEvent ( mouseLeave | mouseOut event)\n */\nfunction resetTooltips(mouseEvent) {\n    let chart;\n    let hoveredPoint;\n    let chartIndex;\n    let seriesIndex;\n    let event;\n    let seriesCount;\n    const chartCount = Highcharts.charts.length;\n\n    for (chartIndex = 0; chartIndex < chartCount; chartIndex += 1) {\n        chart = Highcharts.charts[chartIndex];\n        if (chart) {\n            seriesCount = chart.series.length;\n            event = chart.pointer.normalize(Object.assign({}, mouseEvent)); // Find coordinates within the chart\n            // Iterate over all the series of the chart\n            for (seriesIndex = 0; seriesIndex < seriesCount; seriesIndex += 1) {\n                hoveredPoint = chart.series[seriesIndex].searchPoint(event, true); // Get the hovered point\n                if (hoveredPoint) {\n                    hoveredPoint.onMouseOut();\n                    if (chart.tooltip && typeof chart.tooltip.hide === 'function') {\n                        chart.tooltip.hide(hoveredPoint);\n                    }\n                }\n            }\n            chart.xAxis[0].hideCrosshair();\n        }\n    }\n}\n\n/**\n * Draw sycnhronized cross hairs on mouse move\n * @param {*} mouseMoveEvent\n */\nfunction syncChartCrossHairs(mouseMoveEvent) {\n    let chart;\n    let hoveredPoint;\n    let chartIndex;\n    let seriesIndex;\n    let event;\n    let seriesCount;\n    // TODO: Instead of accessing all the charts on the page, use an attributet to filter the charts we want to sync\n    const chartCount = Highcharts.charts.length;\n\n    for (chartIndex = 0; chartIndex < chartCount; chartIndex += 1) {\n        chart = Highcharts.charts[chartIndex];\n        if (chart) {\n            seriesCount = chart.series.length;\n            event = chart.pointer.normalize(Object.assign({}, mouseMoveEvent)); // Find coordinates within the chart\n            const hoverPoints = [];\n            // Iterate over all the series of the chart\n            for (seriesIndex = 0; seriesIndex < seriesCount; seriesIndex += 1) {\n                hoveredPoint = chart.series[seriesIndex].searchPoint(event, true); // Get the hovered point\n                if (hoveredPoint) {\n                    hoveredPoint.onMouseOver(); // Show the hover marker\n                    hoverPoints.push(hoveredPoint);\n                    chart.xAxis[0].drawCrosshair(mouseMoveEvent, hoveredPoint); // Show the crosshair\n                }\n            }\n\n            if (hoverPoints.length && chart.tooltip && typeof chart.tooltip.refresh === 'function') {\n                chart.tooltip.refresh(hoverPoints);\n            }\n        }\n    }\n}\n\n/**\n * Basic Highcharts crosshair and marker synchronization with no external dependencies. Just put this in the component tree\n * and all charts in the DOM will be synched.\n *\n * For more complex cases, such as Shower Tile views where the various chart elements are deconstructed and recomposed, use ChartSyncProvider\n */\nconst SyncChart = ({ onMouseLeave, children }) => (\n    <div onMouseMove={syncChartCrossHairs} onMouseLeave={onMouseLeave || resetTooltips} onMouseOut={onMouseLeave || resetTooltips}>\n        {children}\n    </div>\n);\n\n\nSyncChart.propTypes = {\n    /**\n     * Consumer can override the behavior as it can be different based on the Chart\n     * Ex: On some charts we reset to default Legend Values ( which have to be computed in most cases)\n     *     On some we might just show empty values or reset tooltip\n     * If none passed, it defaults to tooltip reset\n     */\n    onMouseLeave: PropTypes.func,\n    children: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.element,\n        PropTypes.node,\n    ])),\n};\n\nexport default SyncChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\n\nconst contextTypes = {\n    chartSyncProvider: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n};\n\n/**\n * Wraps an element to add a chartSync prop that contains the callbacks needed to work with ChartSyncProvider\n * @param children\n * @param chartSyncProvider\n * @constructor\n */\nexport const SynchronizedChart = ({ children }, { chartSyncProvider }) => React.cloneElement(React.Children.only(children), { chartSync: chartSyncProvider });\nSynchronizedChart.contextTypes = contextTypes;\n\n/**\n * When there are complex interactions required for one chart to be synced with another, such as deconstructed and recomposed charts like the Shower Tile\n * view, SyncChart breaks down. This is a mediator entity that responds to a request to sync a point from one chart by triggering all charts to sync to that\n * point. Each component registers itself with two callbacks which are used to let each chart handle moving crosshairs and activating marker.\n */\nexport class SynchronizedChartMediator extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.charts = [];\n    }\n\n    getChildContext() {\n        return { chartSyncProvider: this };\n    }\n\n    monitorChart(chart, { syncPoints, resetPoints }) {\n        if (!chart) {\n            return;\n        }\n\n        if (!syncPoints || !resetPoints) {\n            console.assert(syncPoints, 'Expected a callback syncPoints(point)');\n            console.assert(resetPoints, 'Expected a callback resetPoints()');\n            return;\n        }\n\n        this.charts.push({ chart, syncPoints, resetPoints });\n    }\n\n    removeChart(chart) {\n        for (let i = 0; i < this.charts.length; i += 1) {\n            if (this.charts[i].chart === chart) {\n                this.charts.splice(i, 1);\n            }\n        }\n    }\n\n    syncPoints({ point }) {\n        if (point) {\n            this.charts.forEach(chart => chart.syncPoints(point));\n        } else {\n            this.charts.forEach(chart => chart.resetPoints(point));\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nSynchronizedChartMediator.propTypes = {\n    children: PropTypes.node,\n};\n\nSynchronizedChartMediator.childContextTypes = contextTypes;\n","// Adapted from http://eddmann.com/posts/cartesian-product-in-javascript/\nexport default function cartesianProductOf(...sets) {\n    return sets.reduce((acc, set) =>\n        [].concat(...acc.map(x => set.map(y => [...x, y]))),\n    [[]]);\n}\n\n/**\n * Cartesian product of the keys in objects\n * @param sets\n * @return {*}\n */\nexport function cartesianProductOfKeys(...sets) {\n    return cartesianProductOf(...sets.map(Object.keys));\n}\n\n","import chroma from 'chroma-js';\nimport numeral from 'numeral';\nimport { cartesianProductOfKeys } from '../.././../../../../util/cartesianProductOf';\n\nexport const buildPerspectiveKey = ({ unit, io, access }) => `${unit}_${io}_${access}`;\n\nexport const buildPerspectives = () => {\n    const UNITS = {\n        iops: {\n            title: 'IO/sec',\n            fieldSegment: 'iops',\n        },\n        mbps: {\n            title: 'MiB/sec',\n            fieldSegment: 'mbps',\n            valueFormatter(value) {\n                if (value === undefined || value === null) {\n                    return 'N/A';\n                }\n\n                return numeral(value / (2 ** 20)).format('0,0.00');\n            },\n        },\n    };\n\n    const LATENCY_UNIT = {\n        ms: { title: 'ms', fieldSegment: 'latency' },\n    };\n\n    const IO_TYPES = {\n        readWrite: { title: 'Reads & Writes', fieldSegment: 'ReadWrite' },\n        read: { title: 'Reads', fieldSegment: 'Read' },\n        write: { title: 'Writes', fieldSegment: 'Write' },\n    };\n\n    const ACCESS_TYPES = {\n        randomSequential: { title: 'Random & Sequential', fieldSegment: 'RandomSequential' },\n        random: { title: 'Random', fieldSegment: 'Random' },\n        seq: { title: 'Sequential', fieldSegment: 'Sequential' },\n    };\n\n    const perspectives = {};\n\n    cartesianProductOfKeys(UNITS, IO_TYPES, ACCESS_TYPES)\n        .reduce((memo, [unit, io, access]) => {\n            memo[buildPerspectiveKey({ unit, io, access })] = {\n                field: `${UNITS[unit].fieldSegment}${ACCESS_TYPES[access].fieldSegment}${IO_TYPES[io].fieldSegment}`,\n                title: 'Throughput',\n                valueTitle: (`${UNITS[unit].fieldSegment}` === 'iops') ? 'Avg. IOPS' : 'Avg. Throughput',\n                chartTitle: `${ACCESS_TYPES[access].title} ${IO_TYPES[io].title}`,\n                unit: `${UNITS[unit].title}`,\n                latencyPerspectiveKey: buildPerspectiveKey({ io, unit: 'ms', access: '' }),\n                min: 0,\n                minColor: '#E2E6EA',\n                maxColor: chroma('#002e6d').hex(),\n                keys: { unit, io, access },\n                valueFormatter: UNITS[unit].valueFormatter,\n            };\n\n            return memo;\n        }, perspectives);\n\n    cartesianProductOfKeys(LATENCY_UNIT, IO_TYPES)\n        .reduce((memo, [unit, io]) => {\n            memo[buildPerspectiveKey({ unit, io, access: '' })] = {\n                field: `latency${IO_TYPES[io].fieldSegment}`,\n                title: 'Latency',\n                valueTitle: 'Avg. Latency',\n                chartTitle: `${IO_TYPES[io].title}`,\n                unit: `${LATENCY_UNIT[unit].title}`,\n                min: 0,\n                max: 10, // TODO This depends on the underlying hardware. It should really depend on the pain score.\n                minColor: '#E2E6EA',\n                maxColor: chroma('#d3524d').hex(),\n                keys: { unit, io, access: '' },\n            };\n\n            return memo;\n        }, perspectives);\n\n    return perspectives;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport { IconAdaptor } from '@infosight/elmer/dist/components/IconAdaptor';\nimport { QuerySelect } from '@infosight/elmer/dist/components/QueryField';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { OBJECTS } from '../../../../inventory';\nimport { CorrelationHeatmapTimeSeries } from '../../../../../charts/CorrelationHeatmapTimeSeries';\nimport { SynchronizedChart } from '../../../../../charts/SyncChart';\nimport { findGranularity } from '../../../../../../util/genericQuery';\nimport { perspectiveParam } from './queryParams';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nclass VolumePerformance extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = {\n            showActivityChart: true,\n            showLatencyChart: true,\n        };\n    }\n\n    getVolumeLinkProps({ options: { id, isAggregatedRemainder } }) {\n        const { scope, config, location } = this.props;\n        const view = config.findView(OBJECTS.VOLUME, isAggregatedRemainder ? 'list' : 'detail');\n        const innerScope = isAggregatedRemainder ? scope : { id, type: OBJECTS.VOLUME };\n        return config.getLinkPropsForView(view, innerScope, null, location);\n    }\n\n    toggleActivityVisibility() {\n        this.setState({\n            showActivityChart: !this.state.showActivityChart,\n        });\n    }\n\n    toggleLatencyVisibility() {\n        this.setState({\n            showLatencyChart: !this.state.showLatencyChart,\n        });\n    }\n\n    render() {\n        const {\n            throughputTimeseries,\n            throughputPerspective,\n            latencyTimeseries,\n            latencyPerspective,\n            loadingThroughputTimeseries,\n            loadedThroughputTimeseries,\n            loadingLatencyTimeseries,\n            loadedLatencyTimeseries,\n            chartRangeStart,\n            chartRangeEnd,\n            onChartSelect,\n        } = this.props;\n        const { showActivityChart, showLatencyChart } = this.state;\n        /* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/interactive-supports-focus */\n        return (\n            <div>\n                <Card\n                    hideSection={!showActivityChart}\n                    title={\n                        <div className=\"row expanded\">\n                            <div className=\"column\">\n                                <h2 className=\"no-margin\">Top Volumes By Activity</h2>\n                            </div>\n                            <div className={classnames('column shrink flex-container align-middle', { hide: !showActivityChart })}>\n                                <span className={cx('optionTitle')}>Activity Measure</span>\n                                <QuerySelect\n                                    className={classnames('field-width--small', cx('perspective-selector'))}\n                                    parameter={perspectiveParam('unit')}\n                                    value={throughputPerspective.keys.unit}\n                                >\n                                    <option value=\"iops\">IO/sec</option>\n                                    <option value=\"mbps\">MiB/sec</option>\n                                </QuerySelect>\n                                <span className={cx('optionTitle')}>IO Type</span>\n                                <label htmlFor=\"access1\">\n                                    <QuerySelect\n                                        id=\"access1\"\n                                        className={classnames('field-width--medium', cx('perspective-selector'))}\n                                        parameter={perspectiveParam('access')}\n                                        value={throughputPerspective.keys.access}\n                                    >\n                                        <option value=\"randomSequential\">Random & Sequential</option>\n                                        <option value=\"random\">Random</option>\n                                        <option value=\"seq\">Sequential</option>\n                                    </QuerySelect>\n                                </label>\n                                <QuerySelect\n                                    className={classnames('field-width--medium', cx('perspective-selector'))}\n                                    parameter={perspectiveParam('io')}\n                                    value={throughputPerspective.keys.io}\n                                >\n                                    <option value=\"readWrite\">Reads & Writes</option>\n                                    <option value=\"read\">Reads</option>\n                                    <option value=\"write\">Writes</option>\n                                </QuerySelect>\n                            </div>\n                            <div className=\"column shrink\">\n                                <div\n                                    className={cx('show-more-button')}\n                                    onClick={this.toggleActivityVisibility}\n                                    role=\"button\"\n                                >\n                                    <IconAdaptor type=\"font-awesome\" size=\"small\">\n                                        <i className={`fa ${showActivityChart ? 'fa-angle-up' : 'fa-angle-down'}`} />\n                                    </IconAdaptor>\n                                </div>\n                            </div>\n                        </div>}\n                >\n                    <Async loading={loadingThroughputTimeseries}>\n                        <NoData\n                            hasData={loadedThroughputTimeseries && throughputTimeseries && throughputTimeseries.data.length > 0}\n                            message=\"No activity data available for this time range.\"\n                        >\n                            {() => {\n                                const granularity = findGranularity(throughputTimeseries.meta.time.granularity);\n\n                                return (\n                                    <SynchronizedChart>\n                                        <CorrelationHeatmapTimeSeries\n                                            baseTimeSeries={throughputTimeseries.data}\n                                            chartRangeStart={chartRangeStart}\n                                            chartRangeEnd={chartRangeEnd}\n                                            requestDataResolution={this.onRequestDataResolution}\n                                            granularity={granularity}\n                                            getObjectLinkProps={this.getVolumeLinkProps}\n                                            rightSideTitles\n                                            spacingLeft={40}\n                                            {...throughputPerspective}\n                                            onChartSelect={onChartSelect}\n                                        />\n                                    </SynchronizedChart>\n                                );\n                            }}\n                        </NoData>\n                    </Async>\n                </Card>\n                <Card\n                    hideSection={!showLatencyChart}\n                    title={\n                        <div className=\"row expanded\">\n                            <div className=\"column\">\n                                <h2 className=\"no-margin\">Top Volumes by Latency</h2>\n                            </div>\n                            <div className={classnames('column shrink flex-container align-middle', { hide: !showLatencyChart })}>\n                                <span className={cx('optionTitle')}>IO Type</span>\n                                <QuerySelect\n                                    className={classnames('field-width--medium', cx('perspective-selector'))}\n                                    parameter={perspectiveParam('io')}\n                                    value={throughputPerspective.keys.io}\n                                >\n                                    <option value=\"readWrite\">Reads & Writes</option>\n                                    <option value=\"read\">Reads</option>\n                                    <option value=\"write\">Writes</option>\n                                </QuerySelect>\n                            </div>\n                            <div className=\"column shrink\">\n                                <div // eslint-disable-line jsx-a11y/no-static-element-interactions\n                                    className={cx('show-more-button')}\n                                    onClick={this.toggleLatencyVisibility}\n                                    role=\"button\"\n                                >\n                                    <IconAdaptor type=\"font-awesome\" size=\"small\">\n                                        <i className={`fa ${showLatencyChart ? 'fa-angle-up' : 'fa-angle-down'}`} />\n                                    </IconAdaptor>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                >\n                    <Async loading={loadingLatencyTimeseries}>\n                        <NoData\n                            hasData={loadedLatencyTimeseries && latencyTimeseries && latencyTimeseries.data.length}\n                            message=\"No latency data available for this time range.\"\n                        >\n                            {() => {\n                                const granularity = findGranularity(latencyTimeseries.meta.time.granularity);\n\n                                return (\n                                    <SynchronizedChart>\n                                        <CorrelationHeatmapTimeSeries\n                                            baseTimeSeries={latencyTimeseries.data}\n                                            chartRangeStart={chartRangeStart}\n                                            chartRangeEnd={chartRangeEnd}\n                                            granularity={granularity}\n                                            getObjectLinkProps={this.getVolumeLinkProps}\n                                            rightSideTitles\n                                            spacingLeft={40}\n                                            {...latencyPerspective}\n                                            onChartSelect={onChartSelect}\n                                        />\n                                    </SynchronizedChart>\n                                );\n                            }}\n                        </NoData>\n                    </Async>\n                </Card>\n            </div>\n        );\n    }\n}\n\nVolumePerformance.propTypes = {\n    loadingThroughputTimeseries: PropTypes.bool,\n    loadedThroughputTimeseries: PropTypes.bool,\n    throughputTimeseries: PropTypes.shape({\n        data: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n                granularity: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n    loadingLatencyTimeseries: PropTypes.bool,\n    loadedLatencyTimeseries: PropTypes.bool,\n    latencyTimeseries: PropTypes.shape({\n        data: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n                granularity: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n    throughputPerspective: PropTypes.shape({}),\n    latencyPerspective: PropTypes.shape({}),\n    chartRangeEnd: PropTypes.object,\n    chartRangeStart: PropTypes.object,\n    onChartSelect: PropTypes.func,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nexport default VolumePerformance;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\n\nexport class PoolPerformanceSnapShotView extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    data() {\n        const { cpuCacheTimeseries, cpuThresholdPercent, cacheThresholdPercent } = this.props;\n        return cpuCacheTimeseries.map(point => ({\n            x: point.timestamp,\n            y: (point.cpuUsagePercent > cpuThresholdPercent || point.cacheUsagePercent > cacheThresholdPercent) ? 1 : null,\n        }));\n    }\n\n    config() {\n        return {\n            chart: {\n                type: 'column',\n                backgroundColor: 'transparent',\n                width: this.props.containerWidth,\n                height: this.props.containerHeight,\n                spacingTop: 0,\n                spacingBottom: 0,\n                spacingLeft: 40,\n                spacingRight: 0,\n            },\n            title: false,\n            xAxis: {\n                type: 'datetime',\n                visible: true,\n            },\n            yAxis: {\n                visible: false,\n            },\n            tooltip: false,\n            plotOptions: {\n                column: {\n                    pointPlacement: 0.5,\n                    pointPadding: 0,\n                    groupPadding: 0,\n                    borderWidth: 0,\n                    minPointLength: 3,\n                },\n            },\n            series: [{\n                name: 'Pool Performance Impact',\n                color: CHART_COLORS.redOrange,\n                data: this.data(),\n            }],\n        };\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} />}\n            </NoData>\n        );\n    }\n}\n\nPoolPerformanceSnapShotView.propTypes = {\n    cpuCacheTimeseries: PropTypes.arrayOf(PropTypes.shape({\n        cpuUsagePercent: PropTypes.number,\n        cacheUsagePercent: PropTypes.number,\n    })),\n    cpuThresholdPercent: PropTypes.number,\n    cacheThresholdPercent: PropTypes.number,\n    containerHeight: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n};\n\nPoolPerformanceSnapShotView.defaultProps = {\n    containerHeight: 0,\n    containerWidth: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(PoolPerformanceSnapShotView);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDimensions from 'react-dimensions';\nimport { Highstock as Highcharts } from 'progeny/modules/nimble/highchartsProxy';\nimport { noop } from 'underscore';\nimport MouseOutTrackingHighchart from './MouseOutTrackingHighchart';\n\nclass ResponsiveChartWrapper extends PureComponent {\n    config() {\n        const { containerHeight, containerWidth, callback, config } = this.props;\n        return Highcharts.merge(config, {\n            chart: {\n                height: containerHeight,\n                width: containerWidth,\n                events: {\n                    redraw() {\n                        if (typeof callback === 'function') {\n                            callback(this);\n                        }\n                    },\n                },\n            },\n        });\n    }\n\n    render() {\n        return <MouseOutTrackingHighchart onMouseOut={noop} {...this.props} config={this.config()} />;\n    }\n}\n\nResponsiveChartWrapper.propTypes = {\n    /**\n     * The container height/width is merged into this Highcharts config object\n     */\n    config: PropTypes.object,\n\n    /**\n     * Executed by ReactHighcharts after the chart is rendered\n     * @param {Highcharts.Chart} chart\n     */\n    callback: PropTypes.func.isRequired,\n\n    onMouseOut: PropTypes.func.isRequired,\n\n    // From ReactDimensions\n    containerHeight: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n};\n\nexport default ReactDimensions({ elementResize: true })(ResponsiveChartWrapper);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport { Highstock as Highcharts } from 'progeny/modules/nimble/highchartsProxy';\nimport Legend from '@infosight/elmer/dist/components/Legend';\nimport { identity } from 'underscore';\nimport { moveCrosshair, findPoints } from './util/synchronization';\nimport ResponsiveChartWrapper from './ResponsiveChartWrapper';\n\nconst defaultGetCorrespondingPoints = ({ index, x }, chart) => {\n    const hoverPoints = [];\n    const pointValues = findPoints(chart, index, x, (point, series) => {\n        if (point) {\n            hoverPoints.push(point);\n            return { color: point.color, value: point.y };\n        }\n\n        return { color: series.color, value: null };\n    });\n\n    return { pointValues, hoverPoints };\n};\n\n// TODO this could become a core part of a ShowerTileViewPage or MultiObjectChartPage component\n// TODO test this\nclass MultiObjectChart extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.state = this.getStateFromProps(this.props);\n    }\n\n    componentDidMount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.monitorChart(this, { syncPoints: this.syncPoints, resetPoints: this.resetPoints });\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.defaultPointValues !== this.props.defaultPointValues || newProps.config !== this.props.config) {\n            this.setState(this.getStateFromProps(newProps));\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.removeChart(this);\n        }\n    }\n\n    onMouseOverPoint(opts) {\n        if (!opts.point) {\n            return;\n        }\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints(opts);\n        } else {\n            this.syncPoints(opts.point, opts.event);\n        }\n    }\n\n    onMouseOut(event) {\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints({ event });\n        } else {\n            this.resetPoints();\n        }\n    }\n\n    onAfterChartRendered(chart) {\n        this.chart = chart;\n        this.forceUpdate();\n    }\n\n    getStateFromProps(props) {\n        return {\n            pointTimestamp: null,\n            isPointHovered: false,\n            pointValues: props.defaultPointValues,\n            config: this.config(props.config),\n        };\n    }\n\n    resetPoints() {\n        // Remove markers from any active points\n        if (this.chart.hoverPoints) {\n            this.chart.hoverPoints.forEach(point => point.setState());\n        }\n\n        this.chart.xAxis[0].hideCrosshair();\n\n        this.setState({ isPointHovered: false, pointValues: this.props.defaultPointValues, pointTimestamp: null });\n    }\n\n    syncPoints(point, event) {\n        const { pointValues, hoverPoints } = this.props.getCorrespondingPoints(point, this.chart, event);\n        if (this.props.useHighchartsCrosshair) {\n            moveCrosshair(hoverPoints, this.chart, event);\n        }\n\n        this.setState({ pointValues, pointTimestamp: point.x, isPointHovered: true });\n    }\n\n    buildLegendItems() {\n        const { buildLegendItems, legendValueFormatter } = this.props;\n        if (buildLegendItems) {\n            return buildLegendItems({ chart: this.chart, pointValues: this.state.pointValues });\n        }\n\n        // Default buildLegendItems implementation if one is not passed\n        const { series } = this.chart;\n        const { pointValues } = this.state;\n        return series.map(highchartSeries => ({\n            id: highchartSeries.options.id,\n            label: highchartSeries.options.name,\n            icon: true,\n            color: !highchartSeries.color ? 'transparent' : highchartSeries.color,\n            value: legendValueFormatter(pointValues && pointValues[highchartSeries.options.id] ? pointValues[highchartSeries.options.id].value : null),\n        }));\n    }\n\n    config(config) {\n        const self = this;\n        if (config.series) {\n            config.series = config.series.map(series => Highcharts.merge(series, {\n                marker: {\n                    enabled: false,\n                },\n                point: {\n                    events: {\n                        mouseOver(event) {\n                            if (self.lastPointHovered !== this) {\n                                self.lastPointHovered = this;\n                                self.onMouseOverPoint({ event, point: this });\n                            }\n                        },\n                    },\n                },\n            }));\n        }\n\n        return Highcharts.merge(config, {\n            chart: {\n                plotBorderWidth: 0,\n                spacingTop: 0,\n                spacingBottom: 0,\n                spacingLeft: 10,\n                spacingRight: 0,\n                marginTop: 24,\n                ignoreHiddenSeries: true,\n            },\n\n            title: false,\n\n            /**\n             * Required for synced charts\n             */\n            tooltip: {\n                enabled: true,\n                shared: true,\n\n                /**\n                 * Position the tooltip outside of the chart area so it never appears\n                 */\n                positioner(w, h) {\n                    return { x: -this.chart.plotLeft - w, y: -this.chart.plotTop - h };\n                },\n            },\n        });\n    }\n\n    render() {\n        const { chart, state: { isPointHovered, pointTimestamp, config }, props: { className } } = this;\n\n        return (\n            <div className={classnames('row expanded', className)}>\n                <div className=\"column large-19\">\n                    <ResponsiveChartWrapper callback={this.onAfterChartRendered} onMouseOut={this.onMouseOut} config={config} />\n                </div>\n                {chart && chart.series && (\n                    <Legend\n                        className=\"column large-5\"\n                        items={this.buildLegendItems()}\n                        timestamp={(isPointHovered && pointTimestamp) || null}\n                        reserveTimestampSpace\n                        valueTitle=\"Avg. Usage\"\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nMultiObjectChart.propTypes = {\n    /**\n     * Generates a Highchart config. Each series should have an id property.\n     */\n    config: PropTypes.object.isRequired,\n\n    /**\n     * Get the values to display in the legend when the user hovers over a point.\n     * @param opt.chart {Highcharts.Chart}\n     * @param opt.pointValues {Array<{value, color}>}\n     * @return {Array<LegendItem>} Value used for for elmer's Legend.props.items\n     */\n    buildLegendItems: PropTypes.func,\n\n    legendValueFormatter: PropTypes.func,\n\n    /**\n     * Get the values to display when no point is active (the user isn't hovering over a point)\n     * @return {Object} Each key should be the series id. The value is {color, value}\n     */\n    defaultPointValues: PropTypes.func.isRequired,\n\n    /**\n     * Get all the values at a timestamp that should be displayed in the legend when the user hovers over a point.\n     * This function is allowed to have synchronous side effects, such as updating crosshairs.\n     * @param point {Highcharts.Point}\n     * @param chart {Highcharts.Chart}\n     * @param event {Event}\n     * @return {pointValues, hoverPoints}\n     *      {Object} pointValues Each key should be the series id. The value is {color, value}\n     *      {Array<Highcharts.Point>} hoverPoints\n     */\n    getCorrespondingPoints: PropTypes.func,\n\n    /**\n     * Update the crosshairs and markers on hover and mouse out on a point\n     */\n    useHighchartsCrosshair: PropTypes.bool,\n\n    /**\n     * Wrap this element in a `<SynchronizedChart>` element to inject this prop.\n     */\n    chartSync: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n};\n\nMultiObjectChart.defaultProps = {\n    legendValueFormatter: identity,\n    getCorrespondingPoints: defaultGetCorrespondingPoints,\n};\n\nexport default MultiObjectChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport chroma from 'chroma-js';\nimport { createSelector } from 'reselect';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport { IconAdaptor } from '@infosight/elmer/dist/components/IconAdaptor';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\nimport PoolPerformanceSnapshotView from './PoolPerformanceSnapShotView';\nimport styles from './style.scss';\nimport MultiObjectChart from '../../../../../charts/MultiObjectChart';\nimport { SynchronizedChart } from '../../../../../charts/SyncChart';\nimport { xAxisDataRange } from '../../../../../charts/mixins/xAxis';\nimport applyMixins from '../../../../../charts/mixins/applyMixins';\nimport dragZoomMixin from '../../../../../charts/mixins/dragZoom';\nimport { headlineValueFormatter } from '../../../../../../util/formatter';\nimport { FORMAT_NUMBER_EXTRA_PRECISION } from '../../../../../../util/formatter/constants';\n\nconst cx = classnames.bind(styles);\n\nconst CPU_SERIES_ID = 'cpu';\nconst CACHE_SERIES_ID = 'cache';\n\n// Use this if it is decided to hide for the beta release\nconst SHOW_POOL_PERFORMANCE_SNAPSHOT_VIEW = false;\nconst SHOW_PLOT_BANDS_WHEN_METRIC_EXCEEDS_THRESHOLD = false;\n\nconst buildMedianSeries = (timeseries, timestamp, medianValuekey) => timeseries.map(datapoint => ([datapoint[timestamp], datapoint[medianValuekey]]));\n\n/**\n * This function helps to calculate average of averages(50th percentile values)\n * @param {*} key\n * @param {*} cpuCacheTimeseries\n */\nconst getAvgUsage = (key, cpuCacheTimeseries) => {\n    if (!cpuCacheTimeseries || !cpuCacheTimeseries.length) {\n        return null;\n    }\n\n    return cpuCacheTimeseries.reduce((sum, datapoint) => sum + (datapoint[key] || 0), 0) / cpuCacheTimeseries.length;\n};\n\nconst cpuCacheTimeSeriesSelector = props => props.cpuCacheTimeseries;\n\n/**\n *  Compute and Memoize the default values of the Legend\n */\nconst computeDefaultPointValues = createSelector(\n    cpuCacheTimeSeriesSelector,\n    cpuCacheTimeseries => ({\n        [CPU_SERIES_ID]: { id: CPU_SERIES_ID, value: getAvgUsage('cpuUsagePercent', cpuCacheTimeseries) },\n        [CACHE_SERIES_ID]: { id: CACHE_SERIES_ID, value: getAvgUsage('cacheUsagePercent', cpuCacheTimeseries) },\n    })\n);\n\n/**\n * reselect library expects every selector to be a function, hence this redirection\n *  This function returns the props that are required to compute the Pool Performance Chart Config\n */\nconst chartConfigSelector = props => ({\n    isAllFlashPool: props.isAllFlashPool,\n    cpuCacheTimeseries: props.cpuCacheTimeseries,\n    cpuThresholdPercent: props.cpuThresholdPercent,\n    cacheThresholdPercent: props.cacheThresholdPercent,\n    chartRangeStart: props.chartRangeStart,\n    chartRangeEnd: props.chartRangeEnd,\n    onChartSelect: props.onChartSelect,\n});\n\n/**\n * Compute and memoize the chart config\n */\nconst config = createSelector(\n    chartConfigSelector,\n    (chartConfigProps) => {\n        const {\n            isAllFlashPool,\n            cpuCacheTimeseries,\n            cpuThresholdPercent,\n            cacheThresholdPercent,\n            chartRangeStart,\n            chartRangeEnd,\n            onChartSelect,\n        } = chartConfigProps;\n        const cpuAverages = buildMedianSeries(cpuCacheTimeseries, 'timestamp', 'cpuUsagePercent');\n\n        // TODO: Add plot line when there is only data point which exceeds the Threshold\n        const performanceImpactColor = chroma(CHART_COLORS.redOrange).alpha(0.3).css();\n        let index = -1;\n        let isNewPlotBand = true;\n        let store = null;\n\n        let plotBands;\n        if (SHOW_PLOT_BANDS_WHEN_METRIC_EXCEEDS_THRESHOLD) {\n            plotBands = cpuCacheTimeseries.reduce((memo, point) => {\n                if (point.cpuUsagePercent > cpuThresholdPercent || point.cacheUsagePercent > cacheThresholdPercent) {\n                    if (isNewPlotBand) {\n                        index += 1;\n                        memo[index] = { color: performanceImpactColor, from: point.timestamp };\n                    } else {\n                        store = point;\n                    }\n                    isNewPlotBand = false;\n                } else if (store || !isNewPlotBand) {\n                    const toValue = (store && store.timestamp) || point.timestamp;\n                    memo[index] = Object.assign({}, memo[index], { to: toValue });\n                    store = null;\n                    isNewPlotBand = true;\n                }\n                return memo;\n            }, []);\n        }\n        const series = [\n            {\n                id: CPU_SERIES_ID,\n                name: 'CPU Usage',\n                data: cpuAverages,\n                zIndex: 1,\n                thresholdValue: cpuThresholdPercent,\n            },\n        ];\n\n        if (!isAllFlashPool) {\n            const cacheAverages = buildMedianSeries(cpuCacheTimeseries, 'timestamp', 'cacheUsagePercent');\n            series.push({\n                id: CACHE_SERIES_ID,\n                name: 'Cache Miss Rate',\n                data: cacheAverages,\n                thresholdValue: cacheThresholdPercent,\n                zIndex: 1,\n            });\n        }\n        return applyMixins(\n            dragZoomMixin(onChartSelect),\n            {\n                series,\n\n                xAxis: {\n                    plotBands,\n                    type: 'datetime',\n                    ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n                },\n\n                yAxis: {\n                    title: false,\n                    min: 0,\n                    max: 100,\n                    minPadding: 0,\n                    maxPadding: 0,\n                    labels: {\n                        enabled: true,\n                    },\n                    lineWidth: 1,\n                },\n            }\n        );\n    }\n);\n\nconst buildLegendItems = ({ chart: { series }, pointValues }) => series.map(highchartSeries => ({\n    id: highchartSeries.options.id,\n    label: highchartSeries.options.name,\n    icon: true,\n    color: !highchartSeries.color ? 'transparent' : highchartSeries.color,\n    value: pointValues && pointValues[highchartSeries.options.id] &&\n        headlineValueFormatter(pointValues[highchartSeries.options.id].value, FORMAT_NUMBER_EXTRA_PRECISION, '%'),\n}));\n\nclass PoolPerformanceChart extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.state = { showPoolPeformanceDetail: true };\n    }\n\n    togglePoolPerformanceDetailVisibility() {\n        this.setState(({ showPoolPeformanceDetail }) => ({ showPoolPeformanceDetail: !showPoolPeformanceDetail }));\n    }\n\n    render() {\n        const { loading, loaded } = this.props;\n        let chartConfig = null;\n        let defaultPointValues = null;\n        // Compute only after the data is loaded\n        if (loaded) {\n            chartConfig = config(this.props);\n            defaultPointValues = computeDefaultPointValues(this.props);\n        }\n\n        return (\n            <Card\n                title={\n                    <div className=\"flex-container align-justify\">\n                        <h2 className=\"no-margin\">Pool Performance</h2>\n                        {SHOW_POOL_PERFORMANCE_SNAPSHOT_VIEW &&\n                        <button className={cx('show-more-button')} onClick={this.togglePoolPerformanceDetailVisibility}>\n                            <IconAdaptor type=\"font-awesome\" size=\"small\">\n                                <i className={`fa ${this.state.showPoolPeformanceDetail ? 'fa-angle-down' : 'fa-angle-up'}`} />\n                            </IconAdaptor>\n                        </button>\n                        }\n                    </div>\n                }\n            >\n                <Async loading={loading}>\n                    <NoData hasData={loaded} message=\"CPU Usage & Cache Miss Rate data is not available\">\n                        {() => {\n                            const { cpuCacheTimeseries, cpuThresholdPercent, cacheThresholdPercent } = this.props;\n                            const { showPoolPeformanceDetail } = this.state;\n                            if (!showPoolPeformanceDetail) {\n                                return (\n                                    <div className=\"row expanded chart-container--xxsmall\">\n                                        <div className=\"column large-19\">\n                                            <PoolPerformanceSnapshotView\n                                                cpuCacheTimeseries={cpuCacheTimeseries}\n                                                cpuThresholdPercent={cpuThresholdPercent}\n                                                cacheThresholdPercent={cacheThresholdPercent}\n                                            />\n                                        </div>\n                                    </div>\n                                );\n                            }\n\n                            return (\n                                <SynchronizedChart>\n                                    <MultiObjectChart\n                                        className=\"chart-container--xsmall\"\n                                        config={chartConfig}\n                                        defaultPointValues={defaultPointValues}\n                                        buildLegendItems={buildLegendItems}\n                                        useHighchartsCrosshair\n                                    />\n                                </SynchronizedChart>\n                            );\n                        }}\n                    </NoData>\n                </Async>\n            </Card>\n        );\n    }\n}\n\nPoolPerformanceChart.propTypes = {\n    cpuCacheTimeseries: PropTypes.arrayOf(PropTypes.shape({\n        timestamp: PropTypes.number,\n        cpuUsagePercent: PropTypes.number,\n        cacheUsagePercent: PropTypes.number,\n    })),\n    cpuThresholdPercent: PropTypes.number,\n    cacheThresholdPercent: PropTypes.number,\n    isAllFlashPool: PropTypes.oneOf([1, 0]), // eslint-disable-line react/no-unused-prop-types\n    loading: PropTypes.bool.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    onChartSelect: PropTypes.func, // eslint-disable-line react/no-unused-prop-types\n};\n\nPoolPerformanceChart.defaultProps = {\n    containerWidth: 0,\n    containerHeight: 0,\n    loading: false,\n    loaded: false,\n    onChartSelect: event => event.preventDefault(),\n};\n\nexport default PoolPerformanceChart;\n","import React, { Component } from 'react';\nimport autobind from 'react-autobind';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n    QueryTimeRangeSelector,\n    TimeRangeSelection,\n    deserialize,\n    makeChartSelector,\n    makeRangeSelector,\n} from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { guessMaxSampleCount } from '../../../../../charts/CorrelationHeatmapTimeSeries';\nimport { determineGranularityFromSampleCount } from '../../../../../../util/genericQuery';\nimport { SynchronizedChartMediator, SynchronizedChart } from '../../../../../charts/SyncChart';\nimport { throughputTimeseriesSelector, latencyTimeseriesSelector, poolCpuCacheTimeseriesSelector } from '../../reducer';\nimport { getTopVolumesThroughputTimeSeries, getTopVolumesLatencyTimeSeries, getPoolCpuCacheUsageSeries, reset } from '../../actionCreators';\nimport { timeParam, perspectiveParam } from './queryParams';\nimport { buildPerspectives, buildPerspectiveKey } from './buildPerspectives';\nimport VolumePerformance from './VolumePerformance';\nimport PoolPerformanceChart from './PoolPerformanceChart';\n\nconst PERSPECTIVES = buildPerspectives();\n\nclass PerformanceContainer extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.maxSamples = guessMaxSampleCount();\n    }\n\n    componentDidMount() {\n        this.fetchCpuCacheUsageSeries();\n        this.fetchThroughputTimeSeries();\n        this.fetchLatencyTimeSeries();\n    }\n\n    componentDidUpdate({ timeRange, throughputPerspective, latencyPerspective }) {\n        if (!this.props.timeRange.equals(timeRange)) {\n            this.fetchThroughputTimeSeries();\n            this.fetchLatencyTimeSeries();\n            this.fetchCpuCacheUsageSeries();\n            return;\n        }\n\n        if (this.props.throughputPerspective !== throughputPerspective) {\n            this.fetchThroughputTimeSeries();\n        }\n\n        if (this.props.latencyPerspective !== latencyPerspective) {\n            this.fetchLatencyTimeSeries();\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetPerformanceStore();\n    }\n\n    getRequestGranularity() {\n        const { from, to } = this.props.timeRange.asFixedRange();\n        return determineGranularityFromSampleCount(from, to, this.maxSamples);\n    }\n\n    getUnionedTimeRange(...responses) {\n        let start = Infinity;\n        let end = -Infinity;\n\n        // Deep object checks because this can take any GQ response var and check if there is a value then get the value\n        // That way the consumers don't have to replicate the checks.\n        responses.forEach((response) => {\n            if (response && response.meta && response.meta.time) {\n                start = Math.min(start, response.meta.time.dataStart || start);\n                end = Math.max(end, response.meta.time.dataEnd || end);\n            }\n        });\n\n        return start < Infinity ? TimeRangeSelection.toTimeRangeSelection({ start, end }) : this.props.timeRange;\n    }\n\n    buildFetchOptions(perspective, addGranularity) {\n        const { scope, config, timeRange } = this.props;\n        const granularity = addGranularity && this.getRequestGranularity();\n\n        return {\n            scope: config.convertToGenericQueryScope(scope),\n            timeRange: {\n                time: {\n                    ...timeRange.toGenericQueryTime().time,\n                    granularity: granularity ? granularity.toJSON() : undefined,\n                    gapFill: true,\n                },\n            },\n            rankBy: perspective && perspective.field,\n        };\n    }\n\n    fetchCpuCacheUsageSeries() {\n        // TODO Ask Ramesh why the addGranularity flag was added.\n        this.props.getPoolCpuCacheUsageSeries(this.buildFetchOptions(null, true));\n    }\n\n    fetchThroughputTimeSeries() {\n        const { throughputPerspective } = this.props;\n        this.props.getTopVolumesThroughputTimeSeries(this.buildFetchOptions(throughputPerspective, true));\n    }\n\n    fetchLatencyTimeSeries() {\n        const { latencyPerspective } = this.props;\n        this.props.getTopVolumesLatencyTimeSeries(this.buildFetchOptions(latencyPerspective, true));\n    }\n\n    render() {\n        const {\n            loadingPoolCpuCacheTimeseries,\n            throughputTimeseries,\n            latencyTimeseries,\n            timeRange,\n            poolCpuCacheTimeseries,\n            history,\n            location,\n        } = this.props;\n\n        const hasPoolPerformanceData = !!(poolCpuCacheTimeseries && poolCpuCacheTimeseries.data && poolCpuCacheTimeseries.data.timeseries.length > 0);\n        const displayTimeRange = this.getUnionedTimeRange(poolCpuCacheTimeseries, throughputTimeseries, latencyTimeseries).asFixedRange();\n        const parameterPrefix = timeParam('');\n        const onSelectRange = makeRangeSelector(location, parameterPrefix, false, history);\n        const onChartSelect = makeChartSelector(onSelectRange);\n\n        return (\n            <div>\n                <QueryTimeRangeSelector\n                    presets={QueryTimeRangeSelector.PRESETS.VOLATILE}\n                    valueClassName=\"hide\"\n                    parameterPrefix={parameterPrefix}\n                    value={timeRange}\n                    displayValue={displayTimeRange}\n                    card\n                />\n                <SynchronizedChartMediator>\n                    <SynchronizedChart>\n                        <PoolPerformanceChart\n                            loading={loadingPoolCpuCacheTimeseries}\n                            loaded={hasPoolPerformanceData}\n                            isAllFlashPool={hasPoolPerformanceData ? poolCpuCacheTimeseries.data.isAllFlashPool : null}\n                            cpuCacheTimeseries={hasPoolPerformanceData ? poolCpuCacheTimeseries.data.timeseries : []}\n                            cpuThresholdPercent={hasPoolPerformanceData ? poolCpuCacheTimeseries.data.cpuThresholdPercent : 0}\n                            cacheThresholdPercent={hasPoolPerformanceData ? poolCpuCacheTimeseries.data.cacheThresholdPercent : 0}\n                            chartRangeStart={displayTimeRange.from}\n                            chartRangeEnd={displayTimeRange.to}\n                            onChartSelect={onChartSelect}\n                        />\n                    </SynchronizedChart>\n                    <VolumePerformance\n                        {...this.props}\n                        chartRangeStart={displayTimeRange.from}\n                        chartRangeEnd={displayTimeRange.to}\n                        onChartSelect={onChartSelect}\n                    />\n                </SynchronizedChartMediator>\n            </div>\n        );\n    }\n}\n\nPerformanceContainer.propTypes = {\n    // Injected by mapDispatchToProps\n    getTopVolumesThroughputTimeSeries: PropTypes.func,\n    getTopVolumesLatencyTimeSeries: PropTypes.func,\n    resetPerformanceStore: PropTypes.func,\n\n    // Injected by mapStateToProps\n    loadingThroughputTimeseries: PropTypes.bool,\n    loadedThroughputTimeseries: PropTypes.bool,\n    throughputTimeseries: PropTypes.shape({\n        data: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n                granularity: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n    loadingLatencyTimeseries: PropTypes.bool,\n    loadedLatencyTimeseries: PropTypes.bool,\n    latencyTimeseries: PropTypes.shape({\n        data: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n                granularity: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n    timeRange: PropTypes.oneOfType([\n        PropTypes.instanceOf(TimeRangeSelection),\n        PropTypes.string,\n    ]).isRequired,\n    throughputPerspective: PropTypes.object,\n    latencyPerspective: PropTypes.object,\n\n    loadingPoolCpuCacheTimeseries: PropTypes.bool,\n    loadedPoolCpuCacheTimeseries: PropTypes.bool,\n    getPoolCpuCacheUsageSeries: PropTypes.func.isRequired,\n    poolCpuCacheTimeseries: PropTypes.shape({\n        data: PropTypes.shape({\n            isAllFlashPool: PropTypes.string,\n            cpuThresholdPercent: PropTypes.number,\n            cacheThresholdPercent: PropTypes.number,\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                cpu50thPercentile: PropTypes.number,\n                cache50thPercentile: PropTypes.number,\n                timestamp: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n};\n\nconst mapUrlToProps = ({ match: { params } }) => {\n    const perspectiveKey = buildPerspectiveKey({\n        unit: params[perspectiveParam('unit')] || 'iops',\n        io: params[perspectiveParam('io')] || 'readWrite',\n        access: params[perspectiveParam('access')] || 'randomSequential',\n    });\n\n    const throughputPerspective = PERSPECTIVES[perspectiveKey];\n    return {\n        throughputPerspective,\n        latencyPerspective: PERSPECTIVES[throughputPerspective.latencyPerspectiveKey],\n        timeRange: deserialize(params, timeParam('')) || QueryTimeRangeSelector.DEFAULTS.VOLATILE,\n    };\n};\n\nconst mapStateToProps = (state, props) => ({\n    ...throughputTimeseriesSelector(state),\n    ...latencyTimeseriesSelector(state),\n    ...poolCpuCacheTimeseriesSelector(state),\n    ...mapUrlToProps(props),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getTopVolumesThroughputTimeSeries,\n    getTopVolumesLatencyTimeSeries,\n    getPoolCpuCacheUsageSeries,\n    resetPerformanceStore: reset,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PerformanceContainer);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport { findWhere } from 'underscore';\nimport {\n    ARRAY_FETCH,\n    ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\nimport { firstOrNullData } from '../../../../util/genericQuery';\n\nfunction fetchArrayDetail(scope) {\n    return new Request().pod().genericQuery('array', ['detail'])\n        .post({ scope });\n}\n\nfunction fetchHeartbeat(scope) {\n    return new Request().pod()\n        .array(scope.id)\n        .urlSegment('heartbeat')\n        .get();\n}\n\nfunction fetchAsupTime(scope) {\n    return new Request().pod()\n        .array(scope.id)\n        .urlSegment('lastAsupReceivedTimestamp')\n        .get();\n}\n\nfunction compareShelfNames(a, b) {\n    if (a.assetType === b.assetType) {\n        return (a.shelfSn > b.shelfSn);\n    }\n    return a.assetType > b.assetType;\n}\n\nexport const getArrayDetail = arraySn => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(ARRAY_FETCH, dispatch);\n    dispatchStart();\n    let scope;\n    if (arraySn) {\n        scope = { type: 'array', id: arraySn };\n    }\n\n    new Request().all([\n        fetchArrayDetail(scope),\n        fetchHeartbeat(scope),\n        fetchAsupTime(scope),\n    ])\n        .then(([arrays, heartbeats, asupTime]) => {\n            const arraysData = (arrays && arrays.data && arrays.data.data) || [];\n\n            // get head shelf\n            const arrayWithShelves = findWhere(arraysData, { assetType: 'Array' }) || {};\n\n            // get all shelves sorted by head shelf first, then shelfSn\n            arrayWithShelves.shelves = arraysData.sort(compareShelfNames);\n\n            const heartbeatsData = (heartbeats && heartbeats.data) || {};\n            const asupTimeObj = (asupTime && asupTime.data) || {};\n            return { ...arrayWithShelves, latestHeartBeat: heartbeatsData[arraySn], lastAsupReceivedTime: asupTimeObj[arraySn] };\n        })\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getArrayHardwareUpgradeRecommendations = arraySn => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH, dispatch);\n    dispatchStart();\n    let scope;\n    if (arraySn) {\n        scope = { type: 'array', id: arraySn };\n    }\n\n    new Request().pod()\n        .genericQuery('array', ['hardwareUpgradeRecommendations'])\n        .post({ scope })\n        .then(firstOrNullData)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\nimport NimbleIcon from '../../../components/NimbleIcon';\nimport { isHeartbeatDelayed } from '../../collection/components/list/ArrayHealth';\nimport { FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC } from '../../../../../util/formatter/constants';\nimport { formatDateTime, isEmpty } from '../../../../../util/formatter';\n\nconst MonitorServices = ({ latestHeartbeatTime, lastAsupReceivedTime }) => {\n    const heartBeatIconName = `Array Heartbeat ${isHeartbeatDelayed(latestHeartbeatTime) ? 'Down' : 'Up'}`;\n    const asupIconName = `Array Asup ${isEmpty(lastAsupReceivedTime) ? 'Down' : 'Up'}`;\n    return (\n        <div className=\"row\">\n            <div className=\"column\">\n                <NimbleIcon name={heartBeatIconName} height=\"35px\" width=\"42px\" />\n                <div>{latestHeartbeatTime ? moment(latestHeartbeatTime).fromNow() : 'Not Received'}</div>\n                <div>{latestHeartbeatTime && formatDateTime(latestHeartbeatTime, FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC)}</div>\n            </div>\n            <div className=\"column flex-dir-column\">\n                <NimbleIcon name={asupIconName} height=\"35px\" width=\"42px\" />\n                <div>{lastAsupReceivedTime ? moment(lastAsupReceivedTime).fromNow() : 'Not Received'}</div>\n                <div>{lastAsupReceivedTime ? formatDateTime(lastAsupReceivedTime, FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC) : '(in past 2 weeks)'}</div>\n            </div>\n        </div>\n    );\n};\n\nMonitorServices.propTypes = {\n    latestHeartbeatTime: PropTypes.number,\n    lastAsupReceivedTime: PropTypes.number,\n};\n\nexport default MonitorServices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport KeyStatistic from '@infosight/elmer/dist/components/KeyStatistic';\nimport { INFO_NOT_AVAILABLE } from '../../../../../util/formatter/constants';\nimport NimbleIcon from '../../../components/NimbleIcon';\nimport NamedNimbleIcon from '../../../components/NamedNimbleIcon';\nimport styles from './hardwareStatus.scss';\n\nconst cx = classnames.bind(styles);\n\n// Any state other than 'active' or 'standby' indicate a warning\nconst hasControllerIssue = controller => controller.state !== 'active' && controller.state !== 'standby';\n\nconst hasControllerFanIssue = controller => (controller.components).some(component => component.name === 'fan' && component.status !== 'OK');\n\nconst hasPowerSupplyIssue = latestHeartbeat => latestHeartbeat.controllers\n            && latestHeartbeat.controllers.some(controller => (controller.components).some(component => component.name === 'psu' && component.status !== 'OK'));\n\nconst hasSSDIssues = hb => hb.ssdFailedCount > 0;\n\nconst hasHDDIssues = hb => hb.hddFailedCount > 0;\n\nconst ICON_DIMENSION = '35px';\n\nconst HardwareStatus = ({ latestHeartbeat, isAllFlash }) => {\n    if (!latestHeartbeat) {\n        return <KeyStatistic>{INFO_NOT_AVAILABLE}</KeyStatistic>;\n    }\n    // TODO: Decision has not been made if we have to emphaisize controller state\n    const controllerA = latestHeartbeat.controllers.find(controller => controller.name === 'a');\n    const controllerB = latestHeartbeat.controllers.find(controller => controller.name === 'b');\n    const controllerAStatus = !hasControllerIssue(controllerA);\n    const controllerBStatus = !hasControllerIssue(controllerB);\n    const controllerAFanStatus = !hasControllerFanIssue(controllerA);\n    const controllerBFanStatus = !hasControllerFanIssue(controllerB);\n    const powerSupplyStatus = !hasPowerSupplyIssue(latestHeartbeat);\n    const ssdStatus = !hasSSDIssues(latestHeartbeat);\n    const hddStatus = !hasHDDIssues(latestHeartbeat);\n\n    return (\n        <React.Fragment>\n            <div className=\"column medium-13\">\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <div\n                            title={ssdStatus ? 'SSD Status: Good' :\n                                `${latestHeartbeat.ssdFailedCount} out of ${latestHeartbeat.ssdFailedCount + latestHeartbeat.ssdGoodCount} SSDs failed`}\n                        >\n                            <span>SSD</span>\n                            <NamedNimbleIcon\n                                iconName=\"Array SSD\"\n                                status={ssdStatus}\n                                width={ICON_DIMENSION}\n                                height={ICON_DIMENSION}\n                                aliasName={`${latestHeartbeat.ssdGoodCount} of ${latestHeartbeat.ssdFailedCount + latestHeartbeat.ssdGoodCount}`}\n                            />\n                        </div>\n                    </div>\n                    { !isAllFlash &&\n                    <div className=\"column\">\n                        <div\n                            title={hddStatus ? 'HDD Status: Good' :\n                                `${latestHeartbeat.hddFailedCount} out of ${latestHeartbeat.hddFailedCount + latestHeartbeat.hddGoodCount} HDDs failed`}\n                        >\n                            <span>HDD</span>\n                            <NamedNimbleIcon\n                                iconName=\"Array HDD\"\n                                status={hddStatus}\n                                width={ICON_DIMENSION}\n                                height={ICON_DIMENSION}\n                                aliasName={`${latestHeartbeat.hddGoodCount} of ${latestHeartbeat.hddFailedCount + latestHeartbeat.hddGoodCount}`}\n                            />\n                        </div>\n                    </div>\n                    }\n                    <div className=\"column\">\n                        <div\n                            title={`Power Supply Status : ${powerSupplyStatus ? 'Good' : 'Warning/Error'}`}\n                        >\n                            <span>PSU</span>\n                            <div>\n                                <NimbleIcon name=\"Array Power Supply\" status={powerSupplyStatus} width={ICON_DIMENSION} height={ICON_DIMENSION} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={classnames('column medium-11', cx('leftPartitionBorder'))}>\n                <div className=\"row\">\n                    <span>Controller</span>\n                </div>\n                <div className={classnames('row', cx('addTopPadding'))}>\n                    <div className=\"column shrink\">\n                        <div className={classnames(cx('controllerBox'), !controllerAStatus ? cx('badController') : '')}>\n                                A\n                        </div>\n                    </div>\n                    <div className={classnames('column', cx('capitalize'))}>\n                        {latestHeartbeat.controllers.find(controller => controller.name === 'a').state}\n                    </div>\n                    <div className=\"column\">\n                        <div\n                            title={`Controller A's Fan Status : ${controllerAFanStatus ? 'Good' : 'Warning/Error'}`}\n                        >\n                            <NimbleIcon name=\"Array Fan\" status={controllerAFanStatus} width=\"2em\" height=\"2em\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"column shrink\">\n                        <div className={classnames(cx('controllerBox'), !controllerBStatus ? cx('badController') : '')}>\n                                B\n                        </div>\n                    </div>\n                    <div className={classnames('column', cx('capitalize'))}>\n                        {latestHeartbeat.controllers.find(controller => controller.name === 'b').state}\n                    </div>\n                    <div className=\"column\">\n                        <div\n                            title={`Controller B's Fan Status : ${controllerBFanStatus ? 'Good' : 'Warning/Error'}`}\n                        >\n                            <NimbleIcon name=\"Array Fan\" status={controllerBFanStatus} width=\"2em\" height=\"2em\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nHardwareStatus.propTypes = {\n    isAllFlash: PropTypes.bool,\n    latestHeartbeat: PropTypes.shape({\n        serialNumber: PropTypes.string,\n        timestamp: PropTypes.number,\n        controllers: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.oneOf(['a', 'b']),\n            state: PropTypes.string,\n            components: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.oneOf(['psu', 'fan', 'temperature']),\n                status: PropTypes.string,\n            })),\n        })),\n        ssdGoodCount: PropTypes.number,\n        ssdFailedCount: PropTypes.number,\n        hddGoodCount: PropTypes.number,\n        hddFailedCount: PropTypes.number,\n    }),\n};\n\nexport default HardwareStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Headline from '@infosight/elmer/dist/components/Headline';\nimport DonutChart from '../../../../charts/DataUsageDonut';\nimport MonitorServices from './MonitorServices';\nimport HardwareStatus from './HardwareStatus';\nimport getNetworkCardInfo from './NetworkInfo';\n\nconst ArrayHeadline = ({\n    arrayUid,\n    model,\n    softwareVersion,\n    latestHeartBeat,\n    sendingAsups,\n    arrayCapacityBytes,\n    arrayFreeBytes,\n    lastAsupReceivedTime,\n    isAllFlash,\n    tenGigSfpPortCount,\n    tenGigBaseTPortCount,\n    gigPortCount,\n    fcPortCount,\n}) => (\n    <Headline>\n        <Headline.Section className=\"medium-4 medium-unstack\">\n            <div style={{ paddingLeft: 20, paddingRight: 20 }}>\n                <div className=\"row align-center\">\n                    <h6>Summary</h6>\n                </div>\n                <div className=\"row align-justify\">\n                    Array SN:\n                    <strong>{arrayUid}</strong>\n                </div>\n                <div className=\"row align-justify\">\n                    Model:\n                    <strong>{model}</strong>\n                </div>\n                <div className=\"row align-justify\">\n                    S/W Version:\n                    <strong>{softwareVersion && softwareVersion.split('-')[0]}</strong>\n                </div>\n                <div className=\"row align-justify\">\n                    Host Interface:\n                    <strong>\n                        <div className=\"text-right\" style={{ maxWidth: 90 }}>\n                            { getNetworkCardInfo({ tenGigSfpPortCount, tenGigBaseTPortCount, gigPortCount, fcPortCount }) }\n                        </div>\n                    </strong>\n                </div>\n            </div>\n        </Headline.Section>\n        <Headline.Section className=\"medium-6 medium-unstack\">\n            <h6>Capacity</h6>\n            <div className=\"row align-middle align-center\">\n                <DonutChart\n                    allocatedBytes={arrayCapacityBytes}\n                    usedBytes={arrayCapacityBytes - arrayFreeBytes}\n                    freeBytes={arrayFreeBytes}\n                />\n            </div>\n        </Headline.Section>\n        <Headline.Section className=\"medium-8 medium-unstack\">\n            <h6>Hardware Status</h6>\n            <div className=\"row align-center\" style={{ paddingLeft: 20, paddingRight: 20 }}>\n                <HardwareStatus\n                    latestHeartbeat={latestHeartBeat}\n                    isAllFlash={isAllFlash}\n                />\n            </div>\n        </Headline.Section>\n        <Headline.Section className=\"medium-6 medium-unstack\">\n            <h6>Monitoring Services</h6>\n            <MonitorServices\n                latestHeartbeatTime={latestHeartBeat && latestHeartBeat.timestamp}\n                sendingAsups={sendingAsups}\n                lastAsupReceivedTime={lastAsupReceivedTime}\n            />\n        </Headline.Section>\n    </Headline>\n);\n\nArrayHeadline.propTypes = {\n    arrayUid: PropTypes.string,\n    model: PropTypes.string,\n    softwareVersion: PropTypes.string,\n    sendingAsups: PropTypes.string,\n    arrayCapacityBytes: PropTypes.number,\n    arrayFreeBytes: PropTypes.number,\n    isAllFlash: PropTypes.bool,\n    latestHeartBeat: PropTypes.shape({\n        serialNumber: PropTypes.string,\n        timestamp: PropTypes.number,\n        controllers: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string,\n            state: PropTypes.string,\n            components: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.oneOf(['psu', 'fan', 'temperature']),\n                status: PropTypes.string,\n            })),\n        })),\n        ssdGoodCount: PropTypes.number,\n        ssdFailedCount: PropTypes.number,\n        hddGoodCount: PropTypes.number,\n        hddFailedCount: PropTypes.number,\n    }),\n    lastAsupReceivedTime: PropTypes.number,\n    tenGigSfpPortCount: PropTypes.number,\n    tenGigBaseTPortCount: PropTypes.number,\n    gigPortCount: PropTypes.number,\n    fcPortCount: PropTypes.number,\n};\n\nexport default ArrayHeadline;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryToggle } from '@infosight/elmer/dist/components/Toggle';\n\nconst Tabs = ({ className, tabName, getCategories }) => (\n    <QueryToggle\n        parameter=\"fieldSet\"\n        value={(tabName || getCategories()[0].value)}\n        className={className}\n    >\n        {getCategories().map(({ value: fieldSet, title }) => (\n            <button key={fieldSet} value={fieldSet}>{title}</button>\n        ))}\n    </QueryToggle>\n);\n\nTabs.propTypes = {\n    getCategories: PropTypes.func.isRequired,\n    tabName: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SimpleGridView } from '@infosight/elmer/dist/components/GridView';\nimport Pagination from '@infosight/elmer/dist/components/Pagination';\n\nconst Table = ({ className, collection, getColumns, fieldSet, rowKey, rowsPerPage, defaultSort, sorting, sortParameter }) => (\n    <SimpleGridView\n        data={collection}\n        rowKey={rowKey}\n        className={className}\n        defaultSort={defaultSort}\n        sorting={sorting}\n        sortParameter={sortParameter}\n    >\n        {getColumns(fieldSet)}\n        <Pagination itemCount={collection.length} numberPerPage={rowsPerPage} />\n    </SimpleGridView>\n);\n\nTable.propTypes = {\n    collection: PropTypes.array,\n    getColumns: PropTypes.func.isRequired,\n    fieldSet: PropTypes.string,\n    rowKey: PropTypes.string,\n    rowsPerPage: PropTypes.number.isRequired,\n    sorting: PropTypes.arrayOf(PropTypes.shape({\n        colname: PropTypes.string,\n        order: PropTypes.number,\n    })),\n    defaultSort: PropTypes.arrayOf(PropTypes.shape({\n        colname: PropTypes.string,\n        order: PropTypes.number,\n    })),\n    sortParameter: PropTypes.string,\n};\n\nTable.defaultProps = {\n    rowsPerPage: 25,\n    loading: false,\n    sortParameter: 'sort',\n};\n\nexport default Table;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport { withQueryParams } from '@infosight/elmer/dist/components/Router';\nimport { Filter, FacetTags, FacetedFilter } from '@infosight/elmer/dist/components/FacetedFilter';\nimport { CollectionConfigBuilder, CollectionConfig } from '@infosight/elmer/dist/lib/CollectionConfig';\nimport ScrollContainer from '@infosight/elmer/dist/components/ScrollContainer';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport Button from '@infosight/elmer/dist/components/Button';\nimport style from './style.scss';\nimport Tabs from './Tabs';\nimport Table from './Table';\n\nconst cx = classnames.bind(style);\n\n// TODO test\nexport class FacetedCollectionPage extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.state = { filter: new Filter() };\n    }\n\n    onChangeFilter(filter) {\n        this.setState({ filter });\n    }\n\n    render() {\n        const { filter } = this.state;\n        const {\n            match: { params: { fieldSet } },\n            loadingCollection,\n            collection,\n            config,\n            tableClassName,\n            keyField,\n            defaultSort,\n            sorting,\n            sortParameter,\n            showCategories,\n            enableFieldSet,\n            filterParameterName,\n            downloadCsv,\n            downloadingCsv,\n        } = this.props;\n\n        const { getColumns, getCategories } = config.valueOf();\n        const renderCategories = showCategories && getCategories().length !== 1;\n\n        return (\n            <ScrollContainer className={cx('container')}>\n                <ScrollContainer.Fixed>\n                    <div className=\"flex-container align-justify align-middle\">\n                        {/* we need this div regardless of whether it contains tabs\n                            in order to keep the download csv button on the right */}\n                        <div>\n                            {renderCategories && <Tabs tabName={fieldSet} getCategories={getCategories} />}\n                        </div>\n                        {downloadCsv && <Button\n                            className={cx('csv-button')}\n                            onClick={downloadCsv}\n                            label={downloadingCsv ? 'Downloading CSV...' : 'Download CSV'}\n                            disabled={downloadingCsv}\n                        />}\n                    </div>\n                    <div className=\"card card-no-margin card-no-border\">\n                        <FacetTags\n                            filter={filter}\n                            onClick={this.onChangeFilter}\n                            context=\"table\"\n                            className={cx('tags')}\n                        />\n                    </div>\n                </ScrollContainer.Fixed>\n                <ScrollContainer.Scrollable>\n                    <Async loading={loadingCollection}>\n                        {() => (\n                            <FacetedFilter filter={filter} onChange={this.onChangeFilter} parameterName={filterParameterName} >\n                                <Table\n                                    className={tableClassName}\n                                    getColumns={getColumns}\n                                    rowKey={keyField}\n                                    rowsPerPage={50}\n                                    collection={filter.filter(collection) || []}\n                                    fieldSet={renderCategories && fieldSet ? fieldSet : (enableFieldSet || getCategories()[0].value)}\n                                    filter={filter}\n                                    defaultSort={defaultSort}\n                                    sorting={sorting}\n                                    sortParameter={sortParameter}\n                                />\n                            </FacetedFilter>\n                        )}\n                    </Async>\n                </ScrollContainer.Scrollable>\n            </ScrollContainer>\n        );\n    }\n}\n\nFacetedCollectionPage.propTypes = {\n    /**\n     * Facet and GridView configuration\n     */\n    config: PropTypes.oneOfType([\n        PropTypes.instanceOf(CollectionConfig),\n        PropTypes.instanceOf(CollectionConfigBuilder),\n    ]).isRequired,\n\n    /**\n     * The default sort to be applied to this table.\n     * For `order`, valid values are -1 (descending), 1 (ascending), or 0 (no sort)\n     */\n    defaultSort: PropTypes.arrayOf(PropTypes.shape({\n        colname: PropTypes.string,\n        order: PropTypes.number,\n    })),\n\n    /**\n     * The current sort on this table (from the URL)\n     * For `order`, valid values are -1 (descending), 1 (ascending), or 0 (no sort)\n     */\n    sorting: PropTypes.arrayOf(PropTypes.shape({\n        colname: PropTypes.string,\n        order: PropTypes.number,\n    })),\n    /**\n     * Table data\n     */\n    collection: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    loadingCollection: PropTypes.bool.isRequired,\n\n    /**\n     * Parent class that contains nested cell (td) and header cell (th) styles. Required if\n     * you don't want columns equally distributed.\n     */\n    tableClassName: PropTypes.string,\n\n    /**\n     * Key (unique) field on the table\n     */\n    keyField: PropTypes.string,\n\n    /**\n     * Name of the URL parameter to use for sorting this page\n     */\n    sortParameter: PropTypes.string,\n\n\n    /**\n     * Show/Hide the categories\n     * Most likely to be used in conjunction with enableFieldSet\n     *\n     */\n    showCategories: PropTypes.bool,\n\n    /**\n     * Only the column of this field set will be rendered\n     * Use this to specify if you want to show only fields of a particular category\n     */\n    enableFieldSet: PropTypes.string,\n\n    /**\n     * @ignore\n     */\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n\n    /**\n     * Name of root query parameter\n    */\n    filterParameterName: PropTypes.string,\n\n    /**\n     * Function to download the CSV.\n     */\n    downloadCsv: PropTypes.func,\n    downloadingCsv: PropTypes.bool,\n};\n\nFacetedCollectionPage.defaultProps = {\n    collection: [],\n    sortParameter: 'sort',\n    showCategories: true,\n};\n\nexport default withQueryParams(FacetedCollectionPage);\n","/* eslint-disable import/no-named-as-default */\nimport FacetedCollectionPage from './FacetedCollectionPage';\n\nexport default FacetedCollectionPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { CollectionConfigBuilder, FieldBuilder } from '@infosight/elmer/dist/lib/CollectionConfig';\nimport { ContainsStringFacet } from '@infosight/elmer/dist/components/FacetedFilter';\nimport FacetedCollectionPage from '../../../../../layouts/FacetedCollectionPage';\nimport { formatValue } from '../../../../../util/formatter';\nimport {\n    FORMAT_BYTE_10_PRECISION,\n} from '../../../../../util/formatter/constants';\n\nimport styles from './shelves.scss';\n\nconst cx = classnames.bind(styles);\n\nexport const DEFAULT_TAB = 'summary';\n\nconst getConfig = () => new CollectionConfigBuilder()\n    .addCategory(DEFAULT_TAB, 'Summary')\n    .addField(\n        new FieldBuilder()\n            .category(DEFAULT_TAB)\n            .field('shelfSn')\n            .title('Shelf Serial #')\n            .column({\n                render: (_, { shelfSn, assetType }) => {\n                    if (assetType === 'Shelf') {\n                        return shelfSn;\n                    }\n                    return <span className={cx('head-shelf')}>{ shelfSn }</span>;\n                },\n            })\n            .facet(<ContainsStringFacet />)\n    )\n    .addField(\n        new FieldBuilder()\n            .category(DEFAULT_TAB)\n            .field('shelfModel')\n            .title('Shelf Model')\n            .column({\n                render: (_, { shelfModel, assetType }) => {\n                    if (assetType === 'Shelf') {\n                        return shelfModel;\n                    }\n                    return <span className={cx('head-shelf')}>{ shelfModel }</span>;\n                },\n            })\n            .facet(<ContainsStringFacet />)\n    );\n\n\nconst addCapacityColumn = (config) => {\n    config.addField(\n        new FieldBuilder()\n            .category(DEFAULT_TAB)\n            .field('shelfHddRawCapacityBytes')\n            .title('Capacity')\n            .column({\n                render: (_, { shelfHddRawCapacityBytes, assetType }) => {\n                    const displayValue = formatValue(shelfHddRawCapacityBytes, FORMAT_BYTE_10_PRECISION);\n                    if (assetType === 'Shelf') {\n                        return <span>{displayValue}</span>;\n                    }\n                    return <span className={cx('head-shelf')}>{displayValue}</span>;\n                },\n            })\n    );\n};\n\nconst addCacheColumn = (config, title) => {\n    config.addField(\n        new FieldBuilder()\n            .category(DEFAULT_TAB)\n            .field('shelfSsdRawCapacityBytes')\n            .title(title)\n            .column({\n                render: (_, { shelfSsdRawCapacityBytes, assetType }) => {\n                    const displayValue = formatValue(shelfSsdRawCapacityBytes, FORMAT_BYTE_10_PRECISION);\n                    if (assetType === 'Shelf') {\n                        return <span>{displayValue}</span>;\n                    }\n                    return <span className={cx('head-shelf')}>{displayValue}</span>;\n                },\n            })\n    );\n};\n\nconst ArrayShelves = ({ ...array, shelves }) => {\n    const config = getConfig();\n    if (array.isAllFlash) {\n        addCacheColumn(config, 'Capacity');\n    } else {\n        addCapacityColumn(config);\n        addCacheColumn(config, 'Cache');\n    }\n    return (\n        <FacetedCollectionPage\n            config={config.valueOf()}\n            collection={shelves || []}\n            keyField=\"shelfSn\"\n            loadingCollection={false}\n        />\n    );\n};\n\nArrayShelves.propTypes = {\n    shelves: PropTypes.arrayOf(PropTypes.shape({\n        shelfSn: PropTypes.string,\n        shelfModel: PropTypes.string,\n        shelfHddRawCapacityBytes: PropTypes.number,\n        shelfSsdRawCapacityBytes: PropTypes.number,\n    })),\n};\n\nArrayShelves.defaultProps = {\n    shelves: [],\n};\n\n\nexport default ArrayShelves;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { formatValue } from '../../../../../util/formatter';\nimport { FORMAT_BYTE_10_PRECISION } from '../../../../../util/formatter/constants';\nimport styles from './hardwareRecommendations.scss';\n\nconst cx = classnames.bind(styles);\n\nconst getCapacityRecommendation = (arrayHardwareUpgradeRecommendations) => {\n    const {\n        arrayType,\n        addAfsShelf,\n        recommendCacheUpgrade,\n        recommendDiskUpgrade,\n        currentHddExpansionShelves,\n        recommendedHddExpansionShelves,\n    } = arrayHardwareUpgradeRecommendations;\n\n    if (recommendCacheUpgrade && arrayType === 'all-flash') {\n        if (addAfsShelf) {\n            return '+1 shelf';\n        }\n        return 'Populate Bank B';\n    } else if (recommendDiskUpgrade) {\n        const additionalShelves = recommendedHddExpansionShelves - currentHddExpansionShelves;\n        return `+${additionalShelves} ${additionalShelves > 1 ? 'shelves' : 'shelf'}`;\n    }\n\n    return null;\n};\n\n// ported from legacy: clean later\nconst getUpgradeNotes = (arrayHardwareUpgradeRecommendations) => {\n    const {\n        recommendScaleOut,\n        recommendCPUUpgrade,\n        recommendCacheUpgrade,\n        recommendDiskUpgrade,\n        currentController,\n        recommendedController,\n    } = arrayHardwareUpgradeRecommendations;\n\n    const recommendedComponents = [];\n    let componentsString = '';\n\n    if (recommendDiskUpgrade) {\n        recommendedComponents.push('capacity');\n    }\n\n    if (recommendCPUUpgrade) {\n        recommendedComponents.push('cpu');\n    }\n\n    if (recommendCacheUpgrade) {\n        recommendedComponents.push('cache');\n    }\n\n    // make the recommended components string readable\n    for (let i = 0; i < recommendedComponents.length; i += 1) {\n        componentsString += recommendedComponents[i];\n\n        if (i < recommendedComponents.length - 2) {\n            componentsString += ', ';\n        }\n        if (i < recommendedComponents.length - 1) {\n            componentsString += ' and ';\n        }\n    }\n\n    // set the appropriate upgrade notes\n    if (recommendScaleOut) {\n        return `Scale-Out is recommended based on your ${componentsString} needs.`;\n    } else if (!recommendCPUUpgrade && currentController !== recommendedController) {\n        return `A controller upgrade is required to support the recommended ${componentsString} upgrades`;\n    }\n\n    return null;\n};\n\nconst HardwareRecommendations = ({ arrayHardwareUpgradeRecommendations }) => {\n    if (!arrayHardwareUpgradeRecommendations) {\n        return null;\n    }\n    const {\n        arrayType,\n        currentController,\n        currentCacheSystemTotalBytes,\n        currentCacheHeadBytes,\n        currentCacheTotalAfsBytes,\n        currentCacheExpNonAfsBytes,\n        currentHddBytes,\n        recommendCPUUpgrade,\n        recommendCacheUpgrade,\n        recommendScaleOut,\n        recommendedController,\n        recommendCacheSystemTotalBytes,\n        recommendedCacheHeadBytes,\n        recommendedCacheTotalAfsBytes,\n        recommendedCacheExpNonAfsBytes,\n    } = arrayHardwareUpgradeRecommendations;\n    const upgradeNotes = getUpgradeNotes(arrayHardwareUpgradeRecommendations);\n    return (\n        <div className=\"card card-no-border card-no-background\">\n            <div className=\"elmer-grid-view\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>\n                                {''}\n                            </th>\n                            <th>\n                                Current\n                            </th>\n                            <th>\n                                Recommended\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                Controller\n                            </td>\n                            <td>\n                                {currentController}\n                            </td>\n                            <td>\n                                <strong>\n                                    {!recommendScaleOut && recommendCPUUpgrade && recommendedController !== currentController ? recommendedController : null}\n                                </strong>\n                            </td>\n                        </tr>\n                        { arrayType !== 'all-flash' &&\n                        <React.Fragment>\n                            <tr className={cx('cacheRow')}>\n                                <td>\n                                    Cache\n                                </td>\n                                <td>\n                                    {''}\n                                </td>\n                                <td>\n                                    {''}\n                                </td>\n                            </tr>\n                            <tr className={cx('cacheValueRow')}>\n                                <td>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;Head Shelf\n                                </td>\n                                <td>\n                                    {formatValue(currentCacheHeadBytes, FORMAT_BYTE_10_PRECISION)}\n                                </td>\n                                <td>\n                                    <strong>\n                                        {!recommendScaleOut && recommendCacheUpgrade && recommendedCacheHeadBytes ?\n                                            formatValue(recommendedCacheHeadBytes, FORMAT_BYTE_10_PRECISION) : null}\n                                    </strong>\n                                </td>\n                            </tr>\n                            <tr className={cx('cacheValueRow')}>\n                                <td>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;All-Flash Shelf\n                                </td>\n                                <td>\n                                    {formatValue(currentCacheTotalAfsBytes, FORMAT_BYTE_10_PRECISION)}\n                                </td>\n                                <td>\n                                    <strong>\n                                        {!recommendScaleOut && recommendCacheUpgrade && recommendedCacheTotalAfsBytes ?\n                                            formatValue(recommendedCacheTotalAfsBytes, FORMAT_BYTE_10_PRECISION) : null}\n                                    </strong>\n                                </td>\n                            </tr>\n                            <tr className={cx('cacheValueRow')}>\n                                <td>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;HDD Shelf\n                                </td>\n                                <td>\n                                    {formatValue(currentCacheExpNonAfsBytes, FORMAT_BYTE_10_PRECISION)}\n                                </td>\n                                <td>\n                                    <strong>\n                                        {!recommendScaleOut && recommendCacheUpgrade && recommendedCacheExpNonAfsBytes ?\n                                            formatValue(recommendedCacheExpNonAfsBytes, FORMAT_BYTE_10_PRECISION) : null}\n                                    </strong>\n                                </td>\n                            </tr>\n                            <tr className={cx('cacheValueRow')}>\n                                <td>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;Total\n                                </td>\n                                <td>\n                                    {formatValue(currentCacheSystemTotalBytes, FORMAT_BYTE_10_PRECISION)}\n                                </td>\n                                <td>\n                                    <strong>\n                                        {!recommendScaleOut && recommendCacheUpgrade && recommendCacheSystemTotalBytes ?\n                                            formatValue(recommendCacheSystemTotalBytes, FORMAT_BYTE_10_PRECISION) : null}\n                                    </strong>\n                                </td>\n                            </tr>\n                        </React.Fragment>\n                        }\n                        <tr>\n                            <td>\n                                Capacity\n                            </td>\n                            <td>\n                                {arrayType !== 'all-flash' ? formatValue(currentHddBytes, FORMAT_BYTE_10_PRECISION) :\n                                    formatValue(currentCacheSystemTotalBytes, FORMAT_BYTE_10_PRECISION)}\n                            </td>\n                            <td>\n                                <strong>\n                                    {!recommendScaleOut ? getCapacityRecommendation(arrayHardwareUpgradeRecommendations) : null }\n                                </strong>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            {\n                upgradeNotes && (\n                    <div className={cx('upgradeNotesContainer')}>\n                        <i className={classnames('fa fa-exclamation-circle')} aria-hidden=\"true\" />\n                        <span className={cx('upgradeNotes')}>{upgradeNotes}</span>\n                    </div>)\n            }\n        </div>\n    );\n};\n\nHardwareRecommendations.propTypes = {\n    arrayHardwareUpgradeRecommendations: PropTypes.shape({\n        arrayType: PropTypes.string,\n        currentArrayModel: PropTypes.string,\n        currentController: PropTypes.string,\n        currentCacheSystemTotalBytes: PropTypes.number,\n        currentCacheHeadBytes: PropTypes.number,\n        currentCacheTotalAfsBytes: PropTypes.number,\n        currentCacheExpNonAfsBytes: PropTypes.number,\n        currentHddBytes: PropTypes.number,\n        currentHddExpansionShelves: PropTypes.number,\n        recommendDiskUpgrade: PropTypes.bool,\n        recommendCPUUpgrade: PropTypes.bool,\n        recommendCacheUpgrade: PropTypes.bool,\n        addAfsShelf: PropTypes.bool,\n        recommendScaleOut: PropTypes.bool,\n        recommendedArrayModel: PropTypes.string,\n        recommendedController: PropTypes.string,\n        recommendCacheSystemTotalBytes: PropTypes.number,\n        recommendedCacheHeadBytes: PropTypes.number,\n        recommendedCacheTotalAfsBytes: PropTypes.number,\n        recommendedCacheExpNonAfsBytes: PropTypes.number,\n        recommendedHddExpansionShelves: PropTypes.number,\n    }),\n};\n\nexport default HardwareRecommendations;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport Backbone from 'backbone';\nimport SoftwareUpgradesView from '../../../../../../app/views/components/asset/SoftwareUpgradesView';\nimport { awaitLegacyApp } from '../../../../../containers/NimbleLegacyContainer';\n\nclass SoftwareRecommendationsMarionetteWrapper extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    componentWillUnmount() {\n        if (this.view) {\n            this.view.destroy();\n        }\n    }\n\n    renderView(el) {\n        if (!this.view) {\n            this.view = new SoftwareUpgradesView({ model: new Backbone.Model(this.props), displayAsModal: false });\n            this.view.setElement(el).render();\n        }\n    }\n\n    render() {\n        if (!this.props.hostname) {\n            return null;\n        }\n        return (\n            <div className={classnames('software-upgrades-dialog flex-container')} ref={this.renderView} />\n        );\n    }\n}\n\nSoftwareRecommendationsMarionetteWrapper.propTypes = {\n    version: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n    serialNumber: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n    hostname: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default awaitLegacyApp(SoftwareRecommendationsMarionetteWrapper);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport classnames from 'classnames/bind';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { buildUrl } from '@infosight/elmer/dist/utils/url';\nimport {\n    getArrayDetail,\n    getArrayHardwareUpgradeRecommendations,\n    reset,\n} from '../actionCreators';\nimport {\n    arraySelector,\n    arrayHardwareUpgradeRecommendationSelector,\n} from '../reducer';\nimport ArrayHeadline from './ArrayHeadline';\nimport ArrayShelves from './ArrayShelves';\nimport ArrayHadrwareRecommendations from './HardwareRecommendations';\nimport SoftwareRecommendationsMarionetteWrapper from './SoftwareRecommendationsMarionetteWrapper';\n\nclass ArrayDetailContainer extends Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {};\n\n        const { config, scope, location } = this.props;\n        if (location.pathname.endsWith('/performance')) {\n            const relations = config.getObjectTopology(scope.type, scope.id);\n            const poolUidFromInventory = relations && relations.parent && relations.parent.id;\n            this.state = { poolUidFromInventory, preventLoad: !!poolUidFromInventory };\n        }\n    }\n\n    componentDidMount() {\n        const { scope: { id }, loadingArray, loadedArray } = this.props;\n        if (!this.state.preventLoad && !loadingArray && !loadedArray) {\n            this.props.getArrayDetail(id);\n            this.props.getArrayHardwareUpgradeRecommendations(id);\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.reset();\n    }\n\n    render() {\n        const {\n            array,\n            loadingArrayHardwareUpgradeRecommendations,\n            match,\n            scope,\n            loadingArray,\n        } = this.props;\n        const { poolUidFromInventory } = this.state;\n\n        return (\n            <Switch>\n                <Route\n                    exact\n                    path={buildUrl(match.path, 'performance')}\n                    render={() => (\n                        <Async loading={!poolUidFromInventory && !array}>\n                            <Redirect\n                                push={false}\n                                to={`/infrastructure/storage/nimble/pools/${poolUidFromInventory\n                                || (array && array.poolUid)}?tab=performance&perf.array=${scope.id}`}\n                            />\n                        </Async>\n                    )}\n                />\n                <Route\n                    render={() => (\n                        <React.Fragment>\n                            <Async loading={!array}>\n                                {() => (<ArrayHeadline {...(array || {})} />)}\n                            </Async>\n                            <div className={classnames('row expanded')}>\n                                <div className=\"medium-11 column medium-unstack\">\n                                    <Card title=\"Shelves\">\n                                        <Async loading={!array}>\n                                            {() => (<ArrayShelves {...(array || {})} />)}\n                                        </Async>\n                                    </Card>\n                                </div>\n                                <div className=\"medium-13 column medium-unstack\">\n                                    <Card title=\"Hardware Recommendations\" className=\"flex-container flex-dir-column\">\n                                        <Async loading={loadingArrayHardwareUpgradeRecommendations}>\n                                            {() => (<ArrayHadrwareRecommendations {...this.props} />)}\n                                        </Async>\n                                    </Card>\n                                    <Card title=\"Software Recommendations\">\n                                        <Async loading={loadingArray}>\n                                            <NoData hasData={array} message=\"No array data available\">\n                                                {() => (<SoftwareRecommendationsMarionetteWrapper\n                                                    version={array.softwareVersion}\n                                                    hostname={array.hostName}\n                                                    serialNumber={array.arrayUid}\n                                                />)}\n                                            </NoData>\n                                        </Async>\n                                    </Card>\n                                </div>\n                            </div>\n                        </React.Fragment>\n                    )}\n                />\n            </Switch>\n        );\n    }\n}\n\nArrayDetailContainer.propTypes = {\n    array: PropTypes.shape({\n        accountId: PropTypes.string,\n        arrayUid: PropTypes.string,\n        arrayType: PropTypes.string,\n        hostName: PropTypes.string,\n        groupName: PropTypes.string,\n        poolUid: PropTypes.string,\n        poolName: PropTypes.string,\n        arrayId: PropTypes.string,\n        model: PropTypes.string,\n        softwareVersion: PropTypes.string,\n        supportStatus: PropTypes.string,\n        sendingAsups: PropTypes.string,\n        supportEndDate: PropTypes.string,\n        supportAgrmt: PropTypes.string,\n        arrayTimezone: PropTypes.string,\n        arrayCapacityBytes: PropTypes.number,\n        arrayFreeBytes: PropTypes.number,\n        shelfCount: PropTypes.number,\n        shelfSsdRawCapacityBytes: PropTypes.number,\n        shelfHddRawCapacityBytes: PropTypes.number,\n        hddDriveCount: PropTypes.number,\n        isAllFlash: PropTypes.bool,\n        shelfSn: PropTypes.string,\n        headShelfSn: PropTypes.string,\n        shelfModel: PropTypes.string,\n        assetType: PropTypes.oneOf(['Array', 'Shelf']),\n        latestHeartBeat: PropTypes.shape({\n            serialNumber: PropTypes.string,\n            timestamp: PropTypes.number,\n            controllers: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.string,\n                state: PropTypes.string,\n                components: PropTypes.arrayOf(PropTypes.shape({\n                    name: PropTypes.oneOf(['psu', 'fan', 'temperature']),\n                    status: PropTypes.string,\n                })),\n            })),\n            ssdGoodCount: PropTypes.number,\n            ssdFailedCount: PropTypes.number,\n            hddGoodCount: PropTypes.number,\n            hddFailedCount: PropTypes.number,\n        }),\n        lastAsupReceivedTime: PropTypes.number,\n    }),\n    loadingArray: PropTypes.bool,\n    loadedArray: PropTypes.bool,\n    getArrayDetail: PropTypes.func,\n    arrayHardwareUpgradeRecommendations: PropTypes.shape({\n        arrayType: PropTypes.string,\n        currentArrayModel: PropTypes.string,\n        currentController: PropTypes.string,\n        currentCacheSystemTotalBytes: PropTypes.number,\n        currentCacheHeadBytes: PropTypes.number,\n        currentCacheTotalAfsBytes: PropTypes.number,\n        currentCacheExpNonAfsBytes: PropTypes.number,\n        currentHddBytes: PropTypes.number,\n        currentHddExpansionShelves: PropTypes.number,\n        recommendDiskUpgrade: PropTypes.bool,\n        recommendCPUUpgrade: PropTypes.bool,\n        recommendCacheUpgrade: PropTypes.bool,\n        addAfsShelf: PropTypes.bool,\n        recommendScaleOut: PropTypes.bool,\n        recommendedArrayModel: PropTypes.string,\n        recommendedController: PropTypes.string,\n        recommendCacheSystemTotalBytes: PropTypes.number,\n        recommendedCacheHeadBytes: PropTypes.number,\n        recommendedCacheTotalAfsBytes: PropTypes.number,\n        recommendedCacheExpNonAfsBytes: PropTypes.number,\n        recommendedHddExpansionShelves: PropTypes.number,\n    }),\n    getArrayHardwareUpgradeRecommendations: PropTypes.func,\n    loadingArrayHardwareUpgradeRecommendations: PropTypes.bool,\n\n    // Injected by withQueryParams\n    match: PropTypes.shape({\n        url: PropTypes.string,\n        params: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    reset: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n    ...arraySelector(state),\n    ...arrayHardwareUpgradeRecommendationSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    reset,\n    getArrayDetail,\n    getArrayHardwareUpgradeRecommendations,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArrayDetailContainer);\n","const buildParam = (type, param) => `capacity.${type}${param}`;\nexport const timeParam = param => buildParam('time.', param);\n\nconst capacityParam = param => `capacity.${param || ''}`;\nexport const capacityTimeRangeParam = param => capacityParam(`time.${param || ''}`);\n\nconst performanceParam = param => `perf.${param || ''}`;\nexport const performanceTimeRangeParam = param => performanceParam(`time.${param || ''}`);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport { groupBy } from 'underscore';\nimport {\n    POOL_FETCH,\n    OVERVIEW_FETCH,\n    CAPACITY_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\nimport { firstOrNullData, firstOrNull } from '../../../../util/genericQuery';\n\nexport const getPool = poolUid => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_FETCH, dispatch);\n    dispatchStart();\n    const options = {};\n\n    if (poolUid) {\n        options.scope = { type: 'pool', id: poolUid };\n    }\n\n    new Request().pod().genericQuery('pools')\n        .post(options)\n        .then(firstOrNullData)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\n/**\n * @param {*} timeRange - instance of TimeRangeSelection\n */\nexport const getCapacityTimeRange = (timeRange) => {\n    if (timeRange.type === 'DURATION') {\n        /*\n           By default, when the lookback is selected it fetches data only till the current date\n           but for Capacity Charts, we need to fetch additional data as well (as we have to include forecast data).\n           So orchestrate the request as normal range instead of lookback\n        */\n        const { from } = timeRange.asFixedRange();\n        timeRange = {\n            time: {\n                range: {\n                    start: from.valueOf(),\n                },\n            },\n        };\n    } else {\n        timeRange = timeRange.toGenericQueryTime();\n    }\n    return timeRange;\n};\n\nconst getPoolCapacityRequest = ({ scope, timeRange }) => {\n    const options = {\n        scope,\n        ...getCapacityTimeRange(timeRange),\n    };\n\n    return new Request().pod().genericQuery('pool', ['capacity'])\n        .post(options);\n};\n\nexport const getPoolCapacity = ({ scope, timeRange = {} }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(CAPACITY_FETCH, dispatch);\n    dispatchStart();\n\n    getPoolCapacityRequest({ scope, timeRange })\n        .then(firstOrNull)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nconst getPoolEventsRequest = ({ scope, timeRange, eventFilters = {} }) => {\n    const finalTimeRange = (timeRange && timeRange.toGenericQueryTime()) || {};\n    const options = {\n        scope,\n        ...finalTimeRange,\n    };\n\n    options.filters = [\n        ...eventFilters,\n    ];\n\n    return new Request().pod().genericQuery('pool', ['events'])\n        .post({\n            ...options,\n        });\n};\n\nconst getPoolCpuCacheRecommendationsRequest = (poolArrayList) => { // eslint-disable-line consistent-return\n    // In ideal world, Check for arrays is never needed as a pool should have atleast one array\n    // But due to the data issues, we resort to this for now\n    if (poolArrayList && poolArrayList.length > 0) {\n        return new Request().pod().account().urlSegments('performance/recommendations')\n            .query({ array: poolArrayList })\n            .get();\n    }\n};\n\nexport const getPoolOverviewData = ({ scope, timeRange = {}, eventFilters = {}, poolArrayList }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(OVERVIEW_FETCH, dispatch);\n    dispatchStart();\n\n    Promise.all([\n        getPoolCapacityRequest({ scope, timeRange }),\n        getPoolEventsRequest({ scope, timeRange, eventFilters }),\n        getPoolCpuCacheRecommendationsRequest(poolArrayList),\n    ])\n        .then((responses) => {\n            const [poolCapacity, poolEvents, poolCpuCacheUsage] = responses;\n            return ({\n                poolCapacity: firstOrNull(poolCapacity),\n                poolEvents: groupBy(poolEvents && poolEvents.data && poolEvents.data.data, 'timestamp'),\n                poolCpuCacheUsage: poolCpuCacheUsage && poolCpuCacheUsage.data,\n            });\n        })\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport Headline from '@infosight/elmer/dist/components/Headline';\nimport KeyStatistic from '@infosight/elmer/dist/components/KeyStatistic';\nimport DonutChart from '../../../../../charts/DataUsageDonut';\nimport Savings from './Savings';\nimport { getValueAndUnit } from '../../../../../../util/numeralHelpers';\nimport { DaysUntilFull } from '../../../../volumes/common';\nimport {\n    NUMBER_ABBREVIATE_FORMAT,\n    INFO_NOT_AVAILABLE,\n    formatValue,\n    isEmpty,\n} from '../../../../../constants';\n\n// TODO: Use common constants & utility functions\nconst numeralPerSec = (value, format) => {\n    const valueAndUnit = getValueAndUnit(value, format);\n    const number = valueAndUnit[0];\n    const unit = valueAndUnit[1] || 'B';\n\n    if (!number) {\n        return INFO_NOT_AVAILABLE;\n    }\n    return (\n        <span>{number}\n            <small>{unit}/sec</small>\n        </span>);\n};\n\nconst PoolHeadline = ({\n    allocatedBytes,\n    usedBytes,\n    freeBytes,\n    unusedReserveBytes,\n    lastWeekGrowthPercent,\n    snapshotCount,\n    savingsCloneBytes,\n    savingsCompressionBytes,\n    savingsDedupBytes,\n    totalSavingsBytes,\n    cloneSavingsFactor,\n    compressionSavingsFactor,\n    dedupSavingsFactor,\n    totalSavingsFactor,\n    avgIopsPerWeek,\n    avgReadLatencyMs,\n    avgWriteLatencyMs,\n    avgThroughput,\n    daysUntilFull,\n}) =>\n    (\n        <Headline className=\"card-right-padding card-left-padding\">\n            <Headline.Section className=\"medium-11 medium-unstack\">\n                <h6>Capacity</h6>\n                <div className=\"row align-middle\">\n                    <div className={daysUntilFull !== null ? 'columns medium-12 medium-unstack' : 'columns medium-13 medium-unstack'}>\n                        <DonutChart\n                            allocatedBytes={allocatedBytes}\n                            usedBytes={usedBytes}\n                            freeBytes={freeBytes}\n                            unusedReserveBytes={unusedReserveBytes}\n                            growthPercent={lastWeekGrowthPercent}\n                            warningThreshold={90}\n                        />\n                    </div>\n                    <div className={daysUntilFull !== null ? 'columns medium-7 medium-unstack' : 'columns medium-11 medium-unstack'}>\n                        <Savings\n                            totalSavings={totalSavingsBytes}\n                            cloneSavingsFactor={cloneSavingsFactor}\n                            compressionSavingsFactor={compressionSavingsFactor}\n                            dedupSavingsFactor={dedupSavingsFactor}\n                            totalSavingsFactor={totalSavingsFactor}\n                            cloneSavings={savingsCloneBytes}\n                            compressionSavings={savingsCompressionBytes}\n                            dedupSavings={savingsDedupBytes}\n                            usedBytes={usedBytes}\n                        />\n                        <h6>Total Savings</h6>\n                    </div>\n                    {daysUntilFull !== null &&\n                        <div className=\"columns medium-5 medium-unstack\">\n                            <KeyStatistic>\n                                <DaysUntilFull className=\"font-weight-inherit\" days={daysUntilFull} />\n                            </KeyStatistic>\n                            <h6>Until Full</h6>\n                        </div>\n                    }\n                </div>\n            </Headline.Section>\n            <Headline.Section className=\"medium-11 medium-unstack\">\n                <h6 className=\"stacked-title\">Performance<br />\n                    <small>(Past Week Avg)</small>\n                </h6>\n                <div className=\"row align-middle flex-child-grow\">\n                    <div className=\"columns\">\n                        <KeyStatistic className=\"nowrap\">\n                            {formatValue(avgIopsPerWeek, NUMBER_ABBREVIATE_FORMAT)} {!isEmpty(avgIopsPerWeek) ? <small>IO/sec</small> : null}\n                        </KeyStatistic>\n                        <h6>IOPS</h6>\n                    </div>\n                    <div className=\"columns\">\n                        <KeyStatistic>\n                            {numeralPerSec(avgThroughput, '0.0 ib')}\n                        </KeyStatistic>\n                        <h6>Throughput</h6>\n                    </div>\n                    <div className=\"columns\">\n                        <KeyStatistic>\n                            {formatValue(avgReadLatencyMs, '0.0')} {!isEmpty(avgReadLatencyMs) ? <small>ms</small> : null}\n                        </KeyStatistic>\n                        <h6>R Latency</h6>\n                    </div>\n                    <div className=\"columns\">\n                        <KeyStatistic>\n                            {formatValue(avgWriteLatencyMs, '0.0')} {!isEmpty(avgWriteLatencyMs) ? <small>ms</small> : null}\n                        </KeyStatistic>\n                        <h6>W Latency</h6>\n                    </div>\n                </div>\n            </Headline.Section>\n            <Headline.Section className=\"medium-2 medium-unstack\">\n                <h6 style={{ marginBottom: '20px' }}>Snapshots</h6>\n                <KeyStatistic className=\"nowrap align-middle\">\n                    {numeral(snapshotCount).format('0,0')}\n                </KeyStatistic>\n            </Headline.Section>\n        </Headline>\n    );\n\nPoolHeadline.propTypes = {\n    allocatedBytes: PropTypes.number,\n    usedBytes: PropTypes.number,\n    unusedReserveBytes: PropTypes.number,\n    freeBytes: PropTypes.number,\n    lastWeekGrowthPercent: PropTypes.number,\n    snapshotCount: PropTypes.number,\n    savingsCompressionBytes: PropTypes.number,\n    savingsCloneBytes: PropTypes.number,\n    savingsDedupBytes: PropTypes.number,\n    totalSavingsBytes: PropTypes.number,\n    cloneSavingsFactor: PropTypes.number,\n    compressionSavingsFactor: PropTypes.number,\n    dedupSavingsFactor: PropTypes.number,\n    totalSavingsFactor: PropTypes.number,\n    avgIopsPerWeek: PropTypes.number,\n    avgReadLatencyMs: PropTypes.number,\n    avgWriteLatencyMs: PropTypes.number,\n    avgThroughput: PropTypes.number,\n    daysUntilFull: PropTypes.string,\n};\n\nexport default PoolHeadline;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport { getPool } from '../../actionCreators';\nimport { poolSelector } from '../../reducer';\nimport PoolHeadline from './PoolHeadline';\n\nclass PoolHeadlineContainer extends PureComponent {\n    componentWillMount() {\n        if (!this.props.loadingPool && !this.props.loadedPool) {\n            this.props.getPool(this.props.poolUid);\n        }\n    }\n\n    render() {\n        const { loadingPool, pool } = this.props;\n\n        return (\n            <Async loading={loadingPool}>\n                {() => <PoolHeadline {...(pool || {})} />}\n            </Async>\n        );\n    }\n}\n\nPoolHeadlineContainer.propTypes = {\n    poolUid: PropTypes.string,\n    pool: PropTypes.shape({\n        allocatedBytes: PropTypes.number,\n        usedBytes: PropTypes.number,\n        unusedReserveBytes: PropTypes.number,\n        freeBytes: PropTypes.number,\n        lastWeekGrowthPercent: PropTypes.number,\n        snapshotCount: PropTypes.number,\n        savingsCompressionBytes: PropTypes.number,\n        savingsCloneBytes: PropTypes.number,\n        savingsDedupBytes: PropTypes.number,\n        totalSavingsBytes: PropTypes.number,\n        savingsFactor: PropTypes.number,\n        avgIopsPerWeek: PropTypes.number,\n        avgLatencyMs: PropTypes.number,\n        avgReadLatencyMs: PropTypes.number,\n        avgWriteLatencyMs: PropTypes.number,\n        avgThroughput: PropTypes.number,\n    }),\n    loadingPool: PropTypes.bool,\n    loadedPool: PropTypes.bool,\n    getPool: PropTypes.func,\n};\n\nPoolHeadlineContainer.defaultProps = {\n    loadingPool: false,\n};\n\nconst mapStateToProps = state => ({\n    ...poolSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getPool,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PoolHeadlineContainer);\n","import { isNumber, findLastIndex } from 'underscore';\nimport { CHART_COLORS } from '../../../../../../../util/chartColors';\n\nconst preventDefault = e => e.preventDefault();\n\nlet legendIndex = 0;\nconst getLegendIndex = () => {\n    legendIndex += 1;\n    return legendIndex;\n};\n\nfunction totalUsageSeries(timeSeries, isLineChart = false) {\n    return {\n        type: isLineChart ? 'line' : 'area',\n        id: 'totalusage',\n        name: 'Total Usage',\n        color: CHART_COLORS.blue,\n        fillColor: CHART_COLORS.blueLight,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.usedBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction savingsSeries(timeSeries) {\n    return {\n        type: 'area',\n        id: 'Saings',\n        name: 'Savings',\n        color: CHART_COLORS.teal,\n        fillColor: CHART_COLORS.tealLight,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.totalSavingsBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction allocatedCapacitySeries(timeSeries) {\n    // Reverse search the data array for the last actual data point ( data point just before the forecast starts)\n    const lastActualDataPoint = timeSeries[findLastIndex(timeSeries, { dataSource: 'Actual' })];\n    return {\n        type: 'line',\n        id: 'Capacity',\n        name: 'Capacity',\n        color: CHART_COLORS.redOrange,\n        lineWidth: 2,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            // Its possible that the data has only forecast data ie., there is not actual data\n            y: isNumber(val.allocatedBytes) ? val.allocatedBytes : lastActualDataPoint && lastActualDataPoint.allocatedBytes,\n        })),\n        step: true,\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nconst getPerformanceDegradationBytes = bytes => (isNumber(bytes) ? bytes * 0.9 : bytes);\n\nfunction performanceDegradationCapacitySeries(timeSeries) {\n    // Reverse search the data array for the last actaul data point ( data point just before the forecast starts)\n    const lastActualDataPoint = timeSeries[findLastIndex(timeSeries, { dataSource: 'Actual' })];\n    return {\n        type: 'line',\n        dashStyle: 'dot',\n        name: 'Performance Degradation Threshold (90%)',\n        color: CHART_COLORS.redOrange,\n        lineWidth: 2,\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            // Its possible that the data has only forecast data ie., there is not actual data\n            y: val.allocatedBytes ? getPerformanceDegradationBytes(val.allocatedBytes) :\n                lastActualDataPoint && getPerformanceDegradationBytes(lastActualDataPoint.allocatedBytes),\n        })),\n        step: true,\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction usageForecastSeries(timeSeries) {\n    return {\n        type: 'line',\n        id: 'forecastedUsage',\n        name: 'Forecasted Pool Usage',\n        color: CHART_COLORS.blue,\n        dashStyle: 'shortdash',\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            y: val.forecastedUsageBytes,\n        })),\n        legendIndex: getLegendIndex(),\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nfunction usageRangeForecastSeries(timeSeries, forecastRangeId) {\n    return {\n        type: 'arearange',\n        id: forecastRangeId,\n        name: 'Forecasted Range',\n        color: CHART_COLORS.blue,\n        linkedTo: 'forecastedUsage',\n        data: timeSeries.map(val => ({\n            x: val.timestamp,\n            low: val.forecastedLowerBoundBytes,\n            high: val.forecastedUpperBoundBytes,\n        })),\n        lineWidth: 0,\n        fillOpacity: 0.3,\n        zIndex: 0,\n        events: {\n            legendItemClick: preventDefault,\n        },\n    };\n}\n\nexport default ({ timeseries, forecastRangeId, includeSavingsSeries = true, isLineChart = false }) => ({\n    series: [\n        allocatedCapacitySeries(timeseries),\n        includeSavingsSeries && savingsSeries(timeseries),\n        totalUsageSeries(timeseries, isLineChart),\n        performanceDegradationCapacitySeries(timeseries),\n        usageRangeForecastSeries(timeseries, forecastRangeId),\n        usageForecastSeries(timeseries),\n    ],\n    plotOptions: {\n        area: {\n            animation: false,\n            stacking: 'normal',\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                states: {\n                    hover: {\n                        enabled: true,\n                    },\n                },\n            },\n        },\n        line: {\n            marker: {\n                enabled: false,\n                symbol: 'circle',\n                states: {\n                    hover: {\n                        enabled: true,\n                    },\n                },\n            },\n        },\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { property } from 'underscore';\nimport moment from 'moment-timezone';\nimport CapacityTimeSeries, { FORECAST_RANGE_SERIES } from '../../../../../../charts/CapacityTimeSeries';\nimport chartOptions from './capacityChartOptions';\n\nconst CapacityChart = ({ poolCapacity, includeSavingsSeries, isLineChart, onChartSelect }) => (\n    <CapacityTimeSeries\n        timeSeries={poolCapacity.data.timeseries}\n        chartRangeStart={moment(poolCapacity.meta.time.dataStart)}\n        chartRangeEnd={moment(poolCapacity.meta.time.dataEnd)}\n        getTotalCapacity={property('allocatedBytes')}\n        getForecastedCapacity={property('forecastedUsageBytes')}\n        chartConfig={chartOptions({\n            timeseries: poolCapacity.data.timeseries,\n            forecastRangeId: FORECAST_RANGE_SERIES,\n            includeSavingsSeries,\n            isLineChart,\n        })}\n        forecastChart\n        onChartSelect={onChartSelect}\n    />\n);\n\nCapacityChart.propTypes = {\n    poolCapacity: PropTypes.shape({\n        data: PropTypes.shape({\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                timestamp: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n                usedBytes: PropTypes.number,\n                allocatedBytes: PropTypes.number,\n                totalSavingsBytes: PropTypes.number,\n                forecastedUsageBytes: PropTypes.number,\n                forecastedLowerBoundBytes: PropTypes.number,\n                forecastedUpperBoundBytes: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n    isLineChart: PropTypes.bool,\n    includeSavingsSeries: PropTypes.bool,\n    onChartSelect: PropTypes.func,\n};\n\nexport default CapacityChart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { TimeRangeSelection, makeChartSelector, makeRangeSelector } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport CapacityChart from './CapacityChart';\nimport { getPoolCapacity } from '../../../actionCreators';\nimport { capacitySelector } from '../../../reducer';\nimport { capacityTimeRangeParam } from '../../../queryParams';\n\n\nclass CapacityChartContainer extends PureComponent {\n    componentDidMount() {\n        const {\n            loadingPoolCapacity,\n            loadedPoolCapacity,\n            poolCapacity,\n            onDataReceived,\n        } = this.props;\n\n        if (!loadingPoolCapacity && !loadedPoolCapacity) {\n            this.fetchData(this.props);\n        } else if (onDataReceived && poolCapacity && poolCapacity.meta) {\n            onDataReceived({ capacityDataMetaInfo: poolCapacity.meta.time });\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { timeRange } = nextProps;\n\n        if (!timeRange.equals(this.props.timeRange)) {\n            this.fetchData(nextProps);\n        }\n    }\n\n    componentDidUpdate({ poolCapacity: prevPoolCapacity }) {\n        const { poolCapacity, onDataReceived } = this.props;\n        if (onDataReceived && poolCapacity && poolCapacity.meta && poolCapacity !== prevPoolCapacity) {\n            onDataReceived({ capacityDataMetaInfo: poolCapacity.meta.time });\n        }\n    }\n\n    fetchData(props) {\n        const { scope, config, timeRange } = props;\n\n        const fetchOptions = {\n            scope: config.convertToGenericQueryScope(scope),\n            timeRange, // This is one off where we do not convert timeRange to generic query format in the Container, instead we do it in actionCreator\n        };\n        this.props.getPoolCapacity(fetchOptions);\n    }\n\n    render() {\n        const { poolCapacity,\n            loadingPoolCapacity,\n            loadedPoolCapacity,\n            includeSavingsSeries,\n            isLineChart,\n            chartRangeStart,\n            chartRangeEnd,\n            history,\n            location } = this.props;\n        const hasPoolCapacityData = loadedPoolCapacity && !!(poolCapacity && poolCapacity.data);\n        const onSelectRange = makeRangeSelector(location, capacityTimeRangeParam(), false, history);\n        const onChartSelect = makeChartSelector(onSelectRange);\n\n        return (\n            <Async loading={loadingPoolCapacity}>\n                <NoData hasData={hasPoolCapacityData}>\n                    {() => (\n                        <CapacityChart\n                            poolCapacity={poolCapacity}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                            includeSavingsSeries={includeSavingsSeries}\n                            onChartSelect={onChartSelect}\n                            isLineChart={isLineChart}\n                            forecastChart\n                        />\n                    )}\n                </NoData>\n            </Async>\n        );\n    }\n}\n\nCapacityChartContainer.propTypes = {\n    onDataReceived: PropTypes.func,\n    isLineChart: PropTypes.bool,\n    includeSavingsSeries: PropTypes.bool,\n    loadingPoolCapacity: PropTypes.bool,\n    loadedPoolCapacity: PropTypes.bool,\n    getPoolCapacity: PropTypes.func,\n    poolCapacity: PropTypes.shape({\n        data: PropTypes.shape({\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                timestamp: PropTypes.number,\n                usedBytes: PropTypes.number,\n                allocatedBytes: PropTypes.number,\n                totalSavingsBytes: PropTypes.number,\n                forecastedUsageBytes: PropTypes.number,\n                forecastedLowerBoundBytes: PropTypes.number,\n                forecastedUpperBoundBytes: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n    timeRange: PropTypes.instanceOf(TimeRangeSelection).isRequired,\n    scope: PropTypes.shape({ // eslint-disable-line react/no-unused-prop-types\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired, // eslint-disable-line react/no-unused-prop-types\n    /**\n     * Starting timestamp where the chart begins\n     * moment or number\n     */\n    chartRangeStart: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Last timestamp where the chart ends\n     * moment or number\n     */\n    chartRangeEnd: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object,\n};\n\nCapacityChartContainer.defaultProps = {\n    includeSavingsSeries: true,\n    isLineChart: false,\n};\n\nconst mapStateToProps = state => ({\n    ...capacitySelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getPoolCapacity,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CapacityChartContainer);\n","import CapacityChart from './CapacityChartContainer';\n\nexport default CapacityChart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport autobind from 'react-autobind';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport { QueryTimeRangeSelector, TimeRangeSelection, TIME_RANGE_DEFAULTS } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { capacityTimeRangeParam } from '../../queryParams';\nimport { getPoolCapacity } from '../../actionCreators';\nimport { capacitySelector } from '../../reducer';\nimport CapacityChart from './CapacityChart';\n\nclass PoolCapacityContainer extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = { displayTimeRange: '' };\n    }\n\n    updateDisplayTimeRange({ capacityDataMetaInfo }) {\n        this.setState({\n            displayTimeRange: TimeRangeSelection.toTimeRangeSelection({ start: capacityDataMetaInfo.dataStart, end: capacityDataMetaInfo.dataEnd }),\n        });\n    }\n\n    render() {\n        const { timeRange, scope, config } = this.props;\n        return (\n            <div>\n                <Card title=\"Usage\">\n                    <div className=\"row expanded align-right\">\n                        <QueryTimeRangeSelector\n                            parameterPrefix={capacityTimeRangeParam()}\n                            value={timeRange}\n                            presets={QueryTimeRangeSelector.PRESETS.NONVOLATILE}\n                            displayValue={this.state.displayTimeRange}\n                        />\n                    </div>\n                    <div className=\"chart-container--medium\">\n                        <CapacityChart\n                            {...this.props}\n                            timeRange={timeRange}\n                            scope={scope}\n                            config={config}\n                            onDataReceived={this.updateDisplayTimeRange}\n                        />\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n}\n\nPoolCapacityContainer.propTypes = {\n    timeRange: PropTypes.instanceOf(TimeRangeSelection).isRequired,\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n};\n\nPoolCapacityContainer.defaultProps = {\n    timeRange: TIME_RANGE_DEFAULTS.NONVOLATILE,\n};\n\nconst mapStateToProps = state => ({\n    ...capacitySelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getPoolCapacity,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PoolCapacityContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { withRouter } from 'react-router';\nimport { buildTargetLocation } from '@infosight/elmer/dist/components/Router';\nimport { QueryTimeRangeSelector, TimeRangeSelection, toTimeRangeSelection } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport Backbone from 'backbone';\nimport { performanceTimeRangeParam } from '../../queryParams';\nimport PerformanceView from '../../../../../../../app/modules/asset_details/performance/PerformanceView';\nimport RangeModel from '../../../../../../../app/modules/asset_details/performance/RangeModel';\nimport { awaitLegacyApp } from '../../../../../../containers/NimbleLegacyContainer';\n\nfunction translateGenericQueryTime(time) {\n    return time.lookback\n        ? time\n        : {\n            min: time.range.start,\n            max: time.range.end,\n        };\n}\n\nclass ArrayPerformanceContainer extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = { displayTimeRange: null };\n        this.rangeModel = new RangeModel();\n        this.updateRangeModel(this.props.timeRange);\n        this.rangeModel.on('change:actualDataRange', this.setDisplayTimeRange);\n    }\n\n    componentWillReceiveProps({ timeRange }) {\n        if (timeRange.equals(this.props.timeRange)) {\n            return;\n        }\n        this.updateRangeModel(timeRange);\n    }\n\n    onDragZoom({ min, max }) {\n        const { location, history } = this.props;\n        const rangeSelection = toTimeRangeSelection({\n            from: min,\n            to: max,\n        });\n        history.replace(buildTargetLocation({\n            location,\n            to: { search: rangeSelection.serialize(performanceTimeRangeParam()) },\n        }));\n    }\n\n    setDisplayTimeRange(model) {\n        this.setState({ displayTimeRange: QueryTimeRangeSelector.toTimeRangeSelection(model.get('actualDataRange')) });\n    }\n\n    updateRangeModel(timeRange) {\n        this.rangeModel\n            .clear({ silent: true })\n            .set(translateGenericQueryTime(timeRange.toGenericQueryTime().time));\n    }\n\n    handleRef(el) {\n        if (el) {\n            this.renderLegacyView(el);\n        } else {\n            this.view.destroy();\n        }\n    }\n\n    renderLegacyView(el) {\n        const arrayModel = new Backbone.Model({\n            serialNumber: this.props.array,\n        });\n\n        this.view = new PerformanceView({\n            el,\n            poolUid: this.props.poolUid,\n            arrayModel,\n            rangeModel: this.rangeModel,\n        });\n        this.view.on('dragZoom', this.onDragZoom, this);\n        this.view.render();\n    }\n\n    render() {\n        const { timeRange } = this.props;\n        return (\n            <div>\n                <div className=\"row expanded align-right\">\n                    <QueryTimeRangeSelector\n                        parameterPrefix={performanceTimeRangeParam()}\n                        value={timeRange}\n                        presets={QueryTimeRangeSelector.PRESETS.VOLATILE}\n                        displayValue={this.state.displayTimeRange}\n                    />\n                </div>\n                <div ref={this.handleRef} />\n            </div>\n        );\n    }\n}\n\nArrayPerformanceContainer.propTypes = {\n    poolUid: PropTypes.string.isRequired,\n    array: PropTypes.string,\n    timeRange: PropTypes.instanceOf(TimeRangeSelection).isRequired,\n\n    // Injected by withRouter\n    history: PropTypes.object,\n    location: PropTypes.object,\n};\n\nexport default awaitLegacyApp(withRouter(ArrayPerformanceContainer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames/bind';\n\nimport { withQueryParams } from '@infosight/elmer/dist/components/Router';\n\nimport Card from '@infosight/elmer/dist/components/Card';\nimport { QueryToggle } from '@infosight/elmer/dist/components/Toggle';\nimport { TimeRangeSelection, TIME_RANGE_DEFAULTS } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { OBJECTS } from '../../../../inventory/constants';\nimport ArrayPerformanceContainer from './ArrayPerformanceContainer';\n\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst arrayToggleParam = 'perf.array';\n\n/* eslint-disable jsx-a11y/label-has-for */\nconst PoolPerformanceContainer = ({\n    poolUid,\n    arrays,\n    selectedArray = '',\n    timeRange,\n}) => {\n    if (!arrays) {\n        return <NoData message=\"Invalid pool\" />;\n    }\n    return (\n        <Card>\n            <div className={cx('toggle-container', { hide: arrays.length === 1 })}>\n                <label>Array</label>\n                <QueryToggle\n                    parameter={arrayToggleParam}\n                    value={selectedArray}\n                >\n                    <button key={poolUid} value=\"\">All Arrays</button>\n                    {arrays.map(array => (\n                        <button key={array.id} value={array.id}>{array.name}</button>\n                    ))}\n                </QueryToggle>\n            </div>\n            <div>\n                {/*\n                  * Setting the key to the selectedArray SN forces the component to be recreated instead of re-rendered.\n                  * Changing ArrayPerformanceContainer to recreate the legacy Backbone view on prop change might be better, but much more complicated\n                  */}\n                <ArrayPerformanceContainer key={selectedArray} poolUid={poolUid} array={selectedArray} timeRange={timeRange} />\n            </div>\n        </Card>\n    );\n};\n\nPoolPerformanceContainer.propTypes = {\n    poolUid: PropTypes.string,\n    arrays: PropTypes.array.isRequired,\n    timeRange: PropTypes.instanceOf(TimeRangeSelection).isRequired,\n    selectedArray: PropTypes.string,\n};\n\nPoolPerformanceContainer.defaultProps = {\n    timeRange: TIME_RANGE_DEFAULTS.VOLATILE,\n};\n\nexport default withQueryParams(connect(\n    (state,\n        {\n            config,\n            poolUid,\n            match: { params },\n        }) => {\n        const topology = config.getObjectTopology(OBJECTS.POOL, poolUid);\n\n        // TODO encapsulate this madness in a DecoratedConfig method\n        const arrays = topology && topology.children[OBJECTS.ARRAY] && topology.children[OBJECTS.ARRAY]\n            .map(arrayId => config.findObject(OBJECTS.ARRAY, arrayId));\n\n        return ({\n            poolUid,\n            arrays,\n            selectedArray: params[arrayToggleParam],\n        });\n    }\n)(PoolPerformanceContainer));\n","import moment from 'moment-timezone';\nimport { first, last } from 'underscore';\n\n/**\n * This helps to remove time from the timestamp and therefore help in synchronizing charts\n * on the overview page, as all the charts will have the same timestamp for a given day\n */\nexport const truncateTime = timestamp => moment.utc(timestamp).startOf('day');\nexport const getMilliSecs = timestamp => truncateTime(timestamp).valueOf();\n\n/**\n * Finds the minimum start data and maximum end date out of all the data given\n * @param {poolEvents, poolCpuCacheUsage, poolCapacityData}\n */\nexport const computeUnionedTimeRange = ({ poolEvents, poolCpuCacheUsage, poolCapacity }) => {\n    const startTimeStamps = [];\n    const endTimeStamps = [];\n\n    if (poolEvents && poolEvents.length > 0) {\n        startTimeStamps.push(truncateTime(first(poolEvents).timestamp));\n        endTimeStamps.push(truncateTime(last(poolEvents).timestamp));\n    }\n\n    if (poolCpuCacheUsage && poolCpuCacheUsage.length > 0) {\n        startTimeStamps.push(truncateTime(first(poolCpuCacheUsage[0].cpu).ts));\n        endTimeStamps.push(truncateTime(last(poolCpuCacheUsage[0].cpu).ts));\n    }\n\n    if (poolCapacity && poolCapacity.meta) {\n        startTimeStamps.push(truncateTime(poolCapacity.meta.time.dataStart));\n        endTimeStamps.push(truncateTime(poolCapacity.meta.time.dataEnd));\n    }\n\n    return {\n        start: moment.min(...startTimeStamps),\n        end: moment.max(...endTimeStamps),\n    };\n};\n\n/**\n * Find the point in all the series in the given chart which have exactly same given x-axis value\n * @param {moment} Highchart's point objects x value which is {moment} in all the Pool overview charts\n * @param {Object} Highchart object\n */\nexport const defaultGetCorrespondingPoints = ({ x }, chart) => {\n    const hoverPoints = [];\n    if (!chart || !chart.series || !chart.series.length) {\n        return hoverPoints;\n    }\n\n    // Find points in all series in the chart that align on the same timestamp\n    chart.series.forEach((series) => {\n        // Do we have a point at the same xvalue as the other charts?\n        const point = series.points.find(pt => pt.x.isSame(x));\n        if (point) {\n            hoverPoints.push(point);\n        }\n    });\n\n    return hoverPoints;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport ReactDimensions from 'react-dimensions';\nimport { isNumber, findLastIndex, uniqueId, property } from 'underscore';\nimport numeral from 'numeral';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { DAY_MOMENT_FORMAT } from '@infosight/elmer/dist/utils/time';\nimport { getUnitPrefix, convertBytes, BINARY_BASE } from '@infosight/elmer/dist/utils/bytes';\nimport { moveCrosshair } from '../../../../../../modules/charts/util/synchronization';\nimport { xAxisDataRange } from '../../../../../charts/mixins/xAxis';\nimport { dateTimeAxisSnippet } from '../../../../../charts/mixins/dateTimeAxis';\nimport { defaultGetCorrespondingPoints, truncateTime } from './util';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\nimport { FORMAT_BYTE_PRECISION, FORMAT_NUMBER_PRECISION } from '../../../../../../util/formatter/constants';\n\nconst FORECAST_RANGE_SERIES = 'forecastRangeSeries';\n\nconst getPerformanceDegradationBytes = bytes => (isNumber(bytes) ? bytes * 0.9 : bytes);\n\nconst ForecastChart = mergeSharedTooltip({\n    valueFormatter(point) {\n        if (point.series.options.id === FORECAST_RANGE_SERIES) {\n            return `${numeral(point.point.low).format(FORMAT_BYTE_PRECISION)} - ${numeral(point.point.high).format(FORMAT_BYTE_PRECISION)}`;\n        }\n        return numeral(point.y).format(FORMAT_BYTE_PRECISION);\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, DAY_MOMENT_FORMAT);\n    },\n});\n\nclass OverviewCapacityChart extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.containerElementId = uniqueId(this.constructor.name);\n    }\n\n    componentDidMount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.monitorChart(this, { syncPoints: this.syncPoints, resetPoints: this.resetPoints });\n        }\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.removeEventListener('mouseleave', this.onMouseOut);\n    }\n\n    onAfterChartRendered(chart) {\n        this.chart = chart;\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.addEventListener('mouseleave', this.onMouseOut);\n    }\n\n    onMouseOut(event) {\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints({ event });\n        } else {\n            this.resetPoints();\n        }\n    }\n\n    onMouseOverPoint(opts) {\n        if (!opts.point) {\n            return;\n        }\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints(opts);\n        } else {\n            this.syncPoints(opts.point);\n        }\n    }\n\n    getYAxis() {\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        const maxTotalCapacity = this.getMaxTotalCapacity(timeSeries);\n        const storageUnit = getUnitPrefix(maxTotalCapacity, BINARY_BASE);\n        const displayUnit = storageUnit ? `${storageUnit}iB` : '';\n        return {\n            title: {\n                enabled: false,\n            },\n            labels: {\n                formatter() {\n                    return `${numeral(convertBytes(this.value, storageUnit)).format(FORMAT_NUMBER_PRECISION)} ${displayUnit}`;\n                },\n            },\n        };\n    }\n\n    getChartConfig() {\n        const { chartRangeStart, chartRangeEnd } = this.props;\n\n        const series = [this.allocatedCapacitySeries(),\n            this.totalUsageSeries(),\n            this.performanceDegradationCapacitySeries(),\n            this.usageRangeForecastSeries(),\n            this.usageForecastSeries(),\n        ];\n\n        return ({\n            chart: {\n                height: this.props.containerHeight,\n                spacingTop: 20,\n                zoomType: null,\n            },\n            title: false,\n            xAxis: {\n                ...dateTimeAxisSnippet(),\n                ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n            },\n            yAxis: this.getYAxis(),\n            series,\n            plotOptions: {\n                line: {\n                    marker: {\n                        enabled: false,\n                        symbol: 'circle',\n                        states: {\n                            hover: {\n                                enabled: true,\n                            },\n                        },\n                    },\n                },\n                series: {\n                    connectNulls: true,\n                },\n            },\n        });\n    }\n\n    getMaxTotalCapacity(timeSeries) {\n        const { getTotalCapacity } = this.props;\n        const sizes = timeSeries.map(getTotalCapacity);\n        return Math.max.apply(null, sizes);\n    }\n\n    usageForecastSeries() {\n        const thisComponent = this;\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        return {\n            type: 'line',\n            id: 'forecastedUsage',\n            name: 'Forecasted Pool Usage',\n            color: CHART_COLORS.blue,\n            dashStyle: 'shortdash',\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.timestamp),\n                y: val.forecastedUsageBytes,\n            })),\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    usageRangeForecastSeries() {\n        const thisComponent = this;\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        return {\n            type: 'arearange',\n            id: FORECAST_RANGE_SERIES,\n            name: 'Forecasted Range',\n            color: CHART_COLORS.blue,\n            linkedTo: 'forecastedUsage',\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.timestamp),\n                low: val.forecastedLowerBoundBytes,\n                high: val.forecastedUpperBoundBytes,\n            })),\n            lineWidth: 0,\n            fillOpacity: 0.3,\n            zIndex: 0,\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    allocatedCapacitySeries() {\n        const thisComponent = this;\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        // Reverse search the data array for the last actual data point ( data point just before the forecast starts)\n        const lastActualDataPoint = timeSeries[findLastIndex(timeSeries, { dataSource: 'Actual' })];\n        return {\n            type: 'line',\n            id: 'Capacity',\n            name: 'Capacity',\n            color: CHART_COLORS.redOrange,\n            lineWidth: 2,\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.timestamp),\n                // Its possible that the data has only forecast data ie., there is not actual data\n                y: isNumber(val.allocatedBytes) ? val.allocatedBytes : lastActualDataPoint && lastActualDataPoint.allocatedBytes,\n            })),\n            step: true,\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    totalUsageSeries() {\n        const thisComponent = this;\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        return {\n            type: 'line',\n            id: 'totalusage',\n            name: 'Total Usage',\n            color: CHART_COLORS.blue,\n            fillColor: CHART_COLORS.blueLight,\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.timestamp),\n                y: val.usedBytes,\n            })),\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    performanceDegradationCapacitySeries() {\n        const thisComponent = this;\n        const { poolCapacity } = this.props;\n        const timeSeries = poolCapacity.data.timeseries;\n        // Reverse search the data array for the last actaul data point ( data point just before the forecast starts)\n        const lastActualDataPoint = timeSeries[findLastIndex(timeSeries, { dataSource: 'Actual' })];\n        return {\n            type: 'line',\n            dashStyle: 'dot',\n            name: 'Performance Degradation Threshold (90%)',\n            color: CHART_COLORS.redOrange,\n            lineWidth: 2,\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.timestamp),\n                // Its possible that the data has only forecast data ie., there is not actual data\n                y: val.allocatedBytes ? getPerformanceDegradationBytes(val.allocatedBytes) :\n                    lastActualDataPoint && getPerformanceDegradationBytes(lastActualDataPoint.allocatedBytes),\n            })),\n            step: true,\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    syncPoints(point) {\n        const hoverPoints = this.props.getCorrespondingPoints(point, this.chart);\n        if (this.chart.legend) {\n            this.chart.legend.group.hide();\n            this.chart.legend.display = false;\n        }\n        moveCrosshair(hoverPoints, this.chart);\n    }\n\n    resetPoints() {\n        if (this.chart) {\n            // Remove markers from any active points\n            if (this.chart.hoverPoints) {\n                this.chart.hoverPoints.forEach(point => point.setState());\n            }\n\n            if (this.chart.xAxis) {\n                this.chart.xAxis[0].hideCrosshair();\n                this.chart.tooltip.hide();\n            }\n\n            if (this.chart.legend) {\n                this.chart.legend.group.show();\n                this.chart.legend.display = true;\n            }\n        }\n    }\n\n\n    render() {\n        const { poolCapacity } = this.props;\n        const hasData = poolCapacity && poolCapacity.data\n            && poolCapacity.data.timeseries && poolCapacity.data.timeseries.length > 0;\n        return (\n            <NoData hasData={hasData} message=\"No capacity history data available.\">\n                {() => (\n                    <ForecastChart config={this.getChartConfig()} callback={this.onAfterChartRendered} domProps={{ id: this.containerElementId }} />\n                )}\n            </NoData>\n        );\n    }\n}\n\nOverviewCapacityChart.propTypes = {\n    poolCapacity: PropTypes.shape({\n        data: PropTypes.shape({\n            timeseries: PropTypes.arrayOf(PropTypes.shape({\n                timestamp: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n                usedBytes: PropTypes.number,\n                allocatedBytes: PropTypes.number,\n                totalSavingsBytes: PropTypes.number,\n                forecastedUsageBytes: PropTypes.number,\n                forecastedLowerBoundBytes: PropTypes.number,\n                forecastedUpperBoundBytes: PropTypes.number,\n            })).isRequired,\n        }).isRequired,\n        meta: PropTypes.shape({\n            time: PropTypes.shape({\n                start: PropTypes.number.isRequired,\n                end: PropTypes.number.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }),\n\n    /**\n     * Get all the values at a timestamp that should be displayed in the legend when the user hovers over a point.\n     * This function is allowed to have synchronous side effects, such as updating crosshairs.\n     * @param point {Highcharts.Point}\n     * @param chart {Highcharts.Chart}\n     * @param event {Event}\n     * @return {pointValues, hoverPoints}\n     *      {Object} pointValues Each key should be the series id. The value is {color, value}\n     *      {Array<Highcharts.Point>} hoverPoints\n     */\n    getCorrespondingPoints: PropTypes.func,\n\n    /**\n     * Wrap this element in a `<SynchronizedChart>` element to inject this prop.\n     */\n    chartSync: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n\n    getTotalCapacity: PropTypes.func,\n\n    /**\n     *\n     * @ignore\n     */\n    containerHeight: PropTypes.number.isRequired,\n\n    /**\n     * Starting timestamp where the chart begins\n     * moment or number\n     */\n    chartRangeStart: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Last timestamp where the chart ends\n     * moment or number\n     */\n    chartRangeEnd: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n};\n\nOverviewCapacityChart.defaultProps = {\n    containerHeight: 0,\n    getCorrespondingPoints: defaultGetCorrespondingPoints,\n    getTotalCapacity: property('allocatedBytes'),\n};\n\nexport default ReactDimensions({ elementResize: true })(OverviewCapacityChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport ReactDimensions from 'react-dimensions';\nimport { max, uniqueId } from 'underscore';\nimport moment from 'moment-timezone';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { DAY_MOMENT_FORMAT } from '@infosight/elmer/dist/utils/time';\nimport { formatValue, isEmpty } from '../../../../../../util/formatter';\nimport { moveCrosshair } from '../../../../../../modules/charts/util/synchronization';\nimport { FORMAT_NUMBER_NO_PRECISION } from '../../../../../../util/formatter/constants';\nimport { xAxisDataRange } from '../../../../../charts/mixins/xAxis';\nimport { dateTimeAxisSnippet } from '../../../../../charts/mixins/dateTimeAxis';\nimport { truncateTime, getMilliSecs, defaultGetCorrespondingPoints } from './util';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\n\nconst Chart = mergeSharedTooltip({\n    valueFormatter(point) {\n        return formatValue(point.y, FORMAT_NUMBER_NO_PRECISION, '%');\n    },\n\n    xValueFormatter(point) {\n        return `Week of : ${Timestamp(point.x, DAY_MOMENT_FORMAT)}`;\n    },\n});\n\nconst findMaxYaxisValue = ({ arraysRecommendations, getDataKey }) => {\n    const maxValueInData = Math.max(...arraysRecommendations.map(arrayRec =>\n        max(getDataKey(arrayRec), dataPoint => (!isEmpty(dataPoint.usage) ? dataPoint.usage : 0)).usage || 0));\n    // Adding 20 randomly just to add some padding on y-axis\n    return Math.max(maxValueInData + 20, 100);\n};\n\nclass PoolSaturationChart extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.containerElementId = uniqueId(this.constructor.name);\n    }\n\n    componentDidMount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.monitorChart(this, { syncPoints: this.syncPoints, resetPoints: this.resetPoints });\n        }\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.removeEventListener('mouseleave', this.onMouseOut);\n    }\n\n    onAfterChartRendered(chart) {\n        this.chart = chart;\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.addEventListener('mouseleave', this.onMouseOut);\n    }\n\n    onMouseOut(event) {\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints({ event });\n        } else {\n            this.resetPoints();\n        }\n    }\n\n    onMouseOverPoint(opts) {\n        if (!opts.point) {\n            return;\n        }\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints(opts);\n        } else {\n            this.syncPoints(opts.point);\n        }\n    }\n\n    getChartConfig() {\n        if (this.config) {\n            return this.config;\n        }\n\n        const { arrayRecommendations, getDataKey, spacingLeft, chartRangeStart, chartRangeEnd } = this.props;\n        const series = arrayRecommendations.map(array => this.usageSeries({\n            arraySerialNumber: array.serialNumber,\n            arrayHostName: array.hostname,\n            timeSeries: getDataKey(array),\n        }));\n        const yAxisMax = findMaxYaxisValue({ arraysRecommendations: arrayRecommendations, getDataKey });\n        const showNotAvailableDataBands = truncateTime(moment()).isBefore(chartRangeEnd);\n        this.config = {\n            chart: {\n                height: this.props.containerHeight,\n                spacingTop: 20,\n                spacingLeft,\n                zoomType: null,\n            },\n            title: false,\n            xAxis: {\n                ...dateTimeAxisSnippet(),\n                ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n                plotBands: showNotAvailableDataBands && {\n                    color: CHART_COLORS.plotBandGrey,\n                    /* Ideally the plot band should start when the pool capacity forecast starts\n                    But I chose to add it from current day for the below reasons\n                    1. In most scenarios the current day and pool capacity forecast start day will be the same\n                    2. To avoid unnecessary computing\n                    3. This is going to be temporary\n                    */\n                    from: getMilliSecs(moment()),\n                    to: getMilliSecs(chartRangeEnd),\n                    label: {\n                        text: 'Forecast Data Not Available',\n                        align: 'center',\n                        y: 50,\n                    },\n                },\n            },\n            yAxis: {\n                title: {\n                    enabled: false,\n                },\n                labels: {\n                    formatter() {\n                        return `${formatValue(this.value, FORMAT_NUMBER_NO_PRECISION, '%')}`;\n                    },\n                },\n                min: 0,\n                max: yAxisMax,\n            },\n            series,\n            plotOptions: {\n                series: {\n                    connectNulls: true,\n                    zones: [{\n                        value: 100,\n                    }, {\n                        color: CHART_COLORS.redOrange,\n                    }],\n                },\n            },\n        };\n\n        return this.config;\n    }\n\n    usageSeries({ arraySerialNumber, arrayHostName, timeSeries }) {\n        const thisComponent = this;\n\n        return {\n            name: `${!isEmpty(arrayHostName) ? `${arrayHostName} (${arraySerialNumber})` : arraySerialNumber} `,\n            data: timeSeries.map(val => ({\n                x: truncateTime(val.ts),\n                y: val.usage,\n            })),\n            events: {\n                legendItemClick: e => e.preventDefault(),\n            },\n            marker: {\n                enabled: false,\n            },\n            lineWidth: 2,\n            point: {\n                events: {\n                    mouseOver(event) {\n                        if (thisComponent.lastPointHovered !== this) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        }\n                    },\n                },\n            },\n        };\n    }\n\n    syncPoints(point) {\n        const hoverPoints = this.props.getCorrespondingPoints(point, this.chart);\n        if (this.chart.legend) {\n            this.chart.legend.group.hide();\n            this.chart.legend.display = false;\n        }\n        moveCrosshair(hoverPoints, this.chart);\n    }\n\n    resetPoints() {\n        if (this.chart) {\n            // Remove markers from any active points\n            if (this.chart.hoverPoints) {\n                this.chart.hoverPoints.forEach(point => point.setState());\n            }\n\n            if (this.chart.xAxis) {\n                this.chart.xAxis[0].hideCrosshair();\n                this.chart.tooltip.hide();\n            }\n\n            if (this.chart.legend) {\n                this.chart.legend.group.show();\n                this.chart.legend.display = true;\n            }\n        }\n    }\n\n    render() {\n        const { arrayRecommendations, getDataKey } = this.props;\n        const hasPoolCpuCacheData = arrayRecommendations && arrayRecommendations.length > 0 &&\n        getDataKey(arrayRecommendations[0]) && getDataKey(arrayRecommendations[0]).length > 0;\n        return (\n            <NoData hasData={hasPoolCpuCacheData}>\n                { () => <Chart config={this.getChartConfig()} callback={this.onAfterChartRendered} domProps={{ id: this.containerElementId }} />}\n            </NoData>);\n    }\n}\n\nPoolSaturationChart.propTypes = {\n    arrayRecommendations: PropTypes.arrayOf(PropTypes.shape({\n        serialNumber: PropTypes.string,\n        hostname: PropTypes.string,\n        model: PropTypes.string,\n        cpu: PropTypes.arrayOf(PropTypes.shape({\n            ts: PropTypes.number,\n            usage: PropTypes.number,\n        })),\n        cache: PropTypes.arrayOf(PropTypes.shape({\n            ts: PropTypes.number,\n            usage: PropTypes.number,\n        })),\n    })),\n\n    /**\n     * Key to access the data in context from the given data array\n     */\n    getDataKey: PropTypes.func,\n\n    /**\n     *\n     * @ignore\n     */\n    containerHeight: PropTypes.number.isRequired,\n\n    /**\n     * This event chart can be used in different places.\n     * And Y-Axis labels doesn't make sense on this charts.\n     * To align properly with other charts on the page we might need to add padding on the left (assuming Y-Axis is on left which usually is)\n     */\n    spacingLeft: PropTypes.number,\n\n    /**\n     * Get all the values at a timestamp that should be displayed in the legend when the user hovers over a point.\n     * This function is allowed to have synchronous side effects, such as updating crosshairs.\n     * @param point {Highcharts.Point}\n     * @param chart {Highcharts.Chart}\n     * @param event {Event}\n     * @return {pointValues, hoverPoints}\n     *      {Object} pointValues Each key should be the series id. The value is {color, value}\n     *      {Array<Highcharts.Point>} hoverPoints\n     */\n    getCorrespondingPoints: PropTypes.func,\n\n    /**\n     * Wrap this element in a `<SynchronizedChart>` element to inject this prop.\n     */\n    chartSync: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n\n    /**\n     * Starting timestamp where the chart begins\n     * moment or number\n     */\n    chartRangeStart: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Last timestamp where the chart ends\n     * moment or number\n     */\n    chartRangeEnd: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n};\n\nPoolSaturationChart.defaultProps = {\n    containerHeight: 0,\n    getCorrespondingPoints: defaultGetCorrespondingPoints,\n    showThresholdColors: false,\n};\n\nexport default ReactDimensions({ elementResize: true })(PoolSaturationChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport ReactDOM from 'react-dom';\nimport style from './flagStyle.scss';\nimport { formatDateTime } from '../../../../../../util/formatter';\n\nconst rootElement = document.getElementById('main');\n\nconst getFlagConfig = eventCollection => eventCollection.reduce((memo, event) => {\n    const { arraySn, category, change, eventDetails, previousValue, currentValue } = event;\n    switch (category) {\n    case 'SOFTWARE':\n        return memo.concat(`${arraySn} - Software updated to: ${change && change.split('-')[0]}`);\n\n    case 'HARDWARE':\n        return memo.concat(`${arraySn} - ${eventDetails} from ${previousValue} to ${currentValue}`);\n\n    case 'CAPACITY':\n        return memo.concat(`${arraySn} - ${eventDetails} ${change}`);\n\n    default:\n        console.error(`Unexpected array event category: ${category}. Chart may not display correctly.`);\n        return memo;\n    }\n}, []);\n\nconst cx = classnames.bind(style);\n\nexport class EventFlag extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.el = document.createElement('div');\n    }\n\n    componentDidMount() {\n        rootElement.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        rootElement.removeChild(this.el);\n    }\n\n    render() {\n        const { eventCollection, point, chart, chartDomId } = this.props;\n\n        if (!eventCollection || (eventCollection && eventCollection.length <= 0)) {\n            return null;\n        }\n\n        const flagsData = getFlagConfig(eventCollection);\n        const element = document.getElementById(chartDomId);\n        const { top, left } = element.getBoundingClientRect();\n\n        const eventFlag = (\n            <div\n                style={{\n                    background: point.color,\n                    /*\n                        No. of events on day can vary, so try to set the bottom position where the flag should end\n                        as that would make the event flag to scale towards the top keeping the bottom end fixed.\n\n                        In order to achieve that, calculate the distance between the end of viewport and bottom of the chart.\n                        Distance between the bottom of view port and the event chart = viewport height - top/bottom of chart\n                    */\n                    bottom: (document.documentElement.clientHeight - top) - chart.plotTop,\n\n                    /**\n                     * Adding window.pageXOffset to consider horizontal scrolling\n                     */\n                    left: -2 + point.plotX + chart.plotLeft + left + window.pageXOffset,\n                }}\n                className={cx('flagContainer')}\n            >\n                <ol className={cx('eventList')}>\n                    <li className={cx('eventDate')}>{formatDateTime(point.x, 'L')}</li>\n                    {flagsData.map(event => (\n                        <li key={event}>\n                            {event}\n                        </li>\n                    ))}\n                </ol>\n            </div>\n        );\n\n        // TODO: In some corner cases, the flag position might not be ideal. Use react-popper (IS-16219)\n        return ReactDOM.createPortal(eventFlag, this.el);\n    }\n}\n\nEventFlag.propTypes = {\n    chartDomId: PropTypes.string,\n    point: PropTypes.object,\n    chart: PropTypes.object,\n    eventCollection: PropTypes.arrayOf(PropTypes.shape({\n        timestamp: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n        arraySn: PropTypes.string,\n        category: PropTypes.string,\n        verbosity: PropTypes.string,\n        eventDetails: PropTypes.string,\n        change: PropTypes.string,\n        previousValue: PropTypes.string,\n        currentValue: PropTypes.string,\n    })),\n};\n\nexport default EventFlag;\n","import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport ReactDimensions from 'react-dimensions';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport numeral from 'numeral';\nimport { uniqueId } from 'underscore';\nimport { moveCrosshair } from '../../../../../../modules/charts/util/synchronization';\nimport { CHART_COLORS } from '../../../../../../util/chartColors';\nimport { xAxisDataRange } from '../../../../../charts/mixins/xAxis';\nimport { dateTimeAxisSnippet } from '../../../../../charts/mixins/dateTimeAxis';\nimport { defaultGetCorrespondingPoints, truncateTime } from './util';\nimport Flag from './EventFlag';\n\nconst getEventsData = (eventsData) => {\n    // Highcharts expects data to be sorted (sorting is not needed otherwise)\n    const eventTimeStamps = Object.keys(eventsData).sort((a, b) => a - b);\n\n    const data = eventTimeStamps.map(timestamp => ({\n        x: truncateTime(numeral(timestamp).value()),\n        y: 0,\n        eventCollection: eventsData[timestamp],\n    }));\n    return data;\n};\n\nexport class EventsChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.containerElementId = uniqueId(this.constructor.name);\n        this.eventFlagContainer = document.createElement('div');\n    }\n\n    componentDidMount() {\n        if (this.props.chartSync) {\n            this.props.chartSync.monitorChart(this, { syncPoints: this.syncPoints, resetPoints: this.resetPoints });\n        }\n    }\n\n    componentWillUnmount() {\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.removeEventListener('mouseleave', this.onMouseOut);\n        this.eventFlagContainer.remove();\n    }\n\n    onAfterChartRendered(chart) {\n        this.chart = chart;\n        const container = document.getElementById(this.containerElementId);\n        if (!container) {\n            return;\n        }\n\n        container.addEventListener('mouseleave', this.onMouseOut);\n    }\n\n    onMouseOut(event) {\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints({ event });\n        } else {\n            this.resetPoints();\n        }\n    }\n\n    onMouseOverPoint(opts) {\n        if (!opts.point) {\n            return;\n        }\n        if (this.props.chartSync) {\n            this.props.chartSync.syncPoints(opts);\n        } else {\n            this.syncPoints(opts.point);\n        }\n    }\n\n    getChartConfig() {\n        if (this.config) {\n            return this.config;\n        }\n        const { poolEvents, spacingLeft, chartRangeStart, chartRangeEnd } = this.props;\n        const thisComponent = this;\n        this.config = {\n            chart: {\n                height: this.props.containerHeight,\n                spacingLeft,\n                zoomType: null,\n            },\n            title: false,\n            xAxis: {\n                ...dateTimeAxisSnippet(),\n                ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n                crosshair: {\n                    width: 2,\n                    color: CHART_COLORS.teal,\n                },\n            },\n            yAxis: {\n                visible: false,\n                max: 1,\n                min: 0,\n            },\n            series: [{\n                id: 'eventSeries',\n                name: 'events',\n                data: getEventsData(poolEvents),\n                marker: {\n                    enabled: true,\n                    symbol: 'text:\\uf0ad',\n                    states: {\n                        hover: {\n                            enabled: false,\n                        },\n                    },\n                },\n                point: {\n                    events: {\n                        mouseOver(event) {\n                            thisComponent.lastPointHovered = this;\n                            thisComponent.onMouseOverPoint({ point: this, event });\n                        },\n                    },\n                },\n            }],\n            tooltip: {\n                crosshairs: true,\n                formatter: () => false,\n                shared: true,\n            },\n        };\n        return this.config;\n    }\n\n    syncPoints(point) {\n        const hoverPoints = this.props.getCorrespondingPoints(point, this.chart);\n\n        if (hoverPoints && hoverPoints.length > 0) {\n            moveCrosshair(hoverPoints, this.chart, point);\n            // Add event flag at the hovered point\n            ReactDOM.render(\n                <Flag\n                    eventCollection={hoverPoints[0].eventCollection}\n                    chartDomId={this.containerElementId}\n                    chart={this.chart}\n                    point={hoverPoints[0]}\n                />,\n                this.eventFlagContainer);\n        }\n    }\n\n    resetPoints() {\n        if (this.chart) {\n            // Remove markers from any active points\n            if (this.chart.hoverPoints) {\n                this.chart.hoverPoints.forEach(point => point.setState());\n            }\n\n            if (this.chart.xAxis) {\n                this.chart.xAxis[0].hideCrosshair();\n            }\n        }\n\n        ReactDOM.render(null, this.eventFlagContainer);\n    }\n\n    render() {\n        const { poolEvents } = this.props;\n        return (\n            <NoData hasData={!!poolEvents}>\n                { () => (<ReactHighcharts\n                    config={this.getChartConfig()}\n                    callback={this.onAfterChartRendered}\n                    domProps={{ id: this.containerElementId }}\n                />)\n                }\n            </NoData>\n        );\n    }\n}\n\nEventsChart.propTypes = {\n    // timestamp is the key\n    poolEvents: PropTypes.objectOf(\n        PropTypes.arrayOf(PropTypes.shape({\n            arraySn: PropTypes.string,\n            category: PropTypes.string,\n            verbosity: PropTypes.string,\n            eventDetails: PropTypes.string,\n            change: PropTypes.string,\n            previousValue: PropTypes.string,\n            currentValue: PropTypes.string,\n        }))\n    ),\n\n    containerHeight: PropTypes.number.isRequired,\n    /**\n     * This event chart can be used in different places.\n     * And Y-Axis labels doesn't make sense on this charts.\n     * To align properly with other charts on the page we might need to add padding on the left (assuming Y-Axis is on left which usually is)\n     */\n    spacingLeft: PropTypes.number,\n\n    /**\n     * Get all the values at a timestamp that should be displayed in the legend when the user hovers over a point.\n     * This function is allowed to have synchronous side effects, such as updating crosshairs.\n     * @param point {Highcharts.Point}\n     * @param chart {Highcharts.Chart}\n     * @param event {Event}\n     * @return {pointValues, hoverPoints}\n     *      {Object} pointValues Each key should be the series id. The value is {color, value}\n     *      {Array<Highcharts.Point>} hoverPoints\n     */\n    getCorrespondingPoints: PropTypes.func,\n\n    /**\n     * Wrap this element in a `<SynchronizedChart>` element to inject this prop.\n     */\n    chartSync: PropTypes.shape({\n        monitorChart: PropTypes.func.isRequired,\n        removeChart: PropTypes.func.isRequired,\n        syncPoints: PropTypes.func.isRequired,\n    }),\n\n    /**\n     * Starting timestamp where the chart begins\n     * moment or number\n     */\n    chartRangeStart: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n\n    /**\n     * Last timestamp where the chart ends\n     * moment or number\n     */\n    chartRangeEnd: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n};\n\nEventsChart.defaultProps = {\n    containerHeight: 0,\n    containerWidth: 0,\n    spacingLeft: 0,\n    getCorrespondingPoints: defaultGetCorrespondingPoints,\n};\n\nexport default ReactDimensions({ elementResize: true })(EventsChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { toTimeRangeSelection } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport ChartCard from '@infosight/elmer/dist/components/Card';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { property } from 'underscore';\nimport { getPoolOverviewData } from '../../actionCreators';\nimport { poolOverviewSelector, poolSelector } from '../../reducer';\nimport { OBJECTS } from '../../../../inventory/constants';\nimport { SynchronizedChartMediator, SynchronizedChart } from '../../../../../../modules/charts/SyncChart';\nimport { computeUnionedTimeRange } from './util';\nimport OverviewCapacityChart from './OverviewCapacityChart';\nimport PoolSaturationChart from './PoolSaturationChart';\nimport PoolEventsChart from './EventsChart';\n\nexport class OverviewContainer extends Component {\n    componentDidMount() {\n        const { loadingPoolOverview, loadedPoolOverview, scope, config } = this.props;\n\n        // Fetch the data only if its not loaded already\n        if (!loadingPoolOverview && !loadedPoolOverview) {\n            const poolArrayList = this.getPoolChildArrays();\n            const eventFilters = [\n                {\n                    field: 'category',\n                    $in: ['SOFTWARE', 'CAPACITY', 'HARDWARE'],\n                }, {\n                    field: 'verbosity',\n                    $lte: 2,\n                },\n            ];\n            const timeRange = toTimeRangeSelection({ duration: 'P1Y' });\n            this.props.getPoolOverviewData({ scope: config.convertToGenericQueryScope(scope), timeRange, eventFilters, poolArrayList });\n        }\n    }\n\n    getPoolChildArrays() {\n        const { scope, config } = this.props;\n        const poolUid = scope && scope.id;\n        let childArraySerialNumbers;\n        /*\n            Ideally we should be able to fetch this data with just the poolid.\n            But for now we are still using the legacy api as this will be soon replaced\n            and the legacy api's source table doesn't support using pool uid\n        */\n        if (poolUid) {\n            const topology = config.getObjectTopology(OBJECTS.POOL, poolUid);\n            childArraySerialNumbers = topology && topology.children[OBJECTS.ARRAY];\n        }\n        return childArraySerialNumbers;\n    }\n\n    render() {\n        const { loadingPoolOverview, poolOverview, pool, loadedPoolOverview } = this.props;\n        return (\n            <Async loading={loadingPoolOverview}>\n                <NoData hasData={loadedPoolOverview && !!poolOverview}>\n                    {() => {\n                        const { poolCpuCacheUsage, poolCapacity, poolEvents } = poolOverview;\n                        const showCacheChart = (!pool || (pool && !pool.allFlash));\n                        const { start: chartRangeStart, end: chartRangeEnd } = computeUnionedTimeRange({ poolEvents, poolCpuCacheUsage, poolCapacity });\n\n                        return (\n                            <SynchronizedChartMediator>\n                                <ChartCard\n                                    title=\"Events\"\n                                    className=\"card-section-no-top-padding card-section-no-bottom-padding card-section-no-right-padding\"\n                                    style={{ marginBottom: 2, marginTop: 4 }}\n                                >\n                                    <div style={{ height: 80 }}>\n                                        <SynchronizedChart>\n                                            <PoolEventsChart\n                                                poolEvents={poolEvents}\n                                                spacingLeft={62}\n                                                chartRangeStart={chartRangeStart}\n                                                chartRangeEnd={chartRangeEnd}\n                                            />\n                                        </SynchronizedChart>\n                                    </div>\n                                </ChartCard>\n                                <ChartCard\n                                    title=\"CPU Saturation\"\n                                    className=\"card-section-no-top-padding card-section-no-bottom-padding card-section-no-right-padding\"\n                                    style={{ marginBottom: 2, marginTop: 2 }}\n                                >\n                                    <div className=\"chart-container--small\">\n                                        <SynchronizedChart>\n                                            <PoolSaturationChart\n                                                arrayRecommendations={poolCpuCacheUsage}\n                                                spacingLeft={20}\n                                                getDataKey={property('cpu')}\n                                                chartRangeStart={chartRangeStart}\n                                                chartRangeEnd={chartRangeEnd}\n                                            />\n                                        </SynchronizedChart>\n                                    </div>\n                                </ChartCard>\n\n                                { showCacheChart &&\n                                <ChartCard\n                                    title=\"Cache Saturation\"\n                                    className=\"card-section-no-top-padding card-section-no-bottom-padding card-section-no-right-padding\"\n                                    style={{ marginBottom: 2, marginTop: 2 }}\n                                >\n                                    <div className=\"chart-container--small\">\n                                        <SynchronizedChart>\n                                            <PoolSaturationChart\n                                                arrayRecommendations={poolCpuCacheUsage}\n                                                spacingLeft={20}\n                                                getDataKey={property('cache')}\n                                                chartRangeStart={chartRangeStart}\n                                                chartRangeEnd={chartRangeEnd}\n                                            />\n                                        </SynchronizedChart>\n                                    </div>\n                                </ChartCard>\n                                }\n\n                                <ChartCard\n                                    title=\"Capacity Usage\"\n                                    className=\"card-section-no-top-padding card-section-no-bottom-padding card-section-no-right-padding\"\n                                    style={{ marginBottom: 2, marginTop: 2 }}\n                                >\n                                    <div className=\"chart-container--medium\">\n                                        <SynchronizedChart>\n                                            <OverviewCapacityChart\n                                                poolCapacity={poolCapacity}\n                                                includeSavingsSeries={false}\n                                                isLineChart\n                                                chartRangeStart={chartRangeStart}\n                                                chartRangeEnd={chartRangeEnd}\n                                            />\n                                        </SynchronizedChart>\n                                    </div>\n                                </ChartCard>\n                            </SynchronizedChartMediator>);\n                    }}\n                </NoData>\n            </Async>\n        );\n    }\n}\n\nOverviewContainer.propTypes = {\n    loadingPoolOverview: PropTypes.bool,\n    loadedPoolOverview: PropTypes.bool,\n    getPoolOverviewData: PropTypes.func.isRequired,\n    poolOverview: PropTypes.shape({\n        poolCapacity: PropTypes.shape({\n            data: PropTypes.shape({\n                timeseries: PropTypes.arrayOf(PropTypes.shape({\n                    timestamp: PropTypes.number,\n                    usedBytes: PropTypes.number,\n                    allocatedBytes: PropTypes.number,\n                    totalSavingsBytes: PropTypes.number,\n                })).isRequired,\n            }).isRequired,\n            meta: PropTypes.shape({\n                time: PropTypes.shape({\n                    start: PropTypes.number.isRequired,\n                    end: PropTypes.number.isRequired,\n                }).isRequired,\n            }).isRequired,\n        }),\n        poolEvents: PropTypes.shape({\n            timestamp: PropTypes.number,\n            eventCollection: PropTypes.arrayOf(PropTypes.shape({\n                timestamp: PropTypes.number,\n                arraySn: PropTypes.string,\n                category: PropTypes.string,\n                verbosity: PropTypes.string,\n                eventDetails: PropTypes.string,\n                change: PropTypes.string,\n                previousValue: PropTypes.string,\n                currentValue: PropTypes.string,\n            })),\n        }),\n        poolCpuCacheUsage: PropTypes.arrayOf(PropTypes.shape({\n            serialNumber: PropTypes.string,\n            hostname: PropTypes.string,\n            model: PropTypes.string,\n            cache: PropTypes.arrayOf(PropTypes.shape({\n                ts: PropTypes.number,\n                usage: PropTypes.number,\n            })),\n            cpu: PropTypes.arrayOf(PropTypes.shape({\n                ts: PropTypes.number,\n                usage: PropTypes.number,\n            })),\n        })),\n    }),\n    pool: PropTypes.shape({\n        allFlash: PropTypes.bool,\n    }),\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    ...poolOverviewSelector(state),\n    ...poolSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getPoolOverviewData,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OverviewContainer);\n","import PoolOverviewContainer from './OverviewContainer';\n\nexport default PoolOverviewContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { deserialize } from '@infosight/elmer/dist/components/TimeRangeSelector';\nimport { QueryTabs, Tab, TabList, TabPanel } from '@infosight/elmer/dist/components/Tabs';\nimport { performanceTimeRangeParam, capacityTimeRangeParam } from '../queryParams';\nimport PoolHeadlineContainer from './headline/PoolHeadlineContainer';\nimport PoolCapacityContainer from './capacity/PoolCapacityContainer';\nimport PoolPerformanceContainer from './performance/PoolPerformanceContainer';\nimport PoolOverviewContainer from './overview';\nimport { reset } from '../actionCreators';\n\nclass PoolDetailContainer extends Component {\n    componentWillUnmount() {\n        this.props.reset();\n    }\n\n    render() {\n        const { scope, scope: { id }, match, match: { params }, config } = this.props;\n        const performanceTimeRange = deserialize(params, performanceTimeRangeParam(''));\n        const capacityTimeRange = deserialize(params, capacityTimeRangeParam(''));\n\n        return (\n            <div>\n                <PoolHeadlineContainer poolUid={id} match={match} />\n                <QueryTabs values={['overview', 'performance', 'capacity']}>\n                    <TabList>\n                        <Tab>Overview</Tab>\n                        <Tab>Performance</Tab>\n                        <Tab>Capacity</Tab>\n                    </TabList>\n                    <TabPanel>\n                        <PoolOverviewContainer timeRange={performanceTimeRange} config={config} scope={scope} />\n                    </TabPanel>\n                    <TabPanel>\n                        <PoolPerformanceContainer timeRange={performanceTimeRange} config={config} poolUid={id} />\n                    </TabPanel>\n                    <TabPanel>\n                        <PoolCapacityContainer {...this.props} timeRange={capacityTimeRange} config={config} scope={scope} />\n                    </TabPanel>\n                </QueryTabs>\n            </div>\n        );\n    }\n}\n\nPoolDetailContainer.propTypes = {\n    // Injected by withQueryParams\n    match: PropTypes.shape({\n        url: PropTypes.string,\n        params: PropTypes.shape({\n            // Time Range\n            [performanceTimeRangeParam('duration')]: PropTypes.string,\n            [performanceTimeRangeParam('from')]: PropTypes.string,\n            [performanceTimeRangeParam('to')]: PropTypes.string,\n            [capacityTimeRangeParam('duration')]: PropTypes.string,\n            [capacityTimeRangeParam('from')]: PropTypes.string,\n            [capacityTimeRangeParam('to')]: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object,\n    reset: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    reset,\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(PoolDetailContainer);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport {\n    GROUPS_LIST_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\n\n/**\n * Get the list of  All Groups for the selected account\n */\nexport const getGroups = () => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(GROUPS_LIST_FETCH, dispatch);\n    dispatchStart();\n\n    const options = {};\n\n    new Request().pod().genericQuery('groups')\n        .post(options)\n        .then(x => x.data.data)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n\n","import React from 'react';\nimport numeral from 'numeral';\nimport {\n    ContainsStringFacet,\n} from '@infosight/elmer/dist/components/FacetedFilter';\nimport { ProgressWithValue, Progress } from '@infosight/elmer/dist/components/Progress';\nimport { FieldBuilder, CollectionConfigBuilder } from '@infosight/elmer/dist/lib/CollectionConfig';\nimport { MultiFieldColumnHeader } from '@infosight/elmer/dist/components/GridView';\n\nconst SUMMARY_TAB = 'summary';\nconst SPACE_TAB = 'space';\nconst PERFORMANCE_TAB = 'performance';\nconst PROTECTION_TAB = 'protection';\n\nexport default function getConfig() {\n    return new CollectionConfigBuilder()\n        .setDefaultFacetCategory(SUMMARY_TAB)\n        .addCategory(SUMMARY_TAB, 'Summary')\n        .addCategory(SPACE_TAB, 'Space')\n        .addCategory(PERFORMANCE_TAB, 'Performance')\n        .addCategory(PROTECTION_TAB, 'Protection')\n        .addField(\n            new FieldBuilder()\n                .field('groupName')\n                .title('Group Name')\n                .column(true)\n                .facet(<ContainsStringFacet />)\n        )\n        .addField(\n            new FieldBuilder()\n                .field('poolCount')\n                .title('# pools')\n                .category(SUMMARY_TAB)\n                .column(true)\n        )\n        .addField(\n            new FieldBuilder()\n                .field('dataUsageBytes')\n                .title('Data')\n                .categories([SUMMARY_TAB, SPACE_TAB])\n                .column({\n                    header: <MultiFieldColumnHeader leftTitle=\"data\" rightTitle=\"size\" />,\n                    render: (dataUsageBytes, { allocatedBytes }) => (\n                        <ProgressWithValue\n                            leftLabel={numeral(dataUsageBytes).format('0.0 b')}\n                            rightLabel={numeral(allocatedBytes).format('0.0 b')}\n                        >\n                            <Progress\n                                max={allocatedBytes}\n                                value={dataUsageBytes > allocatedBytes ? allocatedBytes : dataUsageBytes}\n                            />\n                        </ProgressWithValue>\n                    ),\n                })\n        )\n        .addField(\n            new FieldBuilder()\n                .field('totalUsageBytes')\n                .title('Total Usage')\n                .category(SPACE_TAB)\n                .column({ render: totalUsageBytes => numeral(totalUsageBytes).format('0.00 b') })\n        )\n        .valueOf();\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport FacetedCollectionPage from '../../../../../../layouts/FacetedCollectionPage/index';\nimport { getGroups } from '../../actionCreators';\nimport { listSelector } from '../../reducer';\nimport style from './style.scss';\nimport getConfig from './getConfig';\n\nexport class ListContainer extends Component {\n    componentDidMount() {\n        this.props.getGroups();\n    }\n\n    render() {\n        const { loadingGroups, loadedGroups, groups, config } = this.props;\n        if (!loadingGroups && !loadedGroups && !groups) {\n            return null;\n        }\n\n        return (\n            <FacetedCollectionPage\n                config={getConfig(config)}\n                collection={groups}\n                loadingCollection={loadingGroups}\n                tableClassName={style.table}\n                keyField=\"groupUid\"\n                defaultSort={[{ colname: 'groupName', order: 'asc' }]}\n            />\n        );\n    }\n}\n\nListContainer.propTypes = {\n    getGroups: PropTypes.func.isRequired,\n    groups: PropTypes.arrayOf(PropTypes.object),\n    loadingGroups: PropTypes.bool.isRequired,\n    loadedGroups: PropTypes.bool.isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    config: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    ...listSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ getGroups }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\n","import React from 'react';\nimport { COLUMN_WIDTHS } from '@infosight/elmer/dist/components/Table';\nimport { ObjectDetailLink } from '@infosight/elmer/dist/infrastructure';\nimport {\n    isEmpty,\n    formatValue,\n    formatDateTime,\n    formatDateTimeWithTimeZone,\n} from '../../../../../../util/formatter';\nimport {\n    FORMAT_NUMBER_NO_PRECISION,\n    FORMAT_BYTE_PRECISION,\n    FORMAT_BYTE_10_PRECISION,\n    FORMAT_MOMENT_CALENDAR_DAY,\n    FORMAT_MOMENT_DATE_TIME,\n    FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC,\n} from '../../../../../../util/formatter/constants';\nimport ArraySupportStatus from './ArraySupportStatus';\nimport { ArrayHardwareStatus, AsupStatus, HeartbeatStatus } from './ArrayHealth';\nimport { OBJECTS } from '../../../../inventory';\n\nexport const DEFAULT_TAB = 'summary';\nconst MONITOR_SUPPORT_TAB = {\n    value: 'monitor_support',\n    title: 'Monitoring Services/Support',\n};\n/* eslint-disable react/prop-types */\nexport default infrastructureConfig =>\n    ({\n        categories: [DEFAULT_TAB, MONITOR_SUPPORT_TAB],\n        columns: [\n            {\n                Header: 'Array',\n                accessor: 'arraySearchableName',\n                filterable: true,\n                minWidth: COLUMN_WIDTHS.LARGE,\n                Cell: ({ original: { hostName, arraySn } }) => {\n                    const name = `${!isEmpty(hostName) ? `${hostName}` : ''}${isEmpty(hostName) ? arraySn : ` (${arraySn})`}`;\n                    return (<ObjectDetailLink name={name} id={arraySn} includeIcon={false} objectType={OBJECTS.ARRAY} />);\n                },\n            },\n            {\n                Header: 'Group',\n                accessor: 'groupName',\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                filterable: true,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Pool',\n                accessor: 'poolSortName',\n                minWidth: COLUMN_WIDTHS.SMALL,\n                filterable: true,\n                Cell: ({ original: { poolName, poolUid } }) =>\n                    <ObjectDetailLink name={poolName} id={poolUid} objectType={OBJECTS.POOL} config={infrastructureConfig} includeIcon={false} />,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Model',\n                accessor: 'model',\n                minWidth: COLUMN_WIDTHS.XSMALL,\n                filterable: true,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'S/W Version',\n                accessor: 'softwareVersion',\n                headerClassName: 'text-right',\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.SMALL,\n                Cell: ({ original: { softwareVersion } }) => softwareVersion && softwareVersion.split('-')[0],\n                filterable: true,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Shelves',\n                accessor: 'shelfCount',\n                minWidth: COLUMN_WIDTHS.XSMALL,\n                headerClassName: 'text-right',\n                className: 'text-right',\n                Cell: ({ original: { shelfCount } }) => formatValue(shelfCount, FORMAT_NUMBER_NO_PRECISION),\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Hardware Status',\n                accessor: 'hardwareStatusComparator',\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                headerClassName: 'text-center',\n                className: 'text-center',\n                Cell: ({ original: { latestHeartbeat, isAllFlash } }) => <ArrayHardwareStatus latestHeartbeat={latestHeartbeat} isAllFlash={isAllFlash} />,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Raw Size',\n                headerClassName: 'text-center',\n                columns: [\n                    {\n                        Header: 'HDD',\n                        accessor: 'arrayTotalRawHddBytes',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { arrayTotalRawHddBytes } }) => formatValue(arrayTotalRawHddBytes, FORMAT_BYTE_10_PRECISION),\n                    },\n                    {\n                        Header: 'SSD',\n                        accessor: 'arrayTotalRawSsdBytes',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { arrayTotalRawSsdBytes } }) => formatValue(arrayTotalRawSsdBytes, FORMAT_BYTE_10_PRECISION),\n                    },\n                ],\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Usable Space',\n                headerClassName: 'text-center',\n                columns: [\n                    {\n                        Header: 'Total',\n                        accessor: 'arrayCapacityBytes',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { arrayCapacityBytes } }) => formatValue(arrayCapacityBytes, FORMAT_BYTE_PRECISION),\n                    },\n                    {\n                        Header: 'Available',\n                        accessor: 'arrayFreeBytes',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { arrayFreeBytes } }) => formatValue(arrayFreeBytes, FORMAT_BYTE_PRECISION),\n                    },\n                ],\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Host Interface',\n                accessor: 'networkCardInfo',\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                filterable: true,\n                categories: [DEFAULT_TAB],\n            },\n            {\n                Header: 'Call Home',\n                headerClassName: 'text-center',\n                columns: [\n                    {\n                        Header: 'Status',\n                        accessor: 'sendingAsups',\n                        headerClassName: 'text-center',\n                        className: 'text-center',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { sendingAsups, asupReceivedTime } }) =>\n                            <AsupStatus sendingAsups={sendingAsups} asupReceivedTime={asupReceivedTime} />,\n                    },\n                    {\n                        Header: 'Last Data Sent',\n                        accessor: 'asupReceivedTime',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { asupReceivedTime, arrayTimezone } }) => (\n                            <div\n                                className=\"ellipsis-on-overflow\"\n                                title={formatDateTimeWithTimeZone(asupReceivedTime, FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC, arrayTimezone)}\n                            >\n                                {formatDateTimeWithTimeZone(asupReceivedTime, FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC, arrayTimezone)}\n                            </div>),\n                    },\n                ],\n                categories: [MONITOR_SUPPORT_TAB],\n            },\n            {\n                Header: 'Heartbeat',\n                headerClassName: 'text-center',\n                columns: [\n                    {\n                        Header: 'Status',\n                        accessor: 'isHbDelayed',\n                        headerClassName: 'text-center',\n                        className: 'text-center',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { latestHeartbeat } }) =>\n                            latestHeartbeat && <HeartbeatStatus timestamp={latestHeartbeat.timestamp} />,\n                    },\n                    {\n                        Header: 'Last Heartbeat',\n                        accessor: 'latestHbSort',\n                        headerClassName: 'text-right',\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { latestHeartbeat } }) => (\n                            <div\n                                className=\"ellipsis-on-overflow\"\n                                title={formatDateTimeWithTimeZone(latestHeartbeat && latestHeartbeat.timestamp, FORMAT_MOMENT_DATE_TIME)}\n                            >\n                                {formatDateTimeWithTimeZone(latestHeartbeat && latestHeartbeat.timestamp, FORMAT_MOMENT_DATE_TIME)}\n                            </div>),\n                    },\n                ],\n                categories: [MONITOR_SUPPORT_TAB],\n            },\n            {\n                Header: 'Support',\n                headerClassName: 'text-center',\n                columns: [\n                    {\n                        Header: 'Status',\n                        accessor: 'parsedSupportStatus',\n                        filterable: true,\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { parsedSupportStatus } }) => <ArraySupportStatus parsedSupportStatus={parsedSupportStatus} />,\n                    },\n                    {\n                        Header: 'Agreement',\n                        accessor: 'supportAgrmt',\n                        filterable: true,\n                        minWidth: COLUMN_WIDTHS.MEDIUM,\n                    },\n                    {\n                        Header: 'End Date',\n                        accessor: 'supportEndDate',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { supportEndDate } }) => formatDateTime(supportEndDate, FORMAT_MOMENT_CALENDAR_DAY, true),\n                    },\n                ],\n                categories: [MONITOR_SUPPORT_TAB],\n            },\n            {\n                Header: 'Timezone',\n                accessor: 'arrayTimezone',\n                minWidth: COLUMN_WIDTHS.LARGE,\n                filterable: true,\n                categories: [MONITOR_SUPPORT_TAB],\n            },\n        ],\n    });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { ClientControlledTable } from '@infosight/elmer/dist/components/Table';\nimport { userSelector } from '../../../../../user/reducer';\nimport { getArrays, reset, getArraysCsv } from '../../actionCreators';\nimport { listSelector, csvSelector } from '../../reducer';\nimport getConfig from './getConfig';\n\nexport class ListContainer extends Component {\n    componentDidMount() {\n        const { scope, config } = this.props;\n        this.props.getArrays(config.convertToGenericQueryScope(scope));\n    }\n\n    componentWillUnmount() {\n        this.props.resetArrayListStore();\n    }\n\n    render() {\n        const {\n            loadingArrays,\n            arrays,\n            config,\n            scope,\n            loadingArraysCsv,\n            userName,\n        } = this.props;\n\n        const { columns, categories } = getConfig(config);\n\n        return (\n            <ClientControlledTable\n                tableId={`${userName}_NIMBLE_ARRAYS`}\n                data={arrays}\n                columns={columns}\n                categories={categories}\n                loading={loadingArrays}\n                defaultSorted={[{ id: 'arraySearchableName', desc: false }]}\n                downloadCsv={() => this.props.getArraysCsv(config.convertToGenericQueryScope(scope))}\n                downloadingCsv={loadingArraysCsv}\n            />\n        );\n    }\n}\n\nListContainer.propTypes = {\n    arrays: PropTypes.arrayOf(PropTypes.object),\n    getArrays: PropTypes.func.isRequired,\n    resetArrayListStore: PropTypes.func.isRequired,\n    loadingArrays: PropTypes.bool.isRequired,\n    getArraysCsv: PropTypes.func.isRequired,\n    loadingArraysCsv: PropTypes.bool.isRequired,\n    userName: PropTypes.string,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n};\n\nListContainer.defaultProps = {\n    arrays: [],\n    loadingArrays: false,\n    loadingArraysCsv: false,\n};\n\nconst mapStateToProps = state => ({\n    ...listSelector(state),\n    ...csvSelector(state),\n    userName: userSelector(state).username,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ getArrays, resetArrayListStore: reset, getArraysCsv }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\n","/* eslint-disable import/no-named-as-default */\nimport ArraysContainer from './ListContainer';\n\nexport default ArraysContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { buildUrl } from '@infosight/elmer/dist/utils/url';\nimport { DefaultDetailPageTitle } from '@infosight/elmer/dist/infrastructure';\nimport { IconAdaptor } from '@infosight/elmer/dist/components/IconAdaptor';\nimport FaExternalLink from 'react-icons/lib/fa/external-link';\nimport { OBJECTS } from '../inventory';\n\nconst ArrayDetailPageTitle = (props) => {\n    const { scope: { id: serialNumber, name }, className } = props;\n    const hostName = name && name.substr(0, name.indexOf('(')).trim();\n    let link = buildUrl('', `/InfoSight/static/nimosLauncher.html?arraySn=${serialNumber}&hostname=${hostName}`);\n    if (!hostName) {\n        link = buildUrl('', `/InfoSight/static/nimosLauncher.html?arraySn=${serialNumber}`);\n    }\n\n    return (\n        <span className={className}>\n            <DefaultDetailPageTitle {...props} className={null} />\n            &nbsp;|&nbsp;\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\n                Manage <IconAdaptor adjustment=\"baseline\" size={20}><FaExternalLink /></IconAdaptor>\n            </a>\n        </span>\n    );\n};\n\nArrayDetailPageTitle.propTypes = {\n    productInterface: PropTypes.shape({}).isRequired,\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string,\n    }),\n};\n\nconst DetailPageTitle = (props) => {\n    if (props.scope.type === OBJECTS.ARRAY) {\n        return <ArrayDetailPageTitle {...props} />;\n    }\n\n    return <DefaultDetailPageTitle {...props} />;\n};\n\nDetailPageTitle.propTypes = {\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n    }),\n};\n\nexport default DetailPageTitle;\n","/* eslint-disable no-unused-vars, spaced-comment */\nimport React from 'react';\nimport { IconAdaptor } from '@infosight/elmer/dist/components/IconAdaptor';\nimport PoolIcon from 'react-icons/lib/fa/th';\nimport GroupIcon from 'react-icons/lib/fa/sitemap';\nimport ArrayIcon from 'react-icons/lib/fa/server';\nimport FolderIcon from 'react-icons/lib/fa/folder-o';\nimport VolumeIcon from 'react-icons/lib/fa/database';\nimport AppCategoryIcon from 'react-icons/lib/fa/tag';\nimport { VIEW_TYPES, ProductInterface } from '@infosight/elmer/dist/infrastructure';\nimport { OBJECTS, findObject, getObjectTopology, isInventoryLoaded } from './inventory';\n\nimport VolumeDetailContainer from './volumes/detail';\nimport VolumesList from './volumes/collection/components/list';\nimport VolumesCapacityChart from './volumes/collection/components/capacity/CapacityContainer';\nimport VolumesPerformanceChart from './volumes/collection/components/performance/VolumePerformanceContainer';\n\nimport ArrayDetailContainer from './arrays/detail/components/ArrayDetailContainer';\n\nimport PoolDetailContainer from './pools/detail/components/PoolDetailContainer';\nimport PoolsList from './pools/collection/components/table/PoolsTableView';\n\nimport GroupsList from './groups/collection/components/list/ListContainer';\n\nimport ArrayList from './arrays/collection/components/list';\n\nimport { buildUrlForCurrentTenant } from './tenantSelection';\nimport DetailPageTitle from './components/DetailPageTitle';\n\nconst { DETAIL, CHART, TABLE } = VIEW_TYPES;\nconst { FOLDER, POOL, GROUP, APP_CATEGORY, ARRAY, VOLUME } = OBJECTS;\nconst NOT_SCOPED = null;\n\n// Exported for testing\nexport const config = {\n    id: 'NIMBLE',\n\n    attributes: {\n        tier: 'Storage',\n        name: 'Nimble Storage',\n        scopingObjects: [FOLDER, POOL, GROUP],\n        leafObjects: [VOLUME],\n        rootPath: '/infrastructure/storage/nimble',\n        getRootPath(opts) {\n            const excludeTenant = opts && opts.NIMBLE && opts.NIMBLE.excludeTenant;\n            return excludeTenant ? this.rootPath : buildUrlForCurrentTenant(this.rootPath);\n        },\n    },\n\n    topology: {\n        getObjectTopology,\n        findObject,\n        search: {\n            type: 'client-side',\n            isReady: isInventoryLoaded,\n        },\n    },\n\n    titles: {\n        [GROUP]: ['Groups', 'Group'],\n        [ARRAY]: ['Arrays', 'Array'],\n        [POOL]: ['Pools', 'Pool'],\n        [FOLDER]: ['Folders', 'Folder'],\n        [VOLUME]: ['Volumes', 'Volume'],\n        [APP_CATEGORY]: ['Applications', 'Application'],\n    },\n\n    genericQueryTypes: {\n        [GROUP]: 'group',\n        [ARRAY]: 'array',\n        [POOL]: 'pool',\n        [FOLDER]: 'folder',\n        [VOLUME]: 'volume',\n        [APP_CATEGORY]: 'application',\n    },\n\n    icons: {\n        [GROUP]: props => <IconAdaptor {...props} type=\"svg\"><GroupIcon /></IconAdaptor>,\n        [ARRAY]: props => <IconAdaptor {...props} type=\"svg\"><ArrayIcon /></IconAdaptor>,\n        [POOL]: props => <IconAdaptor {...props} type=\"svg\"><PoolIcon /></IconAdaptor>,\n        [FOLDER]: props => <IconAdaptor {...props} type=\"svg\"><FolderIcon /></IconAdaptor>,\n        [VOLUME]: props => <IconAdaptor {...props} type=\"svg\"><VolumeIcon /></IconAdaptor>,\n        [APP_CATEGORY]: props => <IconAdaptor {...props} type=\"svg\"><AppCategoryIcon /></IconAdaptor>,\n    },\n\n    routes: {\n        [GROUP]: 'groups',\n        [POOL]: 'pools',\n        [FOLDER]: 'folders',\n        [VOLUME]: 'volumes',\n        [ARRAY]: 'arrays',\n    },\n\n    nav: {\n        objects: [POOL, ARRAY, VOLUME],\n    },\n\n    objectViews: {\n        [VOLUME]: {\n            scopes: [POOL],\n            views: [\n                {\n                    type: TABLE,\n                    urlSegment: 'list',\n                    name: 'Volume List',\n                    component: VolumesList,\n                    scopes: [POOL, GROUP, ARRAY, NOT_SCOPED],\n                },\n                {\n                    type: CHART,\n                    urlSegment: 'capacity',\n                    name: 'Volume Capacity Trend',\n                    component: VolumesCapacityChart,\n                },\n                {\n                    type: CHART,\n                    urlSegment: 'performance',\n                    name: 'Volume Performance Contention',\n                    component: VolumesPerformanceChart,\n                },\n                {\n                    type: DETAIL,\n                    urlSegment: 'detail',\n                    component: VolumeDetailContainer,\n                    scopes: [NOT_SCOPED],\n                },\n            ],\n        },\n        [POOL]: {\n            scopes: [GROUP, NOT_SCOPED],\n            views: [\n                {\n                    type: TABLE,\n                    urlSegment: 'list',\n                    name: 'Pool List',\n                    component: PoolsList,\n                },\n                {\n                    type: DETAIL,\n                    urlSegment: 'detail',\n                    component: PoolDetailContainer,\n                    scopes: [NOT_SCOPED],\n                },\n            ],\n        },\n        [GROUP]: {\n            scopes: [NOT_SCOPED],\n            views: [\n                {\n                    type: TABLE,\n                    urlSegment: 'list',\n                    name: 'Group List',\n                    component: GroupsList,\n                },\n            ],\n        },\n        [ARRAY]: {\n            scopes: [GROUP, POOL],\n            views: [\n                {\n                    type: TABLE,\n                    urlSegment: 'list',\n                    name: 'Array List',\n                    component: ArrayList,\n                    scopes: [GROUP, POOL, NOT_SCOPED],\n                },\n                {\n                    type: DETAIL,\n                    urlSegment: 'detail',\n                    component: ArrayDetailContainer,\n                },\n            ],\n        },\n    },\n\n    componentOverrides: {\n        DetailPageTitle,\n    },\n};\n\nexport const productInterface = new ProductInterface(config);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"large-column\":\"large-column__zZSlj\",\"medium-column\":\"medium-column__trYNe\",\"small-column\":\"small-column__1RMtk\",\"xsmall-column\":\"xsmall-column__1qLfB\",\"noHeaderBorder\":\"noHeaderBorder__1EUlX\",\"hidden\":\"hidden__8PNCW\",\"container\":\"container__jfX8H\",\"applications-container\":\"applications-container__17BqZ\"};","var Backbone = require('backbone');\n\nmodule.exports = Backbone.Model.extend(\n    /** @lends models/grid/BaseGridModel.prototype */ {\n\n        /**\n         * @classdesc <span style=\"color: red;\">Developer description to be added.</span>\n         * @name models/grid/BaseGridModel\n         * @constructor\n         * @augments Backbone.Model\n         */\n\n        defaults: {\n            // gridUrl: null,\n            // pages: 10,\n            showSearch: true,\n            showFilters: false,\n            showPaging: true,\n            filterLabel: 'Filter...',\n            emptyLabel: 'No results found',\n            columns: [],\n\n            /*\n             * Configures grouping rows by a column value.\n             * Takes a function(DataTablesApi) -> Integer\n             * The function should return the column index by which to group, or null if grouping\n             * is to be disabled based on the current table configuration (e.g. the table is ordered\n             * by a column with a non-enumerated value).\n             *\n             * Grouping is only allowed by a scolumn also selected for ordering.\n             */\n            groupBy: function () {\n                return null;\n            },\n        },\n\n        validate: function (attrs, options) {\n            if (!attrs.columns || attrs.columns.length === 0) {\n                return '\"columns\" must be specified in the model.';\n            }\n        },\n    });\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport moment from 'moment-timezone';\nimport { saveAs } from 'file-saver';\nimport {\n    ARRAYS_LIST_FETCH,\n    ARRAYS_CSV_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\nimport { ArrayHardwareStatus, isHeartbeatDelayed } from './components/list/ArrayHealth';\nimport { parseSupportStatus } from './components/list/ArraySupportStatus';\nimport getNetworkCardInfo from '../detail/components/NetworkInfo';\n\n\n/**\n * @param {object} scope\n */\nfunction fetchArrays(scope) {\n    return new Request().pod().genericQuery('arrays')\n        .post({ scope });\n}\n\n/**\n * @param {object} scope\n */\nfunction fetchHeartbeats() {\n    return new Request().pod().account().urlSegment('heartbeats')\n        .get();\n}\n\nfunction fetchAsups() {\n    return new Request().pod().account()\n        .urlSegment('assets')\n        .urlSegment('lastAsupReceivedTimestamps')\n        .get();\n}\n\nfunction extendWithTransformedArrayValues(arraysData) {\n    /*\n        With new Table component, we can add custom Sort and filter methods as well to get around the\n        sort and filtering issues when we have this kind of situation where we render a transformed\n        value instead of original data from the response json. Resorted to this approach\n        to avoid adding custom sort and filter method for regular string all over the code\n        especially because since we keep debating/changing how the null values should be sorted across the lists\n    */\n    return arraysData.map(array => ({\n        ...array,\n        parseSupportStatus: parseSupportStatus(array.supportStatus, array.supportEndDate),\n        supportEndDate: moment(array.supportEndDate).isAfter(moment().add(10, 'years')) ? null : array.supportEndDate,\n        networkCardInfo: getNetworkCardInfo({\n            tenGigSfpPortCount: array.tenGigSfpPortCount,\n            tenGigBaseTPortCount: array.tenGigBaseTPortCount,\n            gigPortCount: array.gigPortCount,\n            fcPortCount: array.fcPortCount,\n        }),\n    }));\n}\n\n/**\n * Get the list of  All Arrays for the selected account\n * This is also used by the legacy app, so take care when changing the shape.\n */\nexport const getArrays = scope => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(ARRAYS_LIST_FETCH, dispatch);\n    dispatchStart();\n\n    return new Request().all([\n        fetchArrays(scope),\n        fetchHeartbeats(),\n        fetchAsups(),\n    ])\n        .then(([arrays, heartbeats, asups]) => {\n            const originalArraysData = (arrays && arrays.data && arrays.data.data) || [];\n            const arraysData = extendWithTransformedArrayValues(originalArraysData);\n            const heartbeatsData = (heartbeats && heartbeats.data) || {};\n            const asupsData = (asups && asups.data) || {};\n            const arraysWithHeartbeats = arraysData.map((array) => {\n                const latestHeartbeat = heartbeatsData[array.arraySn];\n                const isHbDelayed = latestHeartbeat ? !isHeartbeatDelayed(latestHeartbeat.timestamp) : null;\n                return ({\n                    ...array,\n                    arrayHostName: `${array.arraySn}${array.hostName ? array.hostName : ''}`,\n                    hardwareStatusComparator: ArrayHardwareStatus.comparator(latestHeartbeat),\n                    latestHeartbeat,\n                    latestHbSort: latestHeartbeat ? latestHeartbeat.timestamp : null,\n                    isHbDelayed,\n                    asupReceivedTime: asupsData[array.arraySn] || null,\n                });\n            });\n            return arraysWithHeartbeats;\n        })\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\n/**\n * Download the nimble arrays CSV file. NOTE: this actually saves the file\n */\nexport const getArraysCsv = scope => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(ARRAYS_CSV_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('arrays').csv()\n        .post({ scope }, { responseType: 'blob' })\n        .then(x => saveAs(x.data, `HPE InfoSight Arrays ${moment().format('L').replace(/\\\\|\\//g, '-')}.csv`))\n        .then(() => dispatchSuccess({})) // we want to end the loading but don't actually want to save the CSV data in redux\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\nimport StatusIndicator from '@infosight/elmer/dist/components/StatusIndicator';\nimport NimbleIcon from '../../../../components/NimbleIcon';\nimport { isEmpty } from '../../../../../../util/formatter';\nimport { ICONS } from '../../../../components/NimbleIcon/NimbleIcon';\n\nconst HeartbeatDelayThresholdInMinutes = 25;\n\nexport const isHeartbeatDelayed = heartbeattimestamp => !heartbeattimestamp ||\n    moment().diff(moment(heartbeattimestamp), 'minutes') > HeartbeatDelayThresholdInMinutes;\n\n// TODO: Current production uses this logic, Checked with sudhakar..he is going to create a Jira to handle this on data side\n// const hasAsupWarning = sendingAsups => sendingAsups !== 'RECEIVED';\n\n// Any state values NOT 'active' or 'standby' indicate a warning\nconst hasControllerIssue = hb => hb.controllers && hb.controllers.some(controller => controller.state !== 'active' && controller.state !== 'standby');\n\nconst hasFanIssue = hb => hb.controllers\n            && hb.controllers.some(controller => (controller.components).some(component => component.name === 'fan' && component.status !== 'OK'));\n\nconst hasPowerSupplyIssue = hb => hb.controllers\n            && hb.controllers.some(controller => (controller.components).some(component => component.name === 'psu' && component.status !== 'OK'));\n\nconst hasSSDIssues = hb => hb.ssdFailedCount > 0;\n\nconst hasHDDIssues = hb => hb.hddFailedCount > 0;\n\nexport const AsupStatus = ({ asupReceivedTime }) => {\n    const asupStatus = !isEmpty(asupReceivedTime);\n    return <StatusIndicator size={17} status={asupStatus ? 'success' : 'error'} tooltip={`Status: ${asupStatus ? 'RECEIVED' : 'NOT RECEIVED'}`} />;\n};\n\nAsupStatus.propTypes = {\n    sendingAsups: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    asupReceivedTime: PropTypes.number,\n};\n\nexport const HeartbeatStatus = ({ timestamp }) => {\n    if (!timestamp) {\n        return null;\n    }\n    const size = 17;\n    return isHeartbeatDelayed(timestamp) ?\n        <StatusIndicator size={size} status=\"warning\" tooltip=\"Status: Delayed\" />\n        : <StatusIndicator size={size} status=\"success\" tooltip=\"Status: Good\" />;\n};\n\nHeartbeatStatus.propTypes = {\n    timestamp: PropTypes.number,\n};\n\nexport const ArrayHardwareStatus = ({ latestHeartbeat, isAllFlash }) => {\n    if (!latestHeartbeat) {\n        return null;\n    }\n    const leftSpace = {\n        paddingLeft: '6px',\n    };\n    const STATUS = {\n        GOOD: 'Good',\n        ERROR: 'Warning/Error',\n    };\n\n    const controllerStatus = !hasControllerIssue(latestHeartbeat);\n    const fanStatus = !hasFanIssue(latestHeartbeat);\n    const powerSupplyStatus = !hasPowerSupplyIssue(latestHeartbeat);\n    const ssdStatus = !hasSSDIssues(latestHeartbeat);\n    const hddStatus = !hasHDDIssues(latestHeartbeat);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"row\">\n                <div\n                    title={`Controller Status : ${controllerStatus ? STATUS.GOOD : STATUS.ERROR}`}\n                >\n                    <NimbleIcon name={ICONS.ARRAY_CONTROLLER} status={controllerStatus} />\n                </div>\n                <div\n                    style={leftSpace}\n                    title={`Fan Status : ${fanStatus ? STATUS.GOOD : STATUS.ERROR}`}\n                >\n                    <NimbleIcon name={ICONS.ARRAY_FAN} status={fanStatus} />\n                </div>\n                <div\n                    style={leftSpace}\n                    title={`Power Supply Status : ${powerSupplyStatus ? STATUS.GOOD : STATUS.ERROR}`}\n                >\n                    <NimbleIcon name={ICONS.ARRAY_POWER_SUPPLY} status={powerSupplyStatus} />\n                </div>\n                <div\n                    style={leftSpace}\n                    title={`SSD Status : ${ssdStatus ? STATUS.GOOD : STATUS.ERROR}`}\n                >\n                    <NimbleIcon name={ICONS.ARRAY_SSD} status={ssdStatus} />\n                </div>\n                {!isAllFlash &&\n                <div\n                    style={leftSpace}\n                    title={`HDD Status : ${hddStatus ? STATUS.GOOD : STATUS.ERROR}`}\n                >\n                    <NimbleIcon name={ICONS.ARRAY_HDD} status={hddStatus} />\n                </div>\n                }\n            </div>\n        </div>\n    );\n};\n\n/**\n * This aids in sorting the HardwareStatus\n * @param {*} latestHeartbeat\n */\nArrayHardwareStatus.comparator = (latestHeartbeat) => {\n    if (!latestHeartbeat) {\n        return null;\n    }\n    let value = '';\n    value += hasControllerIssue(latestHeartbeat) ? 0 : 1;\n    value += hasFanIssue(latestHeartbeat) ? 0 : 1;\n    value += hasPowerSupplyIssue(latestHeartbeat) ? 0 : 1;\n    value += hasSSDIssues(latestHeartbeat) ? 0 : 1;\n    value += hasHDDIssues(latestHeartbeat) ? 0 : 1;\n    return value;\n};\n\nArrayHardwareStatus.propTypes = {\n    isAllFlash: PropTypes.bool,\n    latestHeartbeat: PropTypes.shape({\n        serialNumber: PropTypes.string,\n        timestamp: PropTypes.number,\n        controllers: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string,\n            state: PropTypes.string,\n            components: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.oneOf(['psu', 'fan', 'temperature']),\n                status: PropTypes.string,\n            })),\n        })),\n        ssdGoodCount: PropTypes.number,\n        ssdFailedCount: PropTypes.number,\n        hddGoodCount: PropTypes.number,\n        hddFailedCount: PropTypes.number,\n    }),\n};\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\n\nimport {\n    POOL_FETCH,\n    OVERVIEW_FETCH,\n    CAPACITY_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('pool'),\n    ...getInitialState('poolCapacity'),\n    ...getInitialState('poolOverview'),\n    ...getInitialState('poolPerformance'),\n    ...getInitialState('poolProtection'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: POOL_FETCH, stateKey: 'pool' }),\n    ...createReducersForAction({ type: OVERVIEW_FETCH, stateKey: 'poolOverview' }),\n    ...createReducersForAction({ type: CAPACITY_FETCH, stateKey: 'poolCapacity' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).poolDetail;\nexport const poolSelector = createSelector(baseSelector, 'pool');\nexport const poolOverviewSelector = createSelector(baseSelector, 'poolOverview');\nexport const capacitySelector = createSelector(baseSelector, 'poolCapacity');\nexport const performanceSelector = createSelector(baseSelector, 'poolPerformance');\nexport const protectionSelector = createSelector(baseSelector, 'poolProtection');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyStatistic from '@infosight/elmer/dist/components/KeyStatistic';\nimport NamedNimbleIcon from '../../../nimble/components/NamedNimbleIcon';\nimport { UNKNOWN } from '../util';\n\n// Types of Volume Protection\nconst PROTECTION_TYPES = Object.freeze({\n    UNPROTECTED: 'Unprotected',\n    LOCAL_ONLY: 'Local Only',\n    REMOTE: 'Remote',\n    REPLICA_VOLUME: 'Replica Volume',\n});\n\nconst DataProtection = ({ className, protectionLevel, inline }) => {\n    const displayProtectionLevel = protectionLevel || UNKNOWN;\n\n    if (protectionLevel === PROTECTION_TYPES.UNPROTECTED || protectionLevel === PROTECTION_TYPES.REPLICA_VOLUME || !protectionLevel) {\n        return inline ?\n            <NamedNimbleIcon className={className} iconName=\"Spacer\" inline={inline} aliasName={displayProtectionLevel} /> :\n            <KeyStatistic>{displayProtectionLevel}</KeyStatistic>;\n    }\n    return <NamedNimbleIcon className={className} iconName={protectionLevel} inline={inline} />;\n};\n\nDataProtection.propTypes = {\n    protectionLevel: PropTypes.string,\n    inline: PropTypes.bool,\n};\n\nDataProtection.PROTECTION_TYPES = PROTECTION_TYPES;\nexport default DataProtection;\n","import numeral from 'numeral';\n\nexport const INFO_NOT_AVAILABLE = 'N/A';\nexport const UNKNOWN = 'Unknown';\n\n// Data Format\nexport const BYTE_FORMAT_PRECISION = '0.0 ib';\nexport const BYTE_FORMAT_NO_PRECISION = '0 ib';\n\n// Number Format\nexport const NUMBER_FORMAT_NO_PRECISION = '0,0';\nexport const NUMBER_FORMAT_PRECISION = '0,0.0';\n\n// Abbreviation Format\nexport const NUMBER_ABBREVIATE_FORMAT = '0.0a';\n\n// PERCENT Format\nexport const PERCENT_FORMAT_PRECISION = '0.0 %';\n\n// Milli Seconds\nexport const LATENCY_UNIT_ABBR = 'ms';\n\nexport const IOPS_UNIT_ABBR = 'IO/sec';\n\n// Percentage\nexport const PERCENT_ABBR = '%';\n\n// TODO: Move all these 3 fucntions to common util & Add Headline Value Formatter function\nexport const isEmpty = value => !!((value === null || value === undefined || value === ''));\n\nexport const formatValue = (value, format) => ((value === null || value === undefined) ? INFO_NOT_AVAILABLE : numeral(value).format(format));\n\n// Do not show anything if the value is empty\nexport const listValueFormatter = (value, format, unitAbbr) => {\n    let numeralValue = formatValue(value, format);\n\n    // numeral doesnt return the B when value is less than one\n    if (value > 0 && value < 1 && format.includes('b')) {\n        numeralValue += 'B';\n    }\n    return ((isEmpty(value)) ? null : `${numeralValue}${!isEmpty(unitAbbr) ? ` ${unitAbbr}` : ''}`);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { INFO_NOT_AVAILABLE } from '../util';\n\n/**\n * If the days until full is less than the noted period it falls under that particular category\n */\nconst RISK_CATEGORIES = Object.freeze({\n    AT_RISK_1: '1 Week',\n    AT_RISK_2: '2 Weeks',\n    NOT_SO_URGENT_1: '1 Month',\n    NOT_SO_URGENT_2: '2 Months',\n    NOT_SO_URGENT_3: '3 Months',\n    NO_RISK: 'No Risk',\n});\n\nexport const categorizeDaysUntilFull = (days) => {\n    // TODO: Use isEmpty() once its moved to common util lib\n    if (days === null || days === undefined) {\n        return { category: INFO_NOT_AVAILABLE };\n    } else if (days <= 7) {\n        return { category: RISK_CATEGORIES.AT_RISK_1, colorClass: 'text-danger' };\n    } else if (days <= 15) {\n        return { category: RISK_CATEGORIES.AT_RISK_2, colorClass: 'text-danger' };\n    } else if (days <= 31) {\n        return { category: RISK_CATEGORIES.NOT_SO_URGENT_1 };\n    } else if (days <= 60) {\n        return { category: RISK_CATEGORIES.NOT_SO_URGENT_2 };\n    } else if (days <= 90) {\n        return { category: RISK_CATEGORIES.NOT_SO_URGENT_3 };\n    }\n    return { category: RISK_CATEGORIES.NO_RISK };\n};\n\nconst DaysUntilFull = ({ className, days, inline }) => {\n    const daysCategory = categorizeDaysUntilFull(days);\n    // Do not show empty values in list ( TODO: Tech Debt this is different from all other list values)\n    if (daysCategory.category === INFO_NOT_AVAILABLE && inline) {\n        return null;\n    }\n    return (\n        <div className={className}>\n            <span className={classnames(daysCategory.colorClass)}>{daysCategory.category}</span>\n        </div>\n    );\n};\n\nDaysUntilFull.propTypes = {\n    days: PropTypes.number,\n    /**\n     * True for lists, false for Headline etc.,\n     */\n    inline: PropTypes.bool,\n};\n\nDaysUntilFull.defaultProps = {\n    inline: false,\n};\n\n\nexport default DaysUntilFull;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport PinnedIcon from 'react-icons/lib/fa/thumb-tack';\nimport CheckIcon from 'react-icons/lib/fa/check-circle';\nimport XIcon from 'react-icons/lib/fa/times-circle';\nimport EncryptedIcon from 'react-icons/lib/fa/lock';\nimport { IconAdaptor } from '@infosight/elmer/dist/components/IconAdaptor';\nimport styles from './style.scss';\n\nconst cx = classnames.bind(styles);\n\nconst leftSpace = {\n    paddingLeft: '6px',\n};\n\nconst VolumeStatus = ({ volumePinned, volumeEncrypted }) => (\n    <div className=\"flex-container\">\n        <div className=\"row\">\n            <div\n                className={cx(volumeEncrypted ? null : 'off')}\n                title={volumeEncrypted ? 'encrypted' : 'not encrypted'}\n            >\n                <IconAdaptor size={20} type=\"svg\"><EncryptedIcon /></IconAdaptor>\n                <span className={cx('superscript', cx(volumeEncrypted ? null : 'off'))}>\n                    {volumeEncrypted && <IconAdaptor size={14} type=\"svg\"><CheckIcon /></IconAdaptor>}\n                    {!volumeEncrypted && <IconAdaptor size={14} type=\"svg\"><XIcon /></IconAdaptor>}\n                </span>\n            </div>\n            <div\n                className={cx(volumePinned ? null : 'off')}\n                title={volumePinned ? 'pinned' : 'not pinned'}\n                style={leftSpace}\n            >\n                <IconAdaptor size={20} type=\"svg\"><PinnedIcon /></IconAdaptor>\n                <span className={cx('superscript', cx(volumePinned ? null : 'off'))}>\n                    {volumePinned && <IconAdaptor size={14} type=\"svg\"><CheckIcon /></IconAdaptor>}\n                    {!volumePinned && <IconAdaptor size={14} type=\"svg\"><XIcon /></IconAdaptor>}\n                </span>\n            </div>\n        </div>\n    </div>);\n\n\nVolumeStatus.propTypes = {\n    volumePinned: PropTypes.bool,\n    volumeEncrypted: PropTypes.bool,\n};\n\nexport default VolumeStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\n\nconst VolumeUsageInfo = ({ title }) => (\n    <div\n        className={classnames('flex-container align-middle')}\n        title={\n            'Capacity information at volume level reflects logical usage – before any savings.' +\n        ' This is different from the SM UI which indicates usage after compression.' +\n        ' SM UI will also start showing logical usage in the near future.'\n        }\n    >\n        <span>{title}</span>\n        <span\n            className={classnames('fa fa-info-circle')}\n            style={{ paddingLeft: '4px' }}\n        />\n    </div>\n);\n\nVolumeUsageInfo.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default VolumeUsageInfo;\n","import DataProtection from './DataProtection';\nimport DaysUntilFull, { categorizeDaysUntilFull } from './DaysUntilFull';\nimport VolumeStatus from './VolumeStatus';\nimport VolumeDataUsageInfo from './VolumeDataUsageInfo';\n\nexport { DataProtection, DaysUntilFull, categorizeDaysUntilFull, VolumeStatus, VolumeDataUsageInfo };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport NimbleIcon from '../NimbleIcon';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst NamedNimbleIcon = ({ className, iconName, aliasName, inline, ...props }) => (\n    <div className={classnames(className, 'flex-container align-middle', { 'flex-dir-column': !inline, 'flex-dir-row': !inline })}>\n        {!inline && <NimbleIcon name={iconName} {...props} />}\n        {inline && <span className={cx('icon')}><NimbleIcon name={iconName} {...props} /></span>}\n        <span>{!aliasName ? iconName : aliasName}</span>\n    </div>\n);\n\nNamedNimbleIcon.propTypes = {\n    /**\n     * Name of the Icon\n     * Ex: Oracle, Exchange\n     */\n    iconName: PropTypes.string.isRequired,\n\n    inline: PropTypes.bool,\n\n    /**\n     * If you want to show a different name other than the icon name use this property\n     */\n    aliasName: PropTypes.string,\n};\n\nNamedNimbleIcon.defaultProps = {\n    iconName: 'Unassigned',\n    inline: false,\n};\n\nexport default NamedNimbleIcon;\n","import NamedNimbleIcon from './NamedNimbleIcon';\n\nexport default NamedNimbleIcon;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu__1fT7X\",\"menu-item-container\":\"menu-item-container__1osPI\",\"menu-item\":\"menu-item__3FpCh\",\"toggle\":\"toggle__2fYgw\",\"active\":\"active__5paet\",\"caret\":\"caret__8Jr-5\",\"align-middle\":\"align-middle__2_ePh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon__2-y9B\",\"name\":\"name__2PLPV\",\"sub-name\":\"sub-name__36mhN\",\"node\":\"node__2hVbF\",\"disabled\":\"disabled__3LlVg\",\"caret\":\"caret__5_sSp\",\"container\":\"container__2q2o1\"};","import { createSelector } from 'reselect';\nimport { groupBy, omit } from 'underscore';\nimport { createReducersForAction } from '@infosight/elmer/dist/utils/redux';\nimport { USER_CONTEXT_CHANGED } from '../../user/constants';\nimport { GROUP_POOL_FOLDER_RELATIONS_FETCH, GROUP_POOL_FOLDER_RELATIONS_RESET, ALL, POOL, FOLDER } from '../constants';\n\nconst initialState = {\n    relationships: undefined,\n    loadingRelationships: false,\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => initialState,\n    [GROUP_POOL_FOLDER_RELATIONS_RESET]: () => initialState,\n    ...createReducersForAction({ type: GROUP_POOL_FOLDER_RELATIONS_FETCH, stateKey: 'relationships' }),\n};\n\nexport default function reducer(state = initialState, { type, ...action }) {\n    const handler = ACTION_HANDLERS[type];\n    return handler ? handler(state, action) : state;\n}\n\nexport const objectRelationshipsSelector = state => state.capacityReport.objectRelationships;\n\nexport const relationshipsByTypeSelector = createSelector(\n    objectRelationshipsSelector,\n    ({ relationships }) => {\n        if (!relationships) {\n            return null;\n        }\n\n        // No pool or folder ID\n        const all = { type: ALL };\n\n        const byPool = Object.values(groupBy(relationships, 'poolUID'))\n            .map(value => ({\n                ...omit(value[0], 'folderName', 'folderUID'),\n                type: POOL,\n            }));\n\n        const byFolder = relationships.map(value => ({ ...value, type: FOLDER }));\n\n        return [all, ...byPool, ...byFolder];\n    }\n);\n\nexport const hasFoldersSelector = createSelector(\n    objectRelationshipsSelector,\n    ({ relationships }) => {\n        if (!relationships) {\n            return false;\n        }\n        return !!relationships.find(relation => relation.folderName !== null);\n    }\n);\n","import NimbleIcon from './NimbleIcon';\n\nexport default NimbleIcon;\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('POOLS_COLLECTION');\n\nexport const LIST_FETCH = ns('LIST_FETCH');\nexport const SUMMARY_CARDS_FETCH = ns('SUMMARY_CARDS_FETCH');\nexport const TREND_CARDS_FETCH = ns('TREND_CARDS_FETCH');\nexport const CSV_FETCH = ns('CSV_FETCH');\nexport const RESET = ns('RESET');\n\nexport const SPACE_CATEGORY = 'space';\nexport const PERFORMANCE_CATEGORY = 'performance';\n\nexport const DEFAULT_BYTE_FORMAT = '0.0 ib';\nexport const DEFAULT_MS_FORMAT = '0.0';\nexport const DEFAULT_AVG_IOPS_FORMAT = '0.0a';\n","import numeral from 'numeral';\n\n// TODO: use this as a common file for pools, volumes, and vm constants/functions\n\nexport const INFO_NOT_AVAILABLE = 'N/A';\nexport const UNKNOWN = 'Unknown';\n\n// Data Format\nexport const BYTE_FORMAT_PRECISION = '0.0 ib';\nexport const BYTE_FORMAT_NO_PRECISION = '0 ib';\n\n// Number Format\nexport const NUMBER_FORMAT_NO_PRECISION = '0,0';\nexport const NUMBER_FORMAT_PRECISION = '0,0.0';\n\n// Abbreviation Format\nexport const NUMBER_ABBREVIATE_FORMAT = '0.0a';\n\n// PERCENT Format\nexport const PERCENT_FORMAT_PRECISION = '0.0 %';\n\n// Milli Seconds\nexport const LATENCY_UNIT_ABBR = 'ms';\n\nexport const IOPS_UNIT_ABBR = 'IO/sec';\n\nexport const THROUGHPUT_UNIT_ABBR = 'MiB/s';\n\n// Percentage\nexport const PERCENT_ABBR = '%';\n\nexport const isEmpty = value => !!((value === null || value === undefined || value === ''));\n\nexport const formatValue = (value, format) => {\n    let displayValue = (value === null || value === undefined) ? INFO_NOT_AVAILABLE : numeral(value).format(format);\n\n    if (format.includes('a')) {\n        displayValue = displayValue.toUpperCase();\n    }\n\n    return displayValue;\n};\n\n\n// Do not show anything if the value is empty\nexport const listValueFormatter = (value, format, unitAbbr) => {\n    let numeralValue = formatValue(value, format);\n\n    // numeral doesnt return the B when value is less than one\n    if (value > 0 && value < 1 && format.includes('b')) {\n        numeralValue += 'B';\n    }\n    if (format.includes('a')) {\n        numeralValue = numeralValue.toUpperCase();\n    }\n\n    return ((isEmpty(value)) ? INFO_NOT_AVAILABLE : `${numeralValue}${!isEmpty(unitAbbr) ? ` ${unitAbbr}` : ''}`);\n};\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('VOLUMES_COLLECTION');\n\nexport const VOLUMES_LIST_FETCH = ns('LIST_FETCH');\nexport const VOLUMES_CAPACITY_FETCH = ns('CAPACITY_FETCH');\nexport const VOLUMES_THROUGHPUT_FETCH = ns('THROUGHPUT_FETCH');\nexport const VOLUMES_LATENCY_FETCH = ns('LATENCY_FETCH');\nexport const POOL_CPU_CACHE_FETCH = ns('POOL_CPU_CACHE_FETCH');\nexport const SCOPING_OBJECT_SIZE_FETCH = ns('SCOPING_OBJECT_SIZE_FETCH');\nexport const VOLUMES_CSV_FETCH = ns('CSV_FETCH');\nexport const RESET = ns('RESET');\n\nexport const DEFAULT_TAB = 'summary';\nexport const SPACE_TAB = 'space';\nexport const PERFORMANCE_TAB = 'performance';\nexport const PROTECTION_TAB = 'protection';\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    VOLUMES_CAPACITY_FETCH,\n    VOLUMES_THROUGHPUT_FETCH,\n    VOLUMES_LATENCY_FETCH,\n    VOLUMES_LIST_FETCH,\n    POOL_CPU_CACHE_FETCH,\n    SCOPING_OBJECT_SIZE_FETCH,\n    VOLUMES_CSV_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    volumesCapacity: null,\n    loadingVolumesCapacity: false,\n    loadedVolumesCapacity: false,\n    performance: null,\n    loadingPerformance: false,\n    loadedPerformance: false,\n    volumes: [],\n    loadingVolumes: false,\n    loadedVolumes: false,\n    loadingScopingObjectSizeSeries: false,\n    loadedScopingObjectSizeSeries: false,\n    ...getInitialState('volumesCsv'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: VOLUMES_CAPACITY_FETCH, stateKey: 'volumesCapacity' }),\n    ...createReducersForAction({ type: VOLUMES_THROUGHPUT_FETCH, stateKey: 'throughputTimeseries' }),\n    ...createReducersForAction({ type: VOLUMES_LATENCY_FETCH, stateKey: 'latencyTimeseries' }),\n    ...createReducersForAction({ type: VOLUMES_LIST_FETCH, stateKey: 'volumes' }),\n    ...createReducersForAction({ type: POOL_CPU_CACHE_FETCH, stateKey: 'poolCpuCacheTimeseries' }),\n    ...createReducersForAction({ type: SCOPING_OBJECT_SIZE_FETCH, stateKey: 'scopingObjectSizeSeries' }),\n    ...createReducersForAction({ type: VOLUMES_CSV_FETCH, stateKey: 'volumesCsv' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).volumeCollection;\nexport const volumesCapacitySelector = createSelector(baseSelector, 'volumesCapacity');\nexport const throughputTimeseriesSelector = createSelector(baseSelector, 'throughputTimeseries');\nexport const latencyTimeseriesSelector = createSelector(baseSelector, 'latencyTimeseries');\nexport const listSelector = createSelector(baseSelector, 'volumes');\nexport const poolCpuCacheTimeseriesSelector = createSelector(baseSelector, 'poolCpuCacheTimeseries');\nexport const scopingObjectSizeSeriesSelector = createSelector(baseSelector, 'scopingObjectSizeSeries');\nexport const csvSelector = createSelector(baseSelector, 'volumesCsv');\n","const _ = require('underscore');\nvar BaseGridModel = require('app/models/grid/BaseGridModel');\n\nmodule.exports = BaseGridModel.extend({\n\n    defaults: _.defaults({\n        url: null,\n        data: [],\n        dataSrc: 'data',\n    }, BaseGridModel.prototype.defaults),\n\n    url: function () {\n        return this.get('url');\n    },\n});\n","const _ = require('underscore');\nvar Backbone = require('backbone');\n\nmodule.exports = Backbone.Model.extend({\n\n    /**\n     * Attributes in this model are in the form: columnName = filterValue\n     */\n\n    clearValues: function () {\n        this.set(_.reduce(this.keys(), function (memo, attr) {\n            memo[attr] = null;\n            return memo;\n        }, {}));\n    },\n\n});\n","const App = require('app/Application');\nconst _ = require('underscore');\nconst Backbone = require('backbone');\nconst { API_BASE_URL } = require('progeny/config');\n\nvar URI = require('urijs');\nvar Marionette = require('backbone.marionette');\n\nvar ALL_ACCOUNTS_ID = '~';\n\nvar Api = _.bind(Marionette.extend, URI)({\n\n    constructor: function Api() {\n        Api.__super__.constructor.call(this, API_BASE_URL);\n    },\n\n    /**\n     * Construct a URL for the account resource.\n     * Will dynamically build the proper URL for an \"own-account\" vs. a \"cross-account\" access.\n     *\n     * @return {Api}  An Api object that can be further appended to\n     */\n    account: function () {\n        var accountSelection = App.request('global', 'get:account:selection');\n        if (accountSelection.isPrimary() || (accountSelection.isSingle() && accountSelection.getAccount().id == null)) {\n            return this.segment('account');\n        } else if (accountSelection.isSingle()) {\n            return this.segment('accounts').segment(accountSelection.getAccount().id);\n        } else {\n            console.assert(accountSelection.isAll());\n            return this.segment('accounts').segment(ALL_ACCOUNTS_ID);\n        }\n    },\n\n    /**\n     * Construct a URL for pod resource that is managed in pod app\n     */\n    pod: function () {\n        var accountSelection = App.request('global', 'get:account:selection');\n        this.addQuery({ podLocator: `Nimble.Tenant.${accountSelection.getAccount().id}` });\n\n        return this.segment('pod');\n    },\n\n    /**\n     * Construct a URL for central resource that is managed in central app\n     */\n    central: function () {\n        return this.segment('central');\n    },\n\n    /**\n     * Construct a URL for an array resource\n     */\n    array: function (arraySn) {\n        return this\n            .pod()\n            .segment('arrays')\n            .segment(arraySn);\n    },\n\n    user: function () {\n        return this.segment('user');\n    },\n\n    /**\n     * Delegates to String.replace() on the string representation of this URL\n     * This allows us to return an Api object from Backbone.Collection.url method (instead of having\n     * to call toString() each time) and still have Backbone URL processing work.\n     */\n    replace: function () {\n        var urlString = this.toString();\n        return urlString.replace.apply(urlString, arguments);\n    },\n\n}, {\n    ALL_ACCOUNTS_ID: ALL_ACCOUNTS_ID,\n});\n\nvar newApi = function () {\n    var api = new Api();\n    this.trigger('api:create', api);\n    return api;\n};\n\n// Extend the Backbone.Model and Backbone.Collection prototypes with the newApi function\n// This allows Model/Collection mixins to listen for the 'api:create' event to decorate the api.\n\n_.extend(Backbone.Model.prototype, { api: newApi });\n_.extend(Backbone.Collection.prototype, { api: newApi });\n_.extend(Backbone.View.prototype, { api: newApi });\n\nmodule.exports = Api;\n","import { createReducersForAction, createSelector } from '@infosight/elmer/dist/utils/redux';\nimport { USER_CONTEXT_CHANGED } from '../../user/constants';\nimport { FETCH_SFDC_CONTACT } from '../actions/constants';\n\nconst initialState = {};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    ...createReducersForAction({ type: FETCH_SFDC_CONTACT, stateKey: 'contact' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => state.supportTab.core;\nexport const contactSelector = createSelector(baseSelector, 'contact');\n","var Cocktail = require('backbone.cocktail');\nvar Backbone = require('backbone');\nCocktail.patch(Backbone);\nconst $ = require('jquery');\nvar Marionette = require('backbone.marionette');\nvar ModalRegion = require('app/common/ModalRegion');\nvar moment = require('moment');\n\n// TODO Why do we need this for an English-only UI?\ntry {\n    moment.locale(window.navigator.language);\n} catch (e) {\n    moment.locale('en');\n}\n\nvar MyApplication = Marionette.Application.extend({\n\n    /**\n     * Fetches a given channel by name.  If the given channel name is null,\n     * then the global channel will be returned.\n     * @param  {String} channel The name of the channel.\n     * @return {Channel}        The appropriate channel.\n     * @private\n     */\n    _getChannel: function (channel) {\n        return channel ?\n            Backbone.Wreqr.radio.channel(channel) :\n            Backbone.Wreqr.radio.channel('global');\n    },\n\n    // REQUEST/RESPONSE\n\n    /**\n     * Makes a request.  Used to request some piece of data from another part of the system.\n     * @param  {String} channel Name of the channel to scope the request.\n     * @param  {String} name    Name of the request.\n     * @param  {Object} data    The data to pass in the request.\n     */\n    request: function (channel, name, data) {\n        return this._getChannel(channel).reqres.request(name, data);\n    },\n\n    /**\n     * Responds to a request for data in another part of the system.\n     * @param  {String}   channel  Name of the channel to scope the request.\n     * @param  {String}   name     Name of the request to respond to.\n     * @param  {Function} callback The callback function to execute in response to the request.\n     * @param  {Object}   scope    The scope for the callback.\n     * @return {Object}   Returns the result of the request.\n     */\n    handleRequest: function (channel, name, callback, scope) {\n        return this._getChannel(channel).reqres.setHandler(name, callback, scope);\n    },\n\n    // COMMANDS/HANDLERS\n\n    /**\n     * Issues a command to another part of the system.\n     * @param  {String} channel Name of the channel to scope the request.\n     * @param  {String} name    Name of the request.\n     * @param  {Object} data    The data to pass in the request.\n     */\n    command: function (channel, name, args) {\n        var commands = this._getChannel(channel).commands;\n        args = Array.prototype.slice.call(arguments, 1);\n        commands.execute.apply(commands, args);\n    },\n\n    /**\n     * Handles a command issued by another part of the system.\n     * @param  {String}   channel  Name of the channel to scope the command.\n     * @param  {String}   name     Name of the request to respond to.\n     * @param  {Function} callback The callback function to execute in response to the request.\n     * @param  {Object}   scope    The scope for the callback.\n     */\n    handleCommand: function (channel, name, callback, scope) {\n        this._getChannel(channel).commands.setHandler(name, callback, scope);\n    },\n\n    // EVENTS\n\n    /**\n     * Fires an event on the given channel.\n     * @param  {String} channel Name of the channel to scope the event.\n     * @param  {String} name    Name of the event.\n     * @param  {Object} data    The data to pass in the request.\n     */\n    event: function (channel, name, data) {\n        this._getChannel(channel).vent.trigger(name, { ...(data || {}), eventName: name });\n    },\n\n    /**\n     * Handles a event triggered by another part of the system.\n     * @param  {String}   channel  Name of the channel to scope the event.\n     * @param  {String}   name     Name of the request to respond to.\n     * @param  {Function} callback The callback function to execute in response to the request.\n     * @param  {Object}   scope    The scope for the callback.\n     */\n    handleEvent: function (channel, name, callback, scope) {\n        this._getChannel(channel).vent.on(name, callback, scope);\n    },\n\n    handleProgenyEvent: function (name, callback, scope) {\n        this.handleEvent('progeny', name, callback, scope);\n    },\n\n    removeEvent: function (channel, name, callback, scope) {\n        this._getChannel(channel).vent.off(name, callback, scope);\n    },\n\n});\n\n// setup a global App variable to make it easy to gain access to\nvar App = new MyApplication();\n\n// configure the application regions\nApp.addRegions({\n    modalRegion: {\n        selector: '#modal-region',\n        regionClass: ModalRegion,\n    },\n});\n\nApp.initializeLegacyControllers = function initializeLegacyControllers() {\n    require('./AppRequestHandlers').default(App);\n    require('./modules/header/AccountController').getInstance();\n\n    const AssetSupportRenewalController = require('./modules/notification/AssetSupportRenewalController');\n    new AssetSupportRenewalController();\n\n    const NoncompliantReleaseController = require('./modules/notification/NoncompliantReleaseController');\n    new NoncompliantReleaseController();\n};\n\n// TODO Is this needed?\n$.ajaxPrefilter(function (options, originalOptions, jqXhr) {\n    /**\n     * TODO\n     * Consider using moment.tz.guess() and passing the Timezone ID in addition to offset\n     * This would allow for proper alignment of hour/day offset when rolling up historical timestamps\n     * By only passing the current offset, historical rollups can be misaligned due to daylight savings time\n     */\n    jqXhr.setRequestHeader('X-Timezone-Offset', new Date().getTimezoneOffset());\n});\n\nmodule.exports = App;\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport {\n    LOAD_PREFERENCES,\n    DISABLE_DIALOG,\n    SET_NOTIFICATION,\n    ACCEPT_EULA,\n} from './constants';\nimport Request from '../../services/Request';\n\n// There is no begin load action because this should only ever be called once\nexport const loadPreferences = () => (dispatch) => {\n    const { dispatchStart, dispatchSuccess } = actionsFor(LOAD_PREFERENCES, dispatch);\n\n    dispatchStart();\n\n    new Request().user().urlSegment('preferences')\n        .get()\n        .then(({ data }) => {\n            dispatchSuccess(data);\n        });\n};\n\nconst savePreferences = (getState) => {\n    const currentPrefs = { ...getState().preferences };\n    delete currentPrefs.loadedPreferences;\n    new Request().user().urlSegment('preferences')\n        .put(currentPrefs);\n};\n\nexport const disableDialog = dialogId => (dispatch, getState) => {\n    // Because all preferences for a user are saved in one bulk action,\n    // we update state BEFORE saving so that multiple different preference can\n    // be saved in a row without losing data.\n    dispatch({ type: DISABLE_DIALOG, payload: dialogId });\n    // TODO: Handle error. Tougher and probably less valuable because of the above comment.\n    savePreferences(getState);\n};\n\nexport const setNotification = notification => (dispatch, getState) => {\n    // Because all preferences for a user are saved in one bulk action,\n    // we update state BEFORE saving so that multiple different preference can\n    // be saved in a row without losing data.\n    dispatch({ type: SET_NOTIFICATION, payload: notification });\n    // TODO: Handle error.\n    savePreferences(getState);\n};\n\nexport const setNotifications = notifications => (dispatch, getState) => {\n    // Because all preferences for a user are saved in one bulk action,\n    // we update state BEFORE saving so that multiple different preference can\n    // be saved in a row without losing data.\n    notifications.forEach((notification) => {\n        dispatch({ type: SET_NOTIFICATION, payload: notification });\n    });\n    // TODO: Handle error.\n    savePreferences(getState);\n};\n\nexport const acceptEula = key => (dispatch, getState) => {\n    // Because all preferences for a user are saved in one bulk action,\n    // we update state BEFORE saving so that multiple different preference can\n    // be saved in a row without losing data.\n    dispatch({ type: ACCEPT_EULA, payload: key });\n    // TODO: Handle error.\n    savePreferences(getState);\n};\n","import { getStore } from '../../../progeny/util/storeProvider';\nimport {\n    disableDialog as progenyDisableDialog,\n    setNotification as progenySetNotification,\n    setNotifications as progenySetNotifications,\n    acceptEula as progenyAcceptEula,\n} from '../../../progeny/modules/preferences/actionCreators';\nimport {\n    getNotification as progenyGetNotification,\n    isDialogEnabled as progenyIsDialogEnabled,\n    isEulaAccepted as progenyIsEulaAccepted,\n} from '../../../progeny/modules/preferences/reducer';\n\n// actions\nexport const disableDialog = dialogId => {\n    getStore().dispatch(progenyDisableDialog(dialogId));\n};\n\nexport const setNotification = notification => {\n    getStore().dispatch(progenySetNotification(notification));\n};\n\nexport const setNotifications = notifications => {\n    getStore().dispatch(progenySetNotifications(notifications));\n};\n\nexport const acceptEula = key => {\n    getStore().dispatch(progenyAcceptEula(key));\n};\n\n// getters\nexport const getNotification = (opts) => progenyGetNotification(getStore().getState(), opts);\n\nexport const isDialogEnabled = (id) => progenyIsDialogEnabled(getStore().getState(), id);\n\nexport const isEulaAccepted = (key) => progenyIsEulaAccepted(getStore().getState(), key);\n\nexport const getPreferences = () => getStore().getState().preferences;\n\n// callback\nexport const onPreferencesLoaded = (callback) => {\n    if (getStore().getState().preferences.loadedPreferences) {\n        callback();\n    } else {\n        const unsubscribe = getStore().subscribe(() => {\n            if (getStore().getState().preferences.loadedPreferences) {\n                unsubscribe();\n                callback();\n            }\n        });\n    }\n}\n","import axios from 'axios';\nimport { buildUrl } from '@infosight/elmer/dist/utils/url';\nimport { logOut } from '@infosight/shell-api/lib/UserProfile';\nimport { BASE_URL } from '../config';\n\nconst axiosInstance = axios.create();\n\nconst errorInterceptor = (error) => {\n    const { response } = error;\n    // The config.url bit here prevents the sfrm requests from redirecting.\n    // This is a short term solution until the Nimble local backend has the SFR login screen.\n    if (response && response.status === 401\n            && response.config.url.indexOf(buildUrl(BASE_URL)) === 0) {\n        document.cookie = `SESSION=;expires=${new Date().getTime() - 1}`;\n        logOut();\n    }\n\n    return Promise.reject(error);\n};\n\naxiosInstance.interceptors.response.use(response => response, errorInterceptor);\n\nexport default axiosInstance;\n","import URI from 'urijs';\nimport axios from './axios';\nimport { getStore } from '../util/storeProvider';\nimport { API_BASE_URL } from '../config';\nimport { isNimbleBoundary } from '../modules/user/util';\nimport { tenantSelector } from '../modules/user/reducer';\n\n/**\n * Fluent interface to make requests to Pod and Central APIs\n * HTTP-based methods proxy to [axios](https://github.com/mzabriskie/axios#request-method-aliases) to execute the\n * request. The others are backed by [URIjs](https://medialize.github.io/URI.js) to build URI, which is used by the\n * HTTP methods.\n *\n * Example:\n *  const promise = new Request().pod().genericQuery('folders).post();\n */\nexport default class Request {\n    constructor() {\n        this.uri = new URI(API_BASE_URL);\n    }\n\n    uriAddQuery(q) {\n        this.uri.addQuery(q);\n        return this;\n    }\n\n    /**\n     * Get the URIjs instance. Note that this will break the method chain.\n     * @return {URI}\n     */\n    uriBuilder() {\n        return this.uri;\n    }\n\n    urlSegment(...args) {\n        this.uri.segment(...args);\n        return this;\n    }\n\n    // Alias of \"slash\" for my sanity\n    urlSegments(...args) {\n        return this.slash(...args);\n    }\n\n    // give this any number of string args and it will append each one to the current uri\n    slash(...args) {\n        for (let i = 0; i < args.length; i += 1) {\n            // segment only appends if you use exactly one string argument\n            // so to prevent something unexpected happening, we only accept string args\n            if (typeof args[i] !== 'string') {\n                throw new Error('slash() only accepts string arguments');\n            }\n            this.uri.segment(args[i]);\n        }\n        return this;\n    }\n\n    query(queries) {\n        this.uri.addQuery(queries);\n        return this;\n    }\n\n    // Nimble request builders\n\n    /**\n     * Construct a URL for pod resource that is managed in pod app\n     */\n    pod(boundaryArg) {\n        this.uri.segment('pod');\n\n        const state = getStore().getState();\n\n        const nimbleTenantSelection = tenantSelector(state);\n        let podLocator;\n        let boundary;\n\n        /*\n         * This overrides the tenant selection in the case of internal users or external users with heterogenous customer contexts\n         * Note that these can be overwritten by the request and usually are for any heterogenous customers\n         */\n        if (nimbleTenantSelection && isNimbleBoundary(boundaryArg)) {\n            podLocator = `Nimble.Tenant.${nimbleTenantSelection.tenant.id}`;\n        } else {\n            podLocator = 'StoreServ';\n        }\n\n        if (boundaryArg) {\n            boundary = boundaryArg;\n        } else if (nimbleTenantSelection) {\n            boundary = `Nimble.Tenant.${nimbleTenantSelection.tenant.id}`;\n        } else {\n            boundary = 'StoreServ._implicit';\n        }\n\n        this.uri.addQuery({\n            podLocator,\n            boundary,\n        });\n\n        return this;\n    }\n\n    /**\n     * Construct a URL for central resource that is managed in central app\n     */\n    central() {\n        this.uri.segment('central');\n        return this;\n    }\n\n    /**\n     * Using accountSelection from store, build the proper URL for an \"own-account\" vs. a \"cross-account\" access\n     * @return {URI}\n     */\n    account() {\n        const state = getStore().getState();\n        const nimbleTenantSelection = tenantSelector(state);\n        // const accountSelection = currentAccountSelector(state);\n\n        // if there is no nimble tenant, we want to just use the 'primary' account because this\n        // should either be routed to the StoreServ pod or fail on fetch.\n        const { isPrimary, tenant } = nimbleTenantSelection || { isPrimary: true };\n        const accountSegment = isPrimary ? 'account' : `accounts/${tenant.id}`;\n\n        this.uri.segment(accountSegment);\n        return this;\n    }\n\n    /**\n     * Using accountSelection from store, build the proper URL for an \"own-account\" vs. a \"cross-account\" access\n     * @return {URI}\n     */\n    tenant() {\n        const state = getStore().getState();\n        const nimbleTenantSelection = tenantSelector(state);\n        // const accountSelection = currentAccountSelector(state);\n\n        // if there is no nimble tenant, we want to just use the 'primary' account because this\n        // should either be routed to the StoreServ pod or fail on fetch.\n        const { isPrimary, tenant } = nimbleTenantSelection || { isPrimary: true };\n        const accountSegment = isPrimary ? 'tenant' : `tenants/${tenant.id}`;\n\n        this.uri.segment(accountSegment);\n        return this;\n    }\n\n    /**\n     * Construct a URL for an array resource\n     */\n    array(arraySn) {\n        this.uri.segment('arrays').segment(arraySn);\n        return this;\n    }\n\n    user() {\n        this.uri.segment('user');\n        return this;\n    }\n\n    csv() {\n        this.uri.addQuery({ export: true });\n        return this;\n    }\n\n    /**\n     * @param view\n     * @param {Array<String>} subviews\n     * @return {Request}\n     */\n    genericQuery(view, subviews) {\n        this.uri.segment('genericQuery').segment(view);\n\n        if (subviews) {\n            subviews.reduce((finalUrl, subView) => finalUrl.segment(subView), this.uri);\n        }\n\n        return this;\n    }\n\n    // SFR request builders\n\n    /**\n     * This resets the URI to a SFR api request from a Nimble request.\n     * Eventually this will be flipflopped when the far superior\n     * SFR API becomes the dominant API of InfoSight ;)\n     */\n    sfr(endpoint) {\n        if (endpoint === 'auth') {\n            this.uri = new URI('/auth/');\n        } else {\n            this.uri = new URI('/api/');\n            this.uri.segment(endpoint);\n        }\n        return this;\n    }\n\n    /**\n     * This resets the URI to a SFR auth request from a Nimble request.\n     */\n    auth() {\n        this.uri = new URI('/auth/');\n        return this;\n    }\n\n    // request calls\n\n    get(...args) {\n        return axios.get(this.uri.valueOf(), ...args);\n    }\n\n    delete(...args) {\n        return axios.delete(this.uri.valueOf(), ...args);\n    }\n\n    put(...args) {\n        return axios.put(this.uri.valueOf(), ...args);\n    }\n\n    post(...args) {\n        return axios.post(this.uri.valueOf(), ...args);\n    }\n\n    patch(data, config = {}) {\n        config = {\n            ...config,\n            headers: {\n                ...config.headers,\n                'X-HTTP-Method-Override': 'PATCH',\n            },\n        };\n        return axios.post(this.uri.valueOf(), data, config);\n    }\n\n    all(requestsArr) { // eslint-disable-line class-methods-use-this\n        return Promise.all(requestsArr);\n    }\n}\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('USER');\nexport const USER_CONTEXT_CHANGED = ns('USER_CONTEXT_CHANGED');\nexport const EXPERIMENTAL_MODE_CHANGED = ns('EXPERIMENTAL_MODE_CHANGED');\nexport const SET_AUTHORIZATION_EVALUATOR = ns('SET_AUTHORIZATION_EVALUATOR');\nexport const SET_TENANT = ns('SET_TENANT');\nexport const SET_CONFIG = ns('SET_CONFIG');\nexport const SET_PROFILE = ns('SET_PROFILE');\n\nexport const AUTHORITIES = {\n    // Based on com.nimblestorage.infosight.auth.UserRealm\n    REALM_INTERNAL: 'Realm.Internal',\n    REALM_INTERNAL_NIMBLE: 'Realm.Internal.Nimble',\n    REALM_INTERNAL_HPE: 'Realm.Internal.HPE',\n    REALM_EXTERNAL: 'Realm.External',\n\n    // Based on com.nimblestorage.infosight.auth.ApplicationAuthority\n    SITE_ACCESS: 'Site.Access',\n    SITE_ADMIN: 'Site.Admin',\n    SITE_SIGNED_NDA: 'Site.SignedNda',\n    DOCUMENTATION_KB_ARTICLE_READ: 'Documentation.KbArticle.Read',\n    VIRTUAL_ARRAY_ACCESS: 'VirtualArray.Access',\n    VIRTUAL_ARRAY_ADMIN: 'VirtualArray.Admin',\n    STORESERV_SYSTEM_GLOBAL: 'StoreServ.System._global',\n    ADDRESS_ADMIN: 'Address.Admin',\n\n    // Based on com.nimblestorage.infosight.auth.ProductFamily\n    PRODUCT_FAMILY_NIMBLE: 'ProductFamily.Nimble',\n    PRODUCT_FAMILY_STORESERV: 'ProductFamily.StoreServ',\n    PRODUCT_FAMILY_STOREONCE: 'ProductFamily.StoreOnce',\n\n    // Synthesized based on data in initial user object loaded from /api/bootstrap\n    TENANT_ACCESS_MULTIPLE: 'Tenants.Multiple.Access',\n\n    // Synthesized\n    ATTRIBUTE_NIMBLE_RESELLER: 'nimble.isResellerEquivalent',\n    ATTRIBUTE_NIMBLE_SUPPORT_PROVIDER: 'nimble.isSupportProvider',\n\n    SUPPORT_CASE: 'Support.Case',\n};\n\n// Based on com.nimblestorage.infosight.auth.permissions.Privilege\nexport const PRIVILEGES = {\n    FEATURE_CORE_ACCESS: 'Feature.Core.Access',\n    FEATURE_VMVISION_ACCESS: 'Feature.VMVision.Access',\n    FEATURE_SUPPORT_CASE_MANAGE: 'Feature.SupportCase.Manage',\n    ACCESS: 'Access',\n    ADMIN: 'Admin',\n    PRIMARY: 'Primary',\n};\n\n// Based on com.nimblestorage.infosight.auth.permissions.PermissionHandler\nexport const PERMISSION_TARGET = {\n    NIMBLE_TENANT: 'Nimble.Customer',\n    NIMBLE_SYSTEM: 'Nimble.System',\n    STOREFRONT_SYSTEM: 'Storefront.System',\n    STOREFRONT_SYSTEM_GROUP: 'Storefront.SystemGroup',\n    GLOBAL_TARGET_ID: '_global',\n    ACTIVE_TARGET_ID: '_active',\n};\n\nexport const nimbleTenantAdminAccess = {\n    permissions: [{\n        privilege: PRIVILEGES.ADMIN,\n        targetType: PERMISSION_TARGET.NIMBLE_TENANT,\n        targetId: PERMISSION_TARGET.ACTIVE_TARGET_ID,\n    }],\n};\n\nexport const nimbleTenantPrimaryAccess = {\n    permissions: [{\n        privilege: PRIVILEGES.PRIMARY,\n        targetType: PERMISSION_TARGET.NIMBLE_TENANT,\n        targetId: PERMISSION_TARGET.ACTIVE_TARGET_ID,\n    }],\n};\n\nexport const nimbleThirdPartyPermissionRequestAccess = {\n    $or: [\n        nimbleTenantAdminAccess,\n        {\n            authorities: AUTHORITIES.ATTRIBUTE_NIMBLE_RESELLER,\n            permissions: {\n                privilege: PRIVILEGES.PRIMARY,\n                targetType: PERMISSION_TARGET.NIMBLE_TENANT,\n                targetId: PERMISSION_TARGET.ACTIVE_TARGET_ID,\n            },\n        },\n    ],\n};\n","/**\n * This file exists because Highcharts insists on adding itself to the window object and will throw\n * [error #16](https://www.highcharts.com/errors/16) if another instance exists. In a microapp env, this obviously\n * is problematic, because we shouldn't have to force everyone to use an old version of highcharts.\n *\n * What this does is simply remove the window ref, initialize Highcharts, then replace the window reference.\n * Optimally, there would be nothing at window.Highcharts, but let's do no evil.\n */\n/* eslint-disable global-require */\n/* eslint-disable import/prefer-default-export */\nconst { initializeHighcharts } = require('@infosight/elmer/dist/charts/highcharts');\nconst Highstock = require('highcharts/highstock.src');\n\n// Safely apply any plugins/addons\nrequire('highcharts/modules/heatmap')(Highstock);\nrequire('highcharts/modules/treemap')(Highstock);\nrequire('highcharts-more')(Highstock);\n\ninitializeHighcharts(Highstock);\nrequire('highcharts-pattern-fill')(Highstock);\n\nmodule.exports.Highstock = Highstock;\n","import { getStore } from '../../util/storeProvider';\nimport { authorizationEvaluatorSelector } from './reducer';\n\nconst VCENTER = 'VMWARE_VCENTER';\n\nexport function isNimbleBoundary(boundary) {\n    return !boundary || boundary.indexOf('Nimble') >= 0;\n}\n\nexport function getStoreServVCenterFromBoundary(boundary, inventory) {\n    if (boundary && boundary.indexOf('StoreServ.Vcenter.') === 0) {\n        const uid = boundary.slice('StoreServ.Vcenter.'.length);\n        if (inventory && inventory.objects && inventory.objects.index && inventory.objects.index[VCENTER] &&\n            inventory.objects.index[VCENTER][uid] && inventory.objects.index[VCENTER][uid].name) {\n            return inventory.objects.index[VCENTER][uid].name;\n        }\n    }\n    return null;\n}\n\nexport function getBoundaryName(boundary, inventory) {\n    if (isNimbleBoundary(boundary)) {\n        return 'Nimble';\n    }\n    if (boundary && boundary.indexOf('StoreServ.Vcenter.') === 0) {\n        const vcenter = getStoreServVCenterFromBoundary(boundary, inventory);\n        return vcenter || '3PAR StoreServ vCenter';\n    }\n    return '3PAR StoreServ';\n}\n\nexport function getBoundarySystemType(boundary) {\n    if (isNimbleBoundary(boundary)) {\n        return 'Nimble';\n    }\n    return '3PAR StoreServ';\n}\n\nexport const AuthorizationEvaluator = {\n    evaluate(opts) {\n        const evaluator = authorizationEvaluatorSelector(getStore().getState());\n        if (!evaluator) {\n            return false;\n        }\n\n        return evaluator.evaluate(opts);\n    },\n\n    filter(opts) {\n        const evaluator = authorizationEvaluatorSelector(getStore().getState());\n        if (!evaluator) {\n            return opts;\n        }\n\n        return evaluator.filter(opts);\n    },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metric\":\"metric__L5QDF\",\"value\":\"value__2TlDt\",\"unit\":\"unit__1DcmL\",\"subtitle\":\"subtitle__1dLyG\",\"muted\":\"muted__1S9GL\",\"popover-link\":\"popover-link__p9AH_\",\"detail\":\"detail__2eVpG\",\"bar\":\"bar__1S2To\",\"popover\":\"popover__1O028\",\"savings-name\":\"savings-name__akkgy\",\"savings-value\":\"savings-value__2j02U\"};","import numeral from 'numeral';\nimport { isNumber } from 'underscore';\n\nexport const getFormat = value => (value >= 1024 ? '0.0 ib' : '0 ib');\n\n// IMPORTANT! function relies on a format with a single space between the units and the number.\nexport const getValueAndUnit = (value, format) => {\n    if (format.indexOf(' ') < 0) {\n        throw new Error('getValueAndUnit requires a space in the format');\n    }\n    if (isNumber(value)) {\n        return numeral(value).format(format).split(' ');\n    }\n\n    return [null, null];\n};\nexport const getByteValueAndUnit = value => getValueAndUnit(value, getFormat(value));\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport moment from 'moment-timezone';\nimport { saveAs } from 'file-saver';\nimport {\n    VOLUMES_LIST_FETCH,\n    VOLUMES_CAPACITY_FETCH,\n    VOLUMES_THROUGHPUT_FETCH,\n    VOLUMES_LATENCY_FETCH,\n    POOL_CPU_CACHE_FETCH,\n    SCOPING_OBJECT_SIZE_FETCH,\n    VOLUMES_CSV_FETCH,\n    RESET } from './constants';\nimport Request from '../../../../services/Request';\nimport { firstOrNull } from '../../../../util/genericQuery';\n\nexport const getVolumes = (scope, filters) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUMES_LIST_FETCH, dispatch);\n    dispatchStart();\n\n    const options = { scope };\n    if (filters) {\n        options.filters = filters;\n    }\n\n    new Request().pod().genericQuery('volumes')\n        .post(options)\n        .then(x => x.data.data)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\n/*\n*  Filter the forecast data ( this is needed only until the real time data is available)\n* (Added to address issues like: IS-14339)\n*/\nconst getExcludeForecastFilters = () => ({\n    field: 'dataSource',\n    $in: [\n        'Actual',\n        'Interpolated',\n    ],\n});\n\nconst getTopN = ({ scope, timeRange = {}, rankBy }, type, view, n = 9, excludeForecast = false) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(type, dispatch);\n    dispatchStart();\n\n    const options = {\n        ...timeRange,\n        scope,\n        rank: {\n            limit: n,\n            orderBy: rankBy,\n            aggregateRemainder: true,\n            objectType: 'volume',\n        },\n    };\n\n    if (excludeForecast) {\n        options.filters = [getExcludeForecastFilters()];\n    }\n\n\n    new Request().pod().genericQuery('volume', [view])\n        .post(options)\n        .then((x) => {\n            const last = x.data.data.slice(-1)[0];\n            if (last && last.isAggregatedRemainder) {\n                last.id = 'aggregatedRemainder';\n                last.name = 'All other volumes';\n            }\n\n            return x.data;\n        })\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getPoolCpuCacheUsageSeries = ({ scope, timeRange = {} }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CPU_CACHE_FETCH, dispatch);\n    dispatchStart();\n\n    const options = {\n        ...timeRange,\n        scope,\n    };\n\n    return new Request().pod().genericQuery('pool', ['cpuCacheUsageSeries'])\n        .post(options)\n        .then(firstOrNull)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getTopVolumesCapacity = options => getTopN(options, VOLUMES_CAPACITY_FETCH, 'capacity', 5, true);\nexport const getTopVolumesLatencyTimeSeries = options => getTopN(options, VOLUMES_LATENCY_FETCH, 'performance');\nexport const getTopVolumesThroughputTimeSeries = options => getTopN(options, VOLUMES_THROUGHPUT_FETCH, 'performance');\n\n/**\n * Fetch the Size series of the Scoping Object.\n * It can be a Folder, a Pool ( Or may be even a Group in future)\n * @param {*}\n * @param excludeForecast - Filter the forecast data ( this is needed only until the real time data is available)\n *  (Added to address issues like: IS-14339)\n */\nexport const getScopingObjectSizeSeries = ({ scope, timeRange = {} }, excludeForecast = true) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(SCOPING_OBJECT_SIZE_FETCH, dispatch);\n    dispatchStart();\n    const options = {\n        ...timeRange,\n        scope,\n    };\n\n    if (excludeForecast) {\n        options.filters = [getExcludeForecastFilters()];\n    }\n\n    const viewType = scope && scope.type;\n    if (!viewType) {\n        console.error('Scope not available');\n        return;\n    }\n    new Request().pod().genericQuery(viewType, ['size'])\n        .post(options)\n        .then(firstOrNull)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\n/**\n * Download the volumes CSV file. NOTE: this actually saves the file\n */\nexport const getVolumesCsv = scope => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(VOLUMES_CSV_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('volumes').csv()\n        .post({ scope }, { responseType: 'blob' })\n        .then(x => saveAs(x.data, `HPE InfoSight Volumes ${moment().format('L').replace(/\\\\|\\//g, '-')}.csv`))\n        .then(() => dispatchSuccess({})) // we want to end the loading but don't actually want to save the CSV data in redux\n        .catch(dispatchError);\n};\n\nexport const reset = () => ({ type: RESET });\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metric\":\"metric__3al5E\",\"value\":\"value__1eIz5\",\"unit\":\"unit__1JWBJ\",\"subtitle\":\"subtitle__2gJ3F\",\"muted\":\"muted__21qbv\"};","const _ = require('underscore');\nconst $ = require('jquery');\nvar Marionette = require('backbone.marionette');\nvar tpl = require('raw-loader!./SoftwareUpgradesView.html');\nvar upgradePathsTpl = require('raw-loader!./SoftwareUpgradePaths.html');\nvar blacklistTooltipTpl = require('raw-loader!./BlacklistTooltip.html');\nvar GridView = require('app/views/components/grid/GridView');\nvar BulkLoadGridModel = require('app/models/grid/BulkLoadGridModel');\n\nvar upgradePathsTemplate = _.template(upgradePathsTpl);\nvar blacklistTooltipTemplate = _.template(blacklistTooltipTpl);\n\nvar truncateRelease = function (release) {\n    return release.split(/\\-/)[0];\n};\n\nfunction renderBlackListEntry(blackListEntries) {\n    var result = '';\n    _.each(blackListEntries, function (entry) {\n        var reason = entry.blackListReasons;\n        if (reason) {\n            var title = reason.publicTitle === 'null' ? '' : ' - ' + reason.publicTitle;\n            result += '<table class=\"blacklisted-reason\"> <tbody><tr><th title=\"\"> AS-' + entry.bugNumber + title + '</th></tr>';\n            result += (reason.publicDescription === 'null') ? '' : '<tr><td style=\"padding-left: 20px\">' + reason.publicDescription + '</td></tr>';\n            result += (reason.publicWorkaround === 'null') ? '' : '<tr><td style=\"padding-left: 20px\">' + reason.publicWorkaround + '</td></tr>';\n            result += '</tbody></table>';\n        }\n    });\n    return result;\n}\n\nmodule.exports = Marionette.LayoutView.extend({\n\n    template: _.template(tpl),\n\n    className: 'software-upgrades-dialog',\n\n    regions: {\n        gridRegion: '.grid-region',\n    },\n\n    blacklistedReleases: null,\n\n    templateHelpers() {\n        return { _, displayAsModal: this.getOption('displayAsModal') !== false };\n    },\n\n    columns: function () {\n        var self = this;\n        return [\n            {\n                data: function (row) {\n                    return row.targetRelease.split('.')[0] + '.x';\n                },\n                visible: false,\n                filter: true,\n            },\n            {\n                data: 'targetRelease',\n                type: 'nimbleos-version',\n                /*\n                 * Order the 'Major Release' and 'Release' columns in tandem\n                 * so that our row grouping works properly\n                 */\n                orderData: [0, 1],\n                render: {\n                    display: function (data, type, row) {\n                        var result = '';\n                        if (row.blacklistEntries.length > 0) {\n                            result += '<span class=\"blacklisted-release\">';\n                            result += '<span class=\"blacklisted-icon fa fa-circle\"></span>';\n                        } else {\n                            result += '<span>';\n                        }\n                        result += truncateRelease(data);\n                        result += '</span>';\n                        result += renderBlackListEntry(row.blacklistEntries);\n                        return result;\n                    },\n                },\n            },\n            {\n                data: 'releaseStatus.description',\n                orderable: false,\n            },\n            {\n                data: function (row) {\n                    return upgradePathsTemplate({\n                        upgradePaths: row.shortestUpgradePaths,\n                        targetRelease: row.targetRelease,\n                        blacklistedReleases: self.blacklistedReleases,\n                        truncateRelease: truncateRelease,\n                    });\n                },\n                orderable: false,\n            },\n        ];\n    },\n\n    onRender: function () {\n        var self = this;\n\n        this.$el.tooltip({\n            html: true,\n            selector: '.blacklisted-icon',\n            title: _.partial(this.renderTooltip, this),\n        });\n\n        this.grid = new GridView({\n            model: new BulkLoadGridModel({\n                url: this.api()\n                    .array(this.model.get('serialNumber'))\n                    .segment('releaseManagement/upgrades')\n                    .addQuery({ allowedReleaseStatus: ['GA', 'LTSR'] }),\n                columns: this.columns(),\n                showFilters: false,\n                emptyLabel: 'No software upgrades found',\n                pageLength: 10,\n                groupBy: function (api) {\n                    var releaseColumn = 1;\n                    var majorReleaseColumn = 0;\n                    var order = api.order();\n                    // Only group if table is ordered by 'Release' column\n                    return (order.length > 0 && order[0][0] == releaseColumn) ? majorReleaseColumn : null;\n                },\n                dataSrc: function (response) {\n                    self.blacklistedReleases = _.reduce(response.data, function (memo, upgrade) {\n                        if (upgrade.blacklistEntries.length > 0) {\n                            memo[upgrade.targetRelease] = true;\n                        }\n\n                        return memo;\n                    }, {});\n\n                    return response.data;\n                },\n            }),\n            id: 'upgrades-grid',\n            tableTemplate: this.$('.grid-content').html(),\n            dataTableOptions: {\n                dom: '<\"H\">t<\"F\">',\n                columnDefs: [\n                    { width: '50%', targets: 1 },\n                ],\n            },\n            sort: ['Release'],\n        });\n        this.listenTo(this.grid, 'init', this.onGridLoaded);\n\n        this.gridRegion.show(this.grid);\n    },\n\n    onGridLoaded: function () {\n        var model = this.model;\n\n        if (!_.isEmpty(this.blacklistedReleases)) {\n            this.$('.software-upgrades-legend').show();\n        }\n\n        this.$('ul.upgrade-paths').each(function () {\n            var $list = $(this);\n            var $morePaths = $list.children('li:gt(0)').hide();\n\n            if ($morePaths.length > 0) {\n                $('<a href=\"#\">More</a>').click(function (event) {\n                    event.preventDefault();\n                    var $link = $(this);\n\n                    $morePaths.slideToggle();\n                    $link.text($link.text() == 'More' ? 'Less' : 'More');\n                })\n                    .appendTo($('<li></li>').appendTo($list));\n            }\n        });\n    },\n\n    renderTooltip: function (self) {\n        return blacklistTooltipTemplate({\n            array: self.model.get('hostname'),\n            release: $(this).closest('.blacklisted-release').text(),\n        });\n    },\n});\n","const _ = require('underscore');\nvar BaseGridModel = require('app/models/grid/BaseGridModel');\n\nmodule.exports = BaseGridModel.extend({\n\n    defaults: _.defaults({\n        data: [],\n    }, BaseGridModel.prototype.defaults),\n\n    validate: function (attrs, options) {\n\n        if (!attrs.data) {\n            return '\"data\" array must be non-null (it can be an empty array however).';\n        }\n\n        return BaseGridModel.prototype.validate.apply(this, arguments);\n    },\n});\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('ARRAYS_COLLECTION');\n\nexport const ARRAYS_LIST_FETCH = ns('LIST_FETCH');\nexport const ARRAYS_CSV_FETCH = ns('CSV_FETCH');\nexport const RESET = ns('RESET');\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\n\nimport {\n    ARRAY_FETCH,\n    ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('array'),\n    ...getInitialState('arrayHardwareUpgradeRecommendations'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: ARRAY_FETCH, stateKey: 'array' }),\n    ...createReducersForAction({ type: ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH, stateKey: 'arrayHardwareUpgradeRecommendations' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).arrayDetail;\nexport const arraySelector = createSelector(baseSelector, 'array');\nexport const arrayHardwareUpgradeRecommendationSelector = createSelector(baseSelector, 'arrayHardwareUpgradeRecommendations');\n","import { createSelector } from 'reselect';\nimport { last, compact } from 'underscore';\n\nexport const poolContextSelector = state => state.capacityReport.poolContext;\n\nexport const isLoadingSelector = (state) => {\n    const { loadingTimeSeries, loadingFolders, loadingApplications, loadingSummary } = poolContextSelector(state);\n    return loadingTimeSeries || loadingApplications || loadingFolders || loadingSummary;\n};\n\nconst aliasPoolName = (groupName, groupLeaderHostName, groupLeaderSerialNumber) => {\n    const DEFAULT = 'default';\n    if (groupName && groupName !== DEFAULT) {\n        return groupName;\n    } else if (groupLeaderHostName && groupLeaderHostName !== DEFAULT) {\n        return groupLeaderHostName;\n    }\n\n    return groupLeaderSerialNumber;\n};\n\nconst stateTopPoolsTimeSeriesSelector = state => poolContextSelector(state).topPoolsTimeSeries;\nexport const topPoolsSelector = createSelector(\n    stateTopPoolsTimeSeriesSelector,\n    (topPools) => {\n        if (!topPools) {\n            return undefined;\n        }\n        const translated = Object.values(topPools)\n            .map((timeSeries) => {\n                let pool;\n                if (timeSeries[0]['Pool UID'] === '0') {\n                    pool = {\n                        'Pool Name': 'Other Pools',\n                    };\n                } else {\n                    [pool] = timeSeries;\n                }\n\n                if (!pool) {\n                    return undefined;\n                }\n\n                let poolName = pool['Pool Name'];\n                if (poolName === 'default') {\n                    poolName += ` in ${aliasPoolName(pool.groupName, pool.arrayHostName, pool.arraySn)}`;\n                }\n\n                return {\n                    timeSeries,\n                    poolName,\n                    poolUid: pool['Pool UID'],\n                    currentUsage: last(timeSeries).used,\n                };\n            });\n        return compact(translated)\n            .sort((a, b) => (a.currentUsage < b.currentUsage || a.poolUid === 0 ? 1 : -1));\n    }\n);\n","import { createSelector } from 'reselect';\nimport { values } from 'underscore';\nimport * as types from '../actions/constants';\nimport { USER_CONTEXT_CHANGED } from '../../user/constants';\n\nconst initialState = {\n    error: false,\n    loaded: false,\n    raw: null,\n    value: null,\n};\n\nfunction replaceCases(state, { payload }) {\n    return {\n        error: false,\n        loaded: true,\n        raw: payload,\n    };\n}\n\nfunction updateCaseDetails(state, { payload: { caseData, commentsData, attachmentsData, rmaLabelsData } }) {\n    return {\n        error: false,\n        loaded: true,\n        raw: {\n            ...state.raw,\n            [caseData.id]: {\n                ...caseData,\n                comments: commentsData,\n                attachments: attachmentsData,\n                rmaLabels: rmaLabelsData,\n            },\n        },\n    };\n}\n\nfunction addCommentToCase(state, { payload: comment }) {\n    const { parentId: caseId } = comment;\n    const parentCase = state.raw[caseId];\n    const comments = Array.isArray(parentCase.comments) ? parentCase.comments : [];\n    const newParentCase = { ...parentCase, comments: comments.concat(comment) };\n\n    return {\n        error: false,\n        loaded: true,\n        raw: {\n            ...state.raw,\n            [caseId]: newParentCase,\n        },\n    };\n}\n\nfunction addAttachmentToCase(state, { payload: attachment }) {\n    const { ParentId: caseId } = attachment;\n    const parentCase = state.raw[caseId];\n    const attachments = Array.isArray(parentCase.attachments) ? parentCase.attachments : [];\n    const newParentCase = { ...parentCase, attachments: attachments.concat(attachment) };\n\n    return {\n        error: false,\n        loaded: true,\n        raw: {\n            ...state.raw,\n            [caseId]: newParentCase,\n        },\n    };\n}\n\nexport default function supportReducer(state = initialState, action) {\n    switch (action.type) {\n    case types.FETCH_CASE_HEADERS_OK:\n        return replaceCases(state, action);\n\n    case types.FETCH_CASE_DETAIL_OK:\n    case types.POST_CASE_OK:\n    case types.POST_CASE_RESOLUTION_OK:\n        return updateCaseDetails(state, action);\n\n    case types.POST_CASE_ATTACHMENT_OK:\n        return addAttachmentToCase(state, action);\n\n    case types.POST_CASE_COMMENT_OK:\n        return addCommentToCase(state, action);\n\n    case types.FETCH_CASE_COMMENTS_OK:\n    case types.FETCH_CASE_ATTACHMENTS_OK:\n        break;\n\n    case types.FETCH_CASE_HEADERS_FAIL:\n        return { error: true };\n\n    case USER_CONTEXT_CHANGED:\n    case types.FETCH_CASE_DETAIL_FAIL:\n    case types.FETCH_CASE_COMMENTS_FAIL:\n    case types.FETCH_CASE_ATTACHMENTS_FAIL:\n        return initialState;\n\n    default:\n        return state;\n    }\n\n    return state;\n}\n\n// Selectors\nconst baseCasesSelector = state => state.supportTab.cases;\n\nexport const fetchCasesFailedSelector = (state) => {\n    const cases = baseCasesSelector(state);\n    return !!(cases && cases.error);\n};\n\nexport const caseListSelector = createSelector(baseCasesSelector, fetchCasesFailedSelector, (cases) => {\n    let caseList = null;\n    if (cases.loaded) {\n        caseList = values(cases.raw);\n    }\n\n    return {\n        error: cases.error,\n        loaded: cases.loaded,\n        raw: cases.raw,\n        value: caseList,\n    };\n});\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport Request from '../../services/Request';\nimport { FETCH_BULLETINS, RESET } from './constants';\n\nconst fetchBulletins = ({ all }) => async (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(FETCH_BULLETINS, dispatch);\n    dispatchStart();\n\n    try {\n        const response = await new Request()\n            .slash('user', 'banners')\n            .query({ all })\n            .get();\n\n        dispatchSuccess(response.data);\n        return response.data;\n    } catch (ex) {\n        dispatchError(ex);\n        return null;\n    }\n};\n\nexport const fetchActiveBulletins = () => fetchBulletins({ all: false });\nexport const fetchAllBulletins = () => fetchBulletins({ all: true });\nexport const reset = () => ({ type: RESET });\n","import reducer, { userSelector, permissionsSelector, tenantSelector } from './reducer';\nimport {\n    AUTHORITIES,\n    PRIVILEGES,\n    PERMISSION_TARGET,\n    nimbleTenantAdminAccess,\n    nimbleTenantPrimaryAccess,\n    nimbleThirdPartyPermissionRequestAccess,\n} from './constants';\nimport { AuthorizationEvaluator } from './util';\n\nexport {\n    reducer,\n    permissionsSelector,\n    nimbleTenantPrimaryAccess,\n    nimbleThirdPartyPermissionRequestAccess,\n    tenantSelector,\n    userSelector,\n    AUTHORITIES,\n    PRIVILEGES,\n    PERMISSION_TARGET,\n    AuthorizationEvaluator,\n    nimbleTenantAdminAccess,\n};\n","/* eslint-disable import/prefer-default-export */\nexport const COLORS = {\n    NORMAL: '#000',\n    ERROR: '#f04953', // text-danger color\n};\n\nexport const DEFAULT_ICON_HEIGHT = '1.25em';\nexport const DEFAULT_ICON_WIDTH = DEFAULT_ICON_HEIGHT;\n","/* eslint max-len: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { COLORS, DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\n\nconst ArrayFan = ({ className, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT, status }) => {\n    const fillColor = status ? COLORS.NORMAL : COLORS.ERROR;\n    return (\n        <svg viewBox=\"0 0 90 90\" width={width} height={height} className={className}>\n            <g id=\"fan\" transform=\"scale(1.7),translate(0,3)\">\n                <path\n                    fill={fillColor}\n                    d=\"M46.429,15.001c-1.249-4.899-6.234-7.862-11.138-6.616C31.58,9.329,24.802,13.482,22.27,17.57 c-0.104-0.035-0.206-0.064-0.312-0.096C21.954,12.666,18.42,5.588,15.781,2.83C12.284-0.826,6.485-0.958,2.828,2.54 c-3.655,3.497-3.784,9.295-0.289,12.951c2.47,2.583,8.676,6.11,13.397,6.735c0.016,0.477,0.098,0.938,0.242,1.371 c-3.763,2.932-7.326,9.197-8.131,12.697c-1.133,4.933,1.945,9.846,6.878,10.979c4.932,1.133,9.847-1.943,10.979-6.876 c0.805-3.502,0.332-10.694-1.776-14.976c0.223-0.225,0.42-0.475,0.595-0.741c4.319,2.037,11.584,2.351,15.087,1.458 C44.715,24.893,47.675,19.904,46.429,15.001z M20.81,26.588c-2.455,0-4.453-1.996-4.453-4.451c0-2.457,1.998-4.452,4.453-4.452 c2.457,0,4.455,1.996,4.455,4.452C25.265,24.592,23.267,26.588,20.81,26.588z\"\n                />\n                <path\n                    fill={fillColor}\n                    d=\"M20.81,20.334c-0.991,0-1.801,0.807-1.801,1.803c0,0.992,0.81,1.802,1.801,1.802c0.994,0,1.803-0.81,1.803-1.802 C22.611,21.141,21.804,20.334,20.81,20.334z\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nArrayFan.propTypes = {\n    /**\n     * True - If the Fan is working fine\n     * False - If there is any issue\n     */\n    status: PropTypes.bool,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ArrayFan;\n","/* eslint max-len: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { COLORS, DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\n\nconst ArrayPowerSupply = ({ className, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT, status }) => {\n    const fillColor = status ? COLORS.NORMAL : COLORS.ERROR;\n    return (\n        <svg viewBox=\"0 0 90 90\" width={width} height={height} className={className}>\n            <g id=\"powercable\" transform=\"scale(1.5)\">\n                <path\n                    fill={fillColor}\n                    d=\"M45,26.439v4.825c3.514-0.091,8.024-0.204,8.896,2.798c0.86,2.967-3.565,7.263-5.158,9.395 c-2.908,3.891-8.727,11.661-2.111,15.132c2.834,1.487,5.598-2.683,2.746-4.179c-2.618-1.374,8.535-14.756,9.404-17.756 C61.435,27.486,51.564,26.841,45,26.439z\"\n                />\n                <path\n                    fill={fillColor}\n                    d=\"M44,38.929V19C43.497,17.873,30.402,7.354,28.948,6.995L21,7v43h7.973C30.576,49.619,43.234,40.286,44,38.929z\"\n                />\n                <rect fill={fillColor} x=\"5\" y=\"17\" width=\"12\" height=\"3\" />\n                <rect fill={fillColor} x=\"5\" y=\"37\" width=\"12\" height=\"3\" />\n                <polygon fill={fillColor} points=\"20,41 20,36 20,21 20,16 20,6 18,6 18,8 18,48 18,51 20,51\" />\n            </g>\n        </svg>\n    );\n};\n\nArrayPowerSupply.propTypes = {\n    /**\n     * True - If the POWER SUPPLY is working fine\n     * False - If there is any issue\n     */\n    status: PropTypes.bool,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ArrayPowerSupply;\n","/* eslint max-len: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { COLORS, DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\n\nconst ArraySSD = ({ className, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT, status }) => {\n    const fillColor = status ? COLORS.NORMAL : COLORS.ERROR;\n\n    return (\n        <svg viewBox=\"0 0 90 90\" width={width} height={height} className={className}>\n            <g id=\"ssd\">\n                <path\n                    fill={fillColor}\n                    d=\"M79.954,8.74H20.045c-0.857,0-1.554,0.695-1.554,1.554v78.192c0,0.858,0.696,1.554,1.554,1.554h59.909 c0.858,0,1.555-0.695,1.555-1.554V10.294C81.509,9.436,80.813,8.74,79.954,8.74z M64.626,40.855h7.916v2.328h-7.916V40.855z M64.626,47.994h7.916v2.328h-7.916V47.994z M64.626,55.521h7.916v2.328h-7.916V55.521z M56.598,26.848h2.329v7.916h-2.329V26.848z M49.461,26.848h2.326v7.916h-2.326V26.848z M41.931,26.848h2.33v7.916h-2.33V26.848z M24.702,11.459 c2.002,0,3.625,1.623,3.625,3.625s-1.623,3.625-3.625,3.625s-3.625-1.623-3.625-3.625S22.7,11.459,24.702,11.459z M24.702,87.063 c-2.002,0-3.625-1.623-3.625-3.625s1.623-3.625,3.625-3.625s3.625,1.623,3.625,3.625S26.704,87.063,24.702,87.063z M35.373,57.85 h-7.915v-2.328h7.915V57.85z M35.373,50.322h-7.915v-2.328h7.915V50.322z M35.373,43.184h-7.915v-2.328h7.915V43.184z M42.378,89.25 h-2.625V84.5h2.625V89.25z M48.128,89.25h-2.625V84.5h2.625V89.25z M53.878,89.25h-2.625V84.5h2.625V89.25z M59.69,89.25h-2.625 V84.5h2.625V89.25z M65.44,89.25h-2.625V84.5h2.625V89.25z M68.657,82.642H37.032v-2h29.625V68.609l-5.315-6.84 c-0.116,0.022-0.236,0.036-0.359,0.036H39.876c-1.028,0-1.863-0.833-1.863-1.862V38.836c0-1.027,0.835-1.862,1.863-1.862h21.106 c1.029,0,1.862,0.835,1.862,1.862v21.107c0,0.148-0.021,0.291-0.055,0.43l5.867,7.551V82.642z M41.931,71.932v-7.916h2.33v7.916 H41.931z M49.461,71.932v-7.916h2.326v7.916H49.461z M56.598,71.932v-7.916h2.329v7.916H56.598z M75.968,87.063 c-2.002,0-3.625-1.623-3.625-3.625s1.623-3.625,3.625-3.625s3.625,1.623,3.625,3.625S77.97,87.063,75.968,87.063z M75.968,18.709 c-2.002,0-3.625-1.623-3.625-3.625s1.623-3.625,3.625-3.625s3.625,1.623,3.625,3.625S77.97,18.709,75.968,18.709z\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nArraySSD.propTypes = {\n    /**\n     * True - If the all SSD's are working fine\n     * False - If there is any issue\n     */\n    status: PropTypes.bool,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ArraySSD;\n","/* eslint max-len: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { COLORS, DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\n\nconst ArrayHDD = ({ className, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT, status }) => (\n    <svg viewBox=\"0 0 90 90\" width={width} height={height} className={className}>\n        <g id=\"hdd\">\n            <path\n                fill={status ? COLORS.NORMAL : COLORS.ERROR}\n                d=\"M50,42.751c-1.963,0-3.555-1.592-3.555-3.555c0-1.964,1.592-3.555,3.555-3.555s3.555,1.591,3.555,3.555 C53.555,41.159,51.963,42.751,50,42.751z M81.508,10.904v78.192c0,0.858-0.696,1.554-1.554,1.554H20.045 c-0.858,0-1.554-0.695-1.554-1.554V10.904c0-0.858,0.696-1.554,1.554-1.554h59.909C80.813,9.351,81.508,10.046,81.508,10.904z M21.078,15.694c0,2.002,1.624,3.625,3.625,3.625c2.002,0,3.625-1.623,3.625-3.625s-1.623-3.625-3.625-3.625 C22.701,12.069,21.078,13.692,21.078,15.694z M28.328,84.048c0-2.002-1.623-3.625-3.625-3.625c-2.001,0-3.625,1.623-3.625,3.625 s1.624,3.625,3.625,3.625C26.705,87.673,28.328,86.05,28.328,84.048z M29.579,72.267c2.789,0,5.049-2.26,5.049-5.049 c0-2.788-2.26-5.049-5.049-5.049s-5.049,2.261-5.049,5.049C24.53,70.007,26.79,72.267,29.579,72.267z M67.456,81.459H32.471v5.696 h34.985V81.459z M68.637,77.899c1.971,0,3.824-0.769,5.218-2.161c2.876-2.877,2.877-7.558-0.001-10.438 c-0.422-0.421-0.902-0.793-1.43-1.109l-8.642-6.538c5.772-4.241,9.521-11.075,9.521-18.786c0-12.869-10.433-23.303-23.302-23.303 S26.698,25.998,26.698,38.867S37.131,62.169,50,62.169c1.284,0,2.541-0.107,3.768-0.308l8.265,11.94 c0.359,0.724,0.825,1.375,1.387,1.937C64.813,77.131,66.666,77.899,68.637,77.899z M79.593,84.048c0-2.002-1.623-3.625-3.625-3.625 s-3.625,1.623-3.625,3.625s1.623,3.625,3.625,3.625S79.593,86.05,79.593,84.048z M79.593,15.694c0-2.002-1.623-3.625-3.625-3.625 s-3.625,1.623-3.625,3.625s1.623,3.625,3.625,3.625S79.593,17.696,79.593,15.694z M52.549,59.222 c0.101,0.145,0.117,0.332,0.043,0.493c-0.074,0.16-0.227,0.27-0.402,0.288c-0.726,0.076-1.462,0.114-2.189,0.114 c-11.536,0-20.921-9.385-20.921-20.921S38.464,18.274,50,18.274s20.921,9.386,20.921,20.922c0,6.867-3.379,13.303-9.039,17.217 c-0.177,0.124-0.413,0.118-0.586-0.013L47.944,46.298c-0.06-0.045-0.124-0.08-0.187-0.115c-0.105-0.06-0.182-0.153-0.224-0.26 c-0.071,0.036-0.153,0.063-0.238,0.056c-0.034-0.002-0.071-0.003-0.107-0.009c-0.584-0.116-1.192,0.062-1.615,0.467 c-0.652,0.626-0.752,1.62-0.238,2.363L52.549,59.222z M48.138,45.262c0.604,0.186,1.231,0.279,1.862,0.279 c3.498,0,6.344-2.846,6.344-6.344S53.498,32.854,50,32.854s-6.344,2.846-6.344,6.344c0,2.507,1.475,4.774,3.764,5.795 c0.16,0.038,0.291,0.152,0.35,0.304c0.069-0.036,0.146-0.056,0.225-0.056C48.042,45.24,48.09,45.247,48.138,45.262z M51.234,59.079 l-6.722-9.711c-0.795-1.148-0.64-2.686,0.369-3.653c0.246-0.236,0.529-0.422,0.835-0.553c-1.896-1.362-3.061-3.568-3.061-5.965 c0-4.05,3.294-7.344,7.344-7.344s7.344,3.294,7.344,7.344S54.05,46.541,50,46.541c-0.026,0-0.052,0-0.078,0l11.687,8.842 c5.212-3.744,8.313-9.769,8.313-16.187c0-10.985-8.937-19.922-19.921-19.922s-19.921,8.937-19.921,19.922 c0,10.984,8.937,19.921,19.921,19.921C50.41,59.117,50.822,59.104,51.234,59.079z M72.401,67.133 c-0.329-0.328-0.695-0.598-1.08-0.817L47.034,47.94L64.247,72.81c0.244,0.529,0.578,1.027,1.014,1.464 c1.971,1.971,5.168,1.971,7.14,0C74.373,72.302,74.373,69.105,72.401,67.133z M29.579,63.991c-1.783,0-3.227,1.444-3.227,3.227 c0,1.783,1.444,3.228,3.227,3.228s3.227-1.444,3.227-3.228C32.806,65.436,31.361,63.991,29.579,63.991z\"\n            />\n        </g>\n    </svg>\n);\n\nArrayHDD.propTypes = {\n    /**\n     * True - If the all HDD's are working fine\n     * False - If there is any issue\n     */\n    status: PropTypes.bool,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ArrayHDD;\n","/* eslint max-len: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { COLORS, DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\n\nconst ArrayController = ({ className, width = DEFAULT_ICON_WIDTH, height = DEFAULT_ICON_HEIGHT, status }) => {\n    const fillColor = status ? COLORS.NORMAL : COLORS.ERROR;\n    return (\n        <svg viewBox=\"0 0 90 90\" width={width} height={height} className={className}>\n            <circle cx=\"45\" cy=\"45\" r=\"45\" fill={fillColor} />\n        </svg>\n    );\n};\n\nArrayController.propTypes = {\n    /**\n     * True - If the Controller is working fine\n     * False - If there is any issue\n     */\n    status: PropTypes.bool,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ArrayController;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { DEFAULT_ICON_HEIGHT, DEFAULT_ICON_WIDTH } from './constants';\nimport SharePointIcon from './icons/nmbl-sharepoint-app-category.png';\nimport VirtualServerIcon from './icons/nmbl-virtual-server-app-category.png';\nimport VirtualDesktopIcon from './icons/nmbl-virtual-desktop-app-category.png';\nimport FileServerIcon from './icons/nmbl-file-server-app-category.png';\nimport OtherIcon from './icons/nmbl-other-app-category.png';\nimport UnassignedIcon from './icons/nmbl-unassigned-app-category.png';\nimport RemoteReplica from './icons/nmbl-remote-replica.png';\nimport LocalReplication from './icons/nmbl-local-replication.png';\nimport ArrayFan from './ArrayFan';\nimport ArrayPowerSupply from './ArrayPowerSupply';\nimport ArraySSD from './ArraySSD';\nimport ArrayHDD from './ArrayHDD';\nimport ArrayController from './ArrayController';\nimport ArrayHeartbeatDown from '../../../../../images/nmbl-dashboard-heartbeat-down.png';\nimport ArrayHeartbeatUp from '../../../../../images/nmbl-dashboard-heartbeat-up.png';\nimport ArrayAsupDown from '../../../../../images/nmbl-dashboard-asup-down.png';\nimport ArrayAsupUp from '../../../../../images/nmbl-dashboard-asup-up.png';\n\nconst ImageIcon = ({ className, srcIcon, altText, height, width }) => (\n    <img\n        style={{ height: height || DEFAULT_ICON_HEIGHT, width: width || DEFAULT_ICON_WIDTH }}\n        src={srcIcon}\n        alt={altText}\n        className={className}\n    />\n);\n\nImageIcon.propTypes = {\n    srcIcon: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    altText: PropTypes.string,\n};\n\nexport const APP_CATEGORY_ICONS = {\n    EXCHANGE: 'Exchange',\n    SHAREPOINT: 'SharePoint',\n    VIRTUAL_SERVER: 'Virtual Server',\n    VIRTUAL_DESKTOP: 'Virtual Desktop',\n    FILE_SERVER: 'File Server',\n    OTHER: 'Other',\n    MULTIPLE: 'Multiple',\n    NONE: 'None',\n    UNASSIGNED: 'Unassigned',\n    ORACLE: 'Oracle',\n    DB2: 'DB2',\n    SQL_SERVER: 'SQL Server',\n};\n\nexport const ICONS = Object.assign({}, APP_CATEGORY_ICONS, {\n    FOLDER: 'Folder',\n    SPACER: 'Spacer', // Adds Empty Space instead of icon\n    REMOTE_PROTECTION: 'Remote',\n    LOCAL_PROTECTION: 'Local Only',\n    POOL: 'Pool',\n    ARRAY_FAN: 'Array Fan',\n    ARRAY_POWER_SUPPLY: 'Array Power Supply',\n    ARRAY_SSD: 'Array SSD',\n    ARRAY_HDD: 'Array HDD',\n    ARRAY_CONTROLLER: 'Array Controller',\n    ARRAY_HEARTBEAT_UP: 'Array Heartbeat Up',\n    ARRAY_HEARTBEAT_DOWN: 'Array Heartbeat Down',\n    ARRAY_ASUP_UP: 'Array Asup Up',\n    ARRAY_ASUP_DOWN: 'Array Asup Down',\n});\n\n// Source:\n// https://code.eng.nimblestorage.com/browse/~br=default/gui/nmbl-gui/app/utils/icon-utils.js?r=618ee23fa4ef1024e91a96c0383b71f49368ff03\nconst database = ({ className }) => <span className={classnames('fa fa-database', className)} />;\nconst icons = {\n    [ICONS.FOLDER]: ({ className }) => <span className={classnames('fa fa-folder-o', className)} />,\n    [ICONS.SPACER]: ({ className }) => <span className={classnames('fa fa-fw', className)} />, // Adds empty space..useful in aligning icons in lists\n    [ICONS.EXCHANGE]: ({ className }) => <span className={classnames('fa fa-envelope-o', className)} />,\n    [ICONS.SHAREPOINT]: ({ className }) => <ImageIcon srcIcon={SharePointIcon} alt=\"sharepoint\" className={className} />,\n    [ICONS.VIRTUAL_SERVER]: ({ className }) => <ImageIcon srcIcon={VirtualServerIcon} alt=\"virtual server\" className={className} />,\n    [ICONS.VIRTUAL_DESKTOP]: ({ className }) => <ImageIcon srcIcon={VirtualDesktopIcon} alt=\"virtual desktop\" className={className} />,\n    [ICONS.FILE_SERVER]: ({ className }) => <ImageIcon srcIcon={FileServerIcon} alt=\"file server\" className={className} />,\n    [ICONS.OTHER]: ({ className }) => <ImageIcon srcIcon={OtherIcon} alt=\"other\" className={className} />,\n    [ICONS.MULTIPLE]: ({ className }) => <span className={classnames('fa fa-clone', className)} />,\n    [ICONS.NONE]: ({ className }) => <span className={className} />,\n    [ICONS.POOL]: ({ className }) => <span className={classnames('fa fa-th', className)} />,\n    [ICONS.UNASSIGNED]: ({ className }) => <ImageIcon srcIcon={UnassignedIcon} alt=\"unassigned\" className={className} />,\n    [ICONS.ORACLE]: database,\n    [ICONS.DB2]: database,\n    [ICONS.SQL_SERVER]: database,\n    [ICONS.LOCAL_PROTECTION]: ({ className }) => <ImageIcon srcIcon={LocalReplication} alt=\"Local Only\" className={className} />,\n    [ICONS.REMOTE_PROTECTION]: ({ className }) => <ImageIcon srcIcon={RemoteReplica} alt=\"Remote\" className={className} />,\n    [ICONS.ARRAY_FAN]: ({ className, ...props }) => <ArrayFan className={className} {...props} />,\n    [ICONS.ARRAY_POWER_SUPPLY]: ({ className, ...props }) => <ArrayPowerSupply className={className} {...props} />,\n    [ICONS.ARRAY_SSD]: ({ className, ...props }) => <ArraySSD className={className} {...props} />,\n    [ICONS.ARRAY_HDD]: ({ className, ...props }) => <ArrayHDD className={className} {...props} />,\n    [ICONS.ARRAY_CONTROLLER]: ({ className, ...props }) => <ArrayController className={className} {...props} />,\n    [ICONS.ARRAY_HEARTBEAT_UP]: ({ className, ...props }) => <ImageIcon srcIcon={ArrayHeartbeatUp} alt=\"Heartbeat Up\" className={className} {...props} />,\n    [ICONS.ARRAY_HEARTBEAT_DOWN]: ({ className, ...props }) => <ImageIcon srcIcon={ArrayHeartbeatDown} alt=\"Heartbeat Down\" className={className} {...props} />,\n    [ICONS.ARRAY_ASUP_UP]: ({ className, ...props }) => <ImageIcon srcIcon={ArrayAsupUp} alt=\"Asups Recieved\" className={className} {...props} />,\n    [ICONS.ARRAY_ASUP_DOWN]: ({ className, ...props }) =>\n        <ImageIcon srcIcon={ArrayAsupDown} alt=\"Asups Not Recieved or Delayed\" className={className} {...props} />,\n};\n\nconst NimbleIcon = ({ className, name, ...props }) => {\n    const Component = icons[name];\n    return Component !== undefined ? <Component className={className} {...props} /> : null;\n};\n\nNimbleIcon.propTypes = {\n    name: PropTypes.string.isRequired,\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nNimbleIcon.defaultProps = {\n    name: 'Unassigned',\n};\n\nNimbleIcon.ICONS = ICONS;\nNimbleIcon.APP_CATEGORY_ICONS = APP_CATEGORY_ICONS;\n\nexport default NimbleIcon;\n","import { FillPattern } from '@infosight/elmer/dist/charts/highcharts';\nimport { CHART_COLORS } from '../../../util/chartColors';\n\nconst unusedReservePattern = new FillPattern('unusedReservePattern')\n    .svgPath(FillPattern.patterns[0])\n    .strokeWidth(1)\n    .strokeColor(CHART_COLORS.ununsedReservedColor)\n    .dimensions(5)\n    .fillColor(CHART_COLORS.plotBandGrey);\n\nexport default ({ height, width, data }) => ({\n    chart: {\n        type: 'pie',\n        spacingTop: 0,\n        spacingBottom: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        marginTop: -10,\n        marginRight: 0,\n        marginBottom: -10,\n        marginLeft: -20,\n        height,\n        width,\n    },\n    defs: {\n        patterns: [unusedReservePattern],\n    },\n    title: false,\n    plotOptions: {\n        pie: {\n            shadow: false,\n            dataLabels: {\n                enabled: false,\n            },\n            center: [height / 2, '50%'],\n        },\n    },\n    tooltip: {\n        enabled: false,\n    },\n    series: [{\n        name: 'Series',\n        data,\n        showInLegend: true,\n        size: '100%',\n        innerSize: '85%',\n        borderWidth: 0,\n        states: {\n            hover: {\n                enabled: false,\n            },\n        },\n    }],\n});\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport { isNumber } from 'underscore';\nimport chartOptions from './chartOptions';\nimport { CHART_COLORS } from '../../../util/chartColors';\n\nexport class Donut extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    data() {\n        const { usedBytes, freeBytes, unusedReserveBytes } = this.props;\n        const data = [{\n            name: 'Total Usage',\n            y: usedBytes,\n            color: CHART_COLORS.teal,\n        }];\n\n        if (unusedReserveBytes && isNumber(unusedReserveBytes)) {\n            data.push({\n                name: 'Unused Reserve',\n                y: unusedReserveBytes,\n                color: 'url(#unusedReservePattern)',\n            });\n        }\n\n        data.push({\n            name: 'Free Space',\n            y: freeBytes,\n            color: CHART_COLORS.plotBandGrey,\n        });\n\n        return data;\n    }\n\n    config() {\n        const { usedBytes, freeBytes, containerHeight, containerWidth } = this.props;\n        if (![usedBytes, freeBytes].every(isNumber)) {\n            return null;\n        }\n        return chartOptions({ height: containerHeight, width: containerWidth, data: this.data() });\n    }\n\n    callback(chart) {\n        this.props.callback(chart);\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} callback={this.callback} />}\n            </NoData>\n        );\n    }\n}\n\nDonut.propTypes = {\n    usedBytes: PropTypes.number,\n    freeBytes: PropTypes.number,\n    unusedReserveBytes: PropTypes.number,\n    containerHeight: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n    callback: PropTypes.func,\n};\n\nDonut.defaultProps = {\n    containerHeight: 0,\n    containerWidth: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(Donut);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { isFinite, isUndefined, isNaN } from 'underscore';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport Legend from '@infosight/elmer/dist/components/Legend';\nimport classnames from 'classnames/bind';\nimport numeral from 'numeral';\nimport DataUsageDonut from './Donut';\n\nimport style from './styles.scss';\n\nconst cx = classnames.bind(style);\nconst BYTE_FORMAT = '0.00 ib';\n\nconst isValidNumber = number => !isNaN(number) && !isUndefined(number) && isFinite(number);\n\nconst DonutTitle = ({ usedBytes, allocatedBytes, growthPercent, warningThreshold }) => {\n    const percentUsed = 100 * (usedBytes / allocatedBytes);\n\n    // Data from backend can be null or undefined\n    if (!isValidNumber(percentUsed)) {\n        return null;\n    }\n\n    const percentUsedClass = percentUsed > warningThreshold ? 'percentUsedWarning' : 'percentUsed';\n\n    return (\n        <div className={classnames('flex-container align-middle align-center', cx('donut-title'))} >\n            <span className={cx(percentUsedClass)}>{numeral(percentUsed).format('0')}%</span>\n            <div className={cx('percentageGrowth')}>\n                <PercentGrowth value={growthPercent} isPercent showCaret />\n            </div>\n        </div>\n    );\n};\n\nDonutTitle.propTypes = {\n    usedBytes: PropTypes.number,\n    allocatedBytes: PropTypes.number,\n    growthPercent: PropTypes.number,\n    warningThreshold: PropTypes.number,\n};\n\nclass DonutChart extends PureComponent {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = {};\n    }\n\n    getSeriesInfo(chart) {\n        const chartData = chart && chart.series[0].data;\n        const legendConfig = chartData && chartData.map(datapoint => ({\n            id: datapoint.options.name,\n            label: datapoint.options.name,\n            value: numeral(datapoint.options.y).format(BYTE_FORMAT),\n            color: datapoint.options.name === 'Unused Reserve' ? '' : datapoint.options.color,\n            iconClassName: datapoint.options.name === 'Unused Reserve' ? cx('striped') : '',\n            icon: true,\n        })).concat({\n            id: 'allocatedBytes',\n            label: <strong>Total Capacity</strong>,\n            value: <strong>{numeral(this.props.allocatedBytes).format(BYTE_FORMAT)}</strong>,\n            color: 'transparent',\n            icon: true,\n        });\n\n        this.setState({ legendConfig });\n    }\n\n    render() {\n        return (\n            <div className=\"row expanded align-middle\">\n                {/* TODO Replaced class=\"column\" on these two element with the padding for IE11 */}\n                <div className={classnames('shrink medium-unstack', cx('donut'))} style={{ paddingRight: '0.5em' }}>\n                    <div className={cx('donut-pie')}>\n                        <DataUsageDonut {...this.props} callback={this.getSeriesInfo} />\n                    </div>\n                    <DonutTitle {...this.props} />\n                </div>\n                <div className=\"medium-unstack\">\n                    <Legend items={this.state.legendConfig} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDonutChart.propTypes = {\n    /* eslint-disable react/no-unused-prop-types */\n    allocatedBytes: PropTypes.number,\n    usedBytes: PropTypes.number,\n    freeBytes: PropTypes.number,\n    unusedReserveBytes: PropTypes.number,\n    growthPercent: PropTypes.number,\n    warningThreshold: PropTypes.number,\n};\n\nDonutChart.propTypes = {\n    warningThreshold: 100, // i.e. by default there is no warning threshold\n};\n\nexport default DonutChart;\n","// TODO: Make it more reusable and move it to elmer\nimport DataUsageDonutChart from './DonutChart';\n\nexport default DataUsageDonutChart;\n","// import { successType } from './actionTypeGenerators';\nimport { getSuccessActionType } from '@infosight/elmer/dist/utils/redux';\n\n\nfunction getKeys(stateKey) {\n    const baseKey = `${stateKey.charAt(0).toUpperCase()}${stateKey.slice(1)}`;\n\n    return {\n        valueKey: stateKey,\n        loadingKey: `loading${baseKey}`,\n        loadedKey: `loaded${baseKey}`,\n        errorKey: `error${baseKey}`,\n    };\n}\n\nexport default function createItemUpdateReducersForAction({ type, stateKey, matchKey }) {\n    const { loadingKey, loadedKey, errorKey } = getKeys(stateKey);\n\n    return {\n        [getSuccessActionType(type)]: (state, { payload }) => {\n            console.log('createItemUpdateReducersForAction', state, payload);\n            const updatedCollection = [...state[stateKey]];\n\n            const matchIndex = updatedCollection.findIndex(x => x[matchKey] === payload[matchKey]);\n            if (matchIndex !== -1) {\n                updatedCollection[matchIndex] = payload;\n            }\n\n            return {\n                ...state,\n                [stateKey]: updatedCollection,\n                [loadingKey]: false,\n                [loadedKey]: true,\n                [errorKey]: false,\n            };\n        },\n    };\n}\n","import { createReducersForAction, createSelector } from '@infosight/elmer/dist/utils/redux';\nimport createItemUpdateReducersForAction from '../../../store/utils/createItemUpdateReducersForAction';\n\nimport rootState from '../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../user/constants';\nimport {\n    FETCH_ADDRESSES,\n    FETCH_ASSETS,\n    ADD_ADDRESS,\n    EDIT_ADDRESS,\n    SET_DELIVERY_PREFERENCE,\n    VALIDATE_ADDRESS,\n    RESET,\n} from './constants';\n\n\nconst initialState = {\n    addressCollection: null,\n    assetCollection: null,\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: FETCH_ADDRESSES, stateKey: 'addressCollection' }),\n    ...createReducersForAction({ type: FETCH_ASSETS, stateKey: 'assetCollection' }),\n    ...createItemUpdateReducersForAction({ type: ADD_ADDRESS, stateKey: 'addressCollection', matchKey: 'id' }),\n    ...createItemUpdateReducersForAction({ type: EDIT_ADDRESS, stateKey: 'addressCollection', matchKey: 'id' }),\n    ...createItemUpdateReducersForAction({ type: SET_DELIVERY_PREFERENCE, stateKey: 'assetCollection', matchKey: 'id' }),\n    ...createItemUpdateReducersForAction({ type: VALIDATE_ADDRESS, stateKey: 'assetCollection', matchKey: 'id' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state);\n\nexport const addressSelector = createSelector(baseSelector, 'address');\nexport const assetSelector = createSelector(baseSelector, 'asset');\nexport const reset = () => ({ type: RESET });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\n\nconst SavingsDetail = ({ className, name, savings, factor }) => (\n    <tr className={className}>\n        <td className=\"text-secondary\">{name}</td>\n        <td>{savings !== undefined ? numeral(savings).format('0.0 ib') : null}</td>\n        <td className=\"text-right\">\n            {savings === undefined && factor === undefined ? 'N/A' : null}\n            {factor !== undefined ? `${numeral(factor).format('0.0')}X` : null}\n        </td>\n    </tr>\n);\n\nSavingsDetail.propTypes = {\n    name: PropTypes.string.isRequired,\n    savings: PropTypes.number,\n    factor: PropTypes.number,\n};\n\nexport default SavingsDetail;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport { isNumber } from 'underscore';\nimport KeyStatistic from '@infosight/elmer/dist/components/KeyStatistic';\nimport PopoverTrigger from '@infosight/elmer/dist/components/PopoverTrigger';\nimport SavingsDetail from './SavingsDetail';\n\nclass Savings extends Component {\n    renderOverlay() {\n        const {\n            cloneSavings,\n            dedupSavings,\n            compressionSavings,\n            cloneSavingsFactor,\n            dedupSavingsFactor,\n            compressionSavingsFactor,\n        } = this.props;\n\n        return (\n            <table className=\"text-left table-border\">\n                <tbody>\n                    {isNumber(cloneSavings) && <SavingsDetail name=\"Clones\" savings={cloneSavings} factor={cloneSavingsFactor} />}\n                    {isNumber(dedupSavings) && <SavingsDetail name=\"Deduplication\" savings={dedupSavings} factor={dedupSavingsFactor} />}\n                    {isNumber(compressionSavings) && <SavingsDetail name=\"Compression\" savings={compressionSavings} factor={compressionSavingsFactor} />}\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        const isHeadline = this.props.context === 'headline';\n        const WrapperComponent = isHeadline ? KeyStatistic : 'div';\n        const Small = ({ children }) => isHeadline ? <small>{ children }</small> : <span>{ children }</span>; // eslint-disable-line\n\n        const { totalSavings, totalSavingsFactor } = this.props;\n        if (!isNumber(totalSavings)) {\n            return <div>N/A</div>;\n        }\n\n        const [value, unit] = numeral(totalSavings).format('0.0 ib').split(' ');\n\n        const content = (\n            <WrapperComponent>\n                {value} <Small>{ unit || 'B'}</Small> | {numeral(totalSavingsFactor).format('0.0')}<Small>X</Small>\n            </WrapperComponent>\n        );\n\n        if (!totalSavings) {\n            return content;\n        }\n\n        return <PopoverTrigger placement=\"bottom\" popover={this.renderOverlay()} popperProps={{ style: { zIndex: 2 } }}>{content}</PopoverTrigger>;\n    }\n}\n\nSavings.propTypes = {\n    context: PropTypes.oneOf(['headline', 'table']),\n    totalSavings: PropTypes.number,\n    totalSavingsFactor: PropTypes.number,\n    cloneSavings: PropTypes.number,\n    cloneSavingsFactor: PropTypes.number,\n    dedupSavings: PropTypes.number,\n    dedupSavingsFactor: PropTypes.number,\n    compressionSavings: PropTypes.number,\n    compressionSavingsFactor: PropTypes.number,\n};\n\nSavings.defaultProps = {\n    context: 'headline',\n};\n\nexport default Savings;\n","/* eslint-disable prefer-destructuring */\n/**\n * Base path to API\n */\nexport const API_BASE_URL = '/InfoSight/api';\n\n/**\n * Base path of server. Mostly a patch for nimble things like the KCS API proxy and to differentiate nimble and SFRM requests\n */\nexport const BASE_URL = '/InfoSight';\n\nexport const NIMBLE_APP_ID = 'nimble';\n","import { AUTHORITIES, USER_CONTEXT_CHANGED, SET_AUTHORIZATION_EVALUATOR, SET_TENANT, SET_PROFILE, SET_CONFIG } from './constants';\n\nconst initialState = {\n    authorizationEvaluator: null,\n    tenant: null,\n    permissions: null,\n    profile: null,\n    config: {\n        appBaseUrl: '/',\n        minWidthPixels: 1280,\n    },\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [SET_AUTHORIZATION_EVALUATOR]: (state, { payload }) => ({ ...state, authorizationEvaluator: payload }),\n    [SET_TENANT]: (state, { payload }) => ({ ...state, tenant: payload }),\n    [SET_PROFILE]: (state, { payload }) => ({ ...state, profile: payload }),\n    [SET_CONFIG]: (state, { payload }) => ({ ...state, config: payload }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\n// Selectors\nconst baseSelector = state => state.user;\nexport const authorizationEvaluatorSelector = state => baseSelector(state).authorizationEvaluator;\nexport const tenantSelector = state => baseSelector(state).tenant;\nconst configSelector = state => baseSelector(state).config;\nexport const appBaseUrlSelector = state => configSelector(state).appBaseUrl;\nexport const minWidthPixelsSelector = state => configSelector(state).minWidthPixels;\n\nexport const userSelector = state => baseSelector(state).profile;\n\nconst authorities = state => userSelector(state).authorities;\nexport const permissionsSelector = state => userSelector(state).permissions;\n\nexport const hasSupportCase = state => (\n    authorities(state)\n        ? authorities(state)\n            .some(authority => authority === AUTHORITIES.SUPPORT_CASE)\n        : null\n);\n","const color1 = '#58CCCB';\nconst color2 = '#006766';\nconst color3 = '#0099E7';\nconst color4 = '#00306A';\nconst color5 = '#A892D7';\nconst color6 = '#792A85';\nconst color7 = '#9DCE6F';\nconst color8 = '#62A62C';\nconst color9 = '#D9504F';\nconst color10 = '#FF9742';\nconst color14 = '#FFBC86'; // TODO validate this color with UX. MJD extrapolated it from the others\nconst color15 = '#EEEEEE';\nconst color16 = '#FFFFFF';\nconst color17 = '#F1C232';\nconst color18 = '#888888';\nconst color19 = '#CCCCCC';\nconst color20 = '#E2E6EA';\nconst color21 = '#B0CED4';\nconst color22 = 'transparent';\n\nexport const CHART_COLORS = {\n    teal: color2,\n    tealLight: color1,\n    purple: color6,\n    purpleLight: color5,\n    blue: color4,\n    blueLight: color3,\n    green: color8,\n    greenLight: color7,\n    orange: color10,\n    orangeLight: color14,\n    redOrange: color9,\n    warningYellow: color17,\n    white: color16,\n    plotBandGrey: color15,\n    grey: color18,\n    crosshairs: color19,\n    gradientMinGrey: color20,\n    ununsedReservedColor: color21,\n    transparent: color22,\n\n    // TODO Remove these when no more backbone pages are using them\n    legacyRed: '#f45b5b',\n    legacyYellow: '#C4C243',\n    legacyGreen: '#90ed7d',\n    legacyLightBlue: '#7cb5ec',\n};\n\nconst toSet = (stroke, fill) => ({ stroke, fill });\nexport const COLOR_SETS = {\n    teal: toSet(CHART_COLORS.teal, CHART_COLORS.tealLight),\n    purple: toSet(CHART_COLORS.purple, CHART_COLORS.purpleLight),\n    green: toSet(CHART_COLORS.green, CHART_COLORS.greenLight),\n    blue: toSet(CHART_COLORS.blue, CHART_COLORS.blueLight),\n    orange: toSet(CHART_COLORS.orange, CHART_COLORS.orangeLight),\n    grey: toSet(CHART_COLORS.grey, CHART_COLORS.plotBandGrey),\n    transparent: toSet(CHART_COLORS.transparent, CHART_COLORS.transparent),\n};\n\nexport const defaultColorSet = [\n    CHART_COLORS.teal,\n    CHART_COLORS.purple,\n    CHART_COLORS.blue,\n    CHART_COLORS.green,\n    CHART_COLORS.orange,\n    CHART_COLORS.redOrange,\n    CHART_COLORS.tealLight,\n    CHART_COLORS.purpleLight,\n    CHART_COLORS.blueLight,\n    CHART_COLORS.greenLight,\n    CHART_COLORS.orangeLight,\n];\n","let privateStore;\n\n/**\n * Init Redux Store Provider singleton\n * @param store\n */\nexport default (store) => {\n    privateStore = store;\n};\n\nexport const getStore = function getStore() {\n    if (!privateStore) {\n        throw new Error('storeProvider must be initialized. Store is not available.');\n    }\n\n    return privateStore;\n};\n","import { buildUrl } from '@infosight/elmer/dist/utils/url';\nimport { getStore } from './storeProvider';\nimport { appBaseUrlSelector } from '../modules/user/reducer';\n\n// TODO Move these functions somewhere else, such as user module\n\nexport function getLoginPath(postLoginTarget = '') {\n    if (postLoginTarget !== '') {\n        return `/app/login?logout&redirectTo=${encodeURIComponent(postLoginTarget)}`;\n    }\n\n    return '/app/login?logout';\n}\n\nexport function redirectToLogin() {\n    let targetPath = '';\n    if (window.location.pathname) {\n        targetPath = window.location.search ?\n            `${window.location.pathname}${window.location.search}` :\n            window.location.pathname;\n    }\n\n    const redirectUrl = getLoginPath(targetPath);\n\n    window.location.replace(redirectUrl);\n}\n\n/**\n * Use for legacy non-React-Router links that need to link to use HTML5 PushState\n * @param args\n */\nexport function buildUrlFromBase(...args) {\n    return buildUrl(appBaseUrlSelector(getStore().getState()), ...args);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { defer } from 'underscore';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport getDisplayName from 'recompose/getDisplayName';\nimport wrapDisplayName from 'recompose/wrapDisplayName';\nimport { Spinner } from '@infosight/elmer/dist/components/Spinner';\nimport App from 'app/Application';\n\nclass NimbleLegacyContainer extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    handleRef(el) {\n        if (el) {\n            this.renderLegacyView(el);\n        } else if (this.view) {\n            // Do this async to avoid issues with React trying to destroy the child element\n            defer(() => {\n                this.view.destroy();\n            });\n        }\n    }\n\n    renderLegacyView(el) {\n        this.view = this.props.createLegacyView(el);\n        this.view.render();\n    }\n\n    render() {\n        return <div className={this.props.className} ref={this.handleRef} />;\n    }\n}\n\nNimbleLegacyContainer.propTypes = {\n    createLegacyView: PropTypes.func.isRequired,\n    className: PropTypes.string,\n};\n\n/**\n * App is asynchronously intialized once it is determined that the user has Nimble assets. A legacy page could be rendered\n * before App is fully initialized, so just block rendering until it is ready.\n */\nexport function awaitLegacyApp(WrappedComponent) {\n    class LegacyAppAwaiter extends Component { // eslint-disable-line react/no-multi-comp\n        constructor(props) {\n            super(props);\n            autobind(this);\n            this.state = { ready: !!App };\n        }\n\n        componentDidMount() {\n            if (!this.state.ready) {\n                this.waitForLegacyApp();\n            }\n        }\n\n        componentWillUnmount() {\n            if (this.waiterId) {\n                window.clearTimeout(this.waiterId);\n            }\n        }\n\n        waitForLegacyApp() {\n            if (!App) {\n                this.waiterId = window.setTimeout(this.waitForLegacyApp, 500);\n            } else {\n                this.setState({ ready: true });\n            }\n        }\n\n        render() {\n            return this.state.ready ? <WrappedComponent {...this.props} /> : <Spinner />;\n        }\n    }\n\n    LegacyAppAwaiter.displayName = wrapDisplayName(\n        WrappedComponent,\n        getDisplayName(LegacyAppAwaiter)\n    );\n\n    return hoistNonReactStatics(LegacyAppAwaiter, WrappedComponent);\n}\n\nexport default awaitLegacyApp(NimbleLegacyContainer);\n","/**\n * Wraps a view with a loading spinner.\n *\n * See BulletinsHelpContent.js for example usage.\n *\n * The default 'load' function calls fetch() on the target view's model or collection.\n *\n * Subclasses may override the 'load' function.\n * The 'load' function must return a jQuery deferred which:\n *  - When resolve()d, yields the target view when resolved.\n *  - When reject()ed, yields an optional error message\n *\n * Subclass can optionally define a 'loadingMessage' property to customize the text adjacent to the spinner.\n */\nconst $ = require('jquery');\nvar _ = require('underscore');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nvar spinnerTpl = require('raw-loader!./Spinner.html');\nvar ErrorView = require('./ErrorView');\n\nvar SpinnerView = Marionette.ItemView.extend({\n    template: _.template(spinnerTpl),\n});\n\nvar AsyncView = Marionette.LayoutView.extend({\n    animateOnLoad: true,\n    template: _.constant('<div class=\"region\"></div>'),\n\n    regions: {\n        region: '.region',\n    },\n\n    initialize: function () {\n        _.bindAll(this, 'onLoad', 'onError');\n\n        this.loadingMessage = this.getOption('loadingMessage');\n        this.view = this.getOption('view');\n        this.ViewConstructor = this.getOption('ViewConstructor');\n\n        if (this.ViewConstructor) {\n            this.view = new this.ViewConstructor(_(this.options).omit('el'));\n        }\n        this.listenTo(this.view, 'all', this.triggerMethodFilter);\n    },\n\n    triggerMethodFilter: function (eventName, payload) {\n        switch (eventName) {\n        case 'render':\n            break;\n        default:\n            this.triggerMethod(eventName, payload);\n        }\n    },\n\n    load: function () {\n        console.assert(this.view, 'A \"view\" or \"ViewConstructor\" option must be defined to use the default load function');\n\n        var deferred = $.Deferred();\n\n        // NOTE: If view has both a model and collection, we arbitrarily choose the collection to fetch,\n        // unless fetchModel:true flag is set in view\n        // In case of fetchModel:true is set, will choose model to fetch\n        var modelOrCollection;\n        if (this.view.fetchModel === true) {\n            modelOrCollection = this.view.model || this.view.collection;\n        } else {\n            modelOrCollection = this.view.collection || this.view.model;\n        }\n        console.assert(modelOrCollection, 'The target view must have a model or a collection to be fetched');\n\n        modelOrCollection.fetch({ reset: true })\n            .done(_.bind(deferred.resolve, deferred, this.view))\n            .fail(_.bind(deferred.reject, deferred));\n\n        return deferred;\n    },\n\n    onRender: function () {\n        if (this.useSpinner !== false) {\n            this.region.show(new SpinnerView());\n        }\n\n        this.load()\n            .done(this.onLoad)\n            .fail(this.onError);\n    },\n\n    onLoad: function (view) {\n        // Handle case when the view is no longer needed\n        if (!this.region) {\n            return;\n        }\n\n        if (this.getOption('animateOnLoad') == 'true') {\n            this.region.$el.addClass('animated fadeIn');\n        }\n\n        this.region.show(view);\n\n        // TODO consider proxying events on the view to listeners on ourself\n    },\n\n    onError: function (jqXhr) {\n        // View destroyed or XHR aborted.\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort\n        if (this.isDestroyed || (jqXhr.readyState === 0 && jqXhr.status === 0)) {\n            return;\n        }\n\n        this.region.$el.addClass('animated fadeIn');\n        this.region.show(new ErrorView({\n            model: new Backbone.Model({\n                error: jqXhr.responseJSON ? jqXhr.responseJSON.message : null,\n                message: 'Unable to load content.',\n            }),\n        }));\n    },\n\n}, {\n\n    /**\n     * Wrap the provided view in a new AsyncView.\n     * Shortcut for calling: new AsyncView({ view: view })\n     */\n    wrap: function (view) {\n        return new AsyncView({ view: view });\n    },\n\n});\n\nmodule.exports = AsyncView;\n","import Dexie from 'dexie';\n\nlet db;\nconst getOrCreateInstance = () => {\n    if (db) {\n        return db;\n    }\n\n    db = new Dexie('infosight');\n    db.version(1).stores({\n        infrastructureInventory: 'type,productFamily',\n    });\n\n    return db;\n};\n\nexport default getOrCreateInstance;\n","import _ from 'underscore';\n\nexport const ADD_GLOBAL_NOTIFICATION = 'ADD_GLOBAL_NOTIFICATION';\nexport const REMOVE_GLOBAL_NOTIFICATION = 'REMOVE_GLOBAL_NOTIFICATION';\nexport const DISMISS_GLOBAL_NOTIFICATION = 'DISMISS_GLOBAL_NOTIFICATION';\n\nexport const addNotification = (severity = 'info', { content, id }) => ({\n    type: ADD_GLOBAL_NOTIFICATION,\n    id: id || _.uniqueId(),\n    severity,\n    content,\n});\n\nexport const dismissNotification = id => ({\n    type: DISMISS_GLOBAL_NOTIFICATION,\n    id,\n});\n","import { USER_CONTEXT_CHANGED } from '../user/constants';\n\nimport {\n    ADD_GLOBAL_NOTIFICATION,\n    REMOVE_GLOBAL_NOTIFICATION,\n    DISMISS_GLOBAL_NOTIFICATION,\n} from './actionCreators';\n\nconst initialState = {};\n\nconst ACTION_HANDLERS = {\n    [ADD_GLOBAL_NOTIFICATION]: (state, { severity, content, id }) => ({\n        ...state,\n        [id]: { id, severity, content },\n    }),\n    [DISMISS_GLOBAL_NOTIFICATION]: (state, { id }) => {\n        const newState = { ...state };\n        delete newState[id];\n        return newState;\n    },\n    [REMOVE_GLOBAL_NOTIFICATION]: (state, { id }) => {\n        const newState = { ...state };\n        delete newState[id];\n        return newState;\n    },\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\n// Selectors\nexport const notificationsSelector = state => Object.values(state);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { GlobalBannerList } from '@infosight/elmer/dist/components/GlobalBanner';\nimport { dismissNotification as dismiss } from './actionCreators';\nimport { notificationsSelector } from './reducer';\n\nconst mapStateToProps = state => ({\n    banners: notificationsSelector(state.globalNotifications),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    dismiss,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalBannerList);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport Request from '../../services/Request';\nimport dexie from '../../store/indexeddb';\nimport { getStore } from '../../util/storeProvider';\nimport { addNotification } from '../notifications';\n\nconst ROOT = '__ROOT';\nconst buildObjectIndex = (...objectTypes) => objectTypes.reduce((memo, name) => ({ ...memo, [name]: {} }), {});\nconst PARENT_RELATIONSHIP = 1;\nconst ASSOCIATIVE_RELATIONSHIP = 2;\n\n// eslint-disable-next-line import/prefer-default-export\nexport function defaultIsInventoryLoadedCreator({ inventoryLoadedSelector }) {\n    return () => inventoryLoadedSelector(getStore().getState());\n}\n\nexport function defaultFetchInventoryCreator({\n    FETCH_INVENTORY: actionType,\n    OBJECTS,\n    view,\n    getBoundary,\n    productFamily,\n    enableClientSideSearch,\n    excludedTypesFromClientSideSearch,\n}) {\n    return boundary => async (dispatch) => {\n        if (!boundary && typeof getBoundary === 'function') {\n            boundary = getBoundary() || boundary;\n        }\n\n        const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(actionType, dispatch);\n        dispatchStart();\n\n        try {\n            const response = await new Request().pod(boundary).genericQuery(view).post();\n            const index = buildObjectIndex(...Object.values(OBJECTS));\n            const topology = buildObjectIndex(...Object.values(OBJECTS), ROOT);\n\n            const addObjectToIndex = (id, type, name) => {\n                if (index[type]) {\n                    if (!index[type][id]) {\n                        index[type][id] = { id, type, name };\n                    } else if (name && !index[type][id].name) {\n                        index[type][id].name = name.toString();\n                    }\n\n                    return index[type][id];\n                }\n\n                return undefined;\n            };\n\n            const addOwnerRelation = (owner, ownee) => {\n                topology[owner.type][owner.id] = topology[owner.type][owner.id] || {};\n                topology[owner.type][owner.id].children = topology[owner.type][owner.id].children || {};\n                topology[owner.type][owner.id].children[ownee.type] = topology[owner.type][owner.id].children[ownee.type] || [];\n                if (!topology[owner.type][owner.id].children[ownee.type].includes(ownee.id)) {\n                    topology[owner.type][owner.id].children[ownee.type].push(ownee.id);\n                }\n\n                topology[ownee.type][ownee.id] = topology[ownee.type][ownee.id] || {};\n                topology[ownee.type][ownee.id].parent = owner;\n            };\n\n            const addAssociativeRelation = (a, b) => {\n                topology[a.type][a.id] = topology[a.type][a.id] || {};\n                topology[a.type][a.id].associates = topology[a.type][a.id].associates || {};\n                topology[a.type][a.id].associates[b.type] = topology[a.type][a.id].associates[b.type] || [];\n                if (!topology[a.type][a.id].associates[b.type].includes(b.id)) {\n                    topology[a.type][a.id].associates[b.type].push(b.id);\n                }\n            };\n\n            response.data.data.forEach((item) => {\n                const { relativeId, relativeType, relation } = item;\n                const { id, type, name } = item;\n\n                // object and relative are returned IFF they belong to this product family.\n                const object = addObjectToIndex(id, type, name);\n                // We can have bad data where the type has a value, but the ID does not.\n                // When there is any bad data, make the root node the relative\n                const relative = relativeId && relativeType ? addObjectToIndex(relativeId, relativeType) : addObjectToIndex(ROOT, ROOT);\n\n                switch (relation) {\n                case PARENT_RELATIONSHIP:\n                    // Assumption: Ownership (parent-child) relations only exist within a product family. Other relationships are associative.\n                    if (object && relative) {\n                        addOwnerRelation(relative, object);\n                    } else if (object && relativeId === null && relativeType === null) {\n                        // This is a child of the root pseudo-node\n                        addOwnerRelation({ id: ROOT, type: ROOT }, object);\n                    }\n\n                    break;\n                case ASSOCIATIVE_RELATIONSHIP: {\n                    // We care about any associative relationship, so use item instead of object.\n                    const left = object || item;\n                    const right = relative || { id: relativeId, type: relativeType };\n\n                    if (relative) {\n                        // Both objects are in this family; add relationship in both directions to simplify lookups\n                        addAssociativeRelation(left, right);\n                        addAssociativeRelation(right, left);\n                    } else if (relativeType && relativeId) {\n                        // Only add the relationship on this side since topology lookups from the relative's perspective will use it's store state\n                        addAssociativeRelation(left, right);\n                    }\n                    break;\n                }\n                default:\n                    break;\n                }\n            });\n\n            if (enableClientSideSearch) {\n                try {\n                    const table = dexie().infrastructureInventory;\n                    await table.where('productFamily').equals(productFamily).delete();\n                    await table.bulkPut(Object.entries(index).map(([type, set]) => {\n                        if (Array.isArray(excludedTypesFromClientSideSearch) && excludedTypesFromClientSideSearch.includes(type)) {\n                            return null;\n                        }\n\n                        return ({\n                            productFamily,\n                            type,\n                            objects: Object.values(set).map(({ id, name }) => ({ id, name: name || '' })),\n                        });\n                    }).filter(x => x));\n                } catch (ex) {\n                    console.error(ex);\n\n                    // TODO Don't show message if we can detect that there is nothing the user can do about it.\n                    // TODO Move GlobalNotifications to elmer and encapsulate redux access\n                    getStore().dispatch(\n                        addNotification('warning', {\n                            // eslint-disable-next-line max-len\n                            content: 'Search is partially disabled when IndexedDB is disabled in your browser. This may occur when using Private/Incognito mode or your system has limited disk space.',\n                            id: 'client-side-search',\n                        })\n                    );\n                }\n            }\n\n            dispatchSuccess({ index, topology, boundary });\n        } catch (ex) {\n            dispatchError(ex);\n        }\n    };\n}\n","import { FETCH_INVENTORY, OBJECTS, RESET } from './constants';\nimport { defaultFetchInventoryCreator } from '../../infrastructure/factories';\nimport NimbleUserTenantHelpers from '../tenantSelection/NimbleUserTenantHelpers';\n\nexport const fetchInventory = (...args) => (\n    defaultFetchInventoryCreator({\n        FETCH_INVENTORY,\n        OBJECTS,\n        view: 'nimble/inventory',\n        productFamily: 'NIMBLE',\n        enableClientSideSearch: true,\n        excludedTypesFromClientSideSearch: NimbleUserTenantHelpers.canAccessMultipleTenants() ? [OBJECTS.ARRAY] : null,\n    })(...args)\n);\n\nexport const reset = () => ({ type: RESET });\n","import { defaultIsInventoryLoadedCreator } from '../../infrastructure/factories';\nimport reducer, {\n    indexedSelector,\n    inventorySelector,\n    findObject,\n    getObjectTopology,\n    inventoryLoadedSelector,\n} from './reducer';\nimport { OBJECTS } from './constants';\nimport { fetchInventory, reset } from './actionCreators';\n\nexport {\n    reducer,\n    indexedSelector,\n    OBJECTS,\n    fetchInventory,\n    reset,\n    inventorySelector,\n    findObject,\n    getObjectTopology,\n};\n\nexport const isInventoryLoaded = defaultIsInventoryLoadedCreator({ inventoryLoadedSelector });\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('CAPACITY_REPORT');\n\nexport const POOL_CAPACITY_TIME_SERIES_FETCH = ns('POOL_CAPACITY_TIME_SERIES_FETCH');\nexport const TOP_POOLS_CAPACITY_TIME_SERIES_FETCH = ns('TOP_POOLS_CAPACITY_TIME_SERIES_FETCH');\nexport const POOL_CAPACITY_SUMMARY_FETCH = ns('POOL_CAPACITY_SUMMARY_FETCH');\nexport const POOL_CAPACITY_FOLDERS_FETCH = ns('POOL_CAPACITY_FOLDERS_FETCH');\nexport const POOL_CAPACITY_APPLICATIONS_FETCH = ns('POOL_CAPACITY_APPLICATIONS_FETCH');\nexport const POOL_CAPACITY_RESET = ns('POOL_CAPACITY_RESET');\n\nexport const FOLDER_CAPACITY_TIME_SERIES_FETCH = ns('FOLDER_CAPACITY_TIME_SERIES_FETCH');\nexport const FOLDER_CAPACITY_SUMMARY_FETCH = ns('FOLDER_CAPACITY_SUMMARY_FETCH');\nexport const FOLDER_CAPACITY_APPLICATIONS_FETCH = ns('FOLDER_CAPACITY_APPLICATIONS_FETCH');\nexport const FOLDER_CAPACITY_RESET = ns('FOLDER_CAPACITY_RESET');\n\nexport const POOL_CAPACITY_ARRAY_CAPACITY_FETCH = ns('POOL_CAPACITY_ARRAY_CAPACITY_FETCH');\n\nexport const GROUP_POOL_FOLDER_RELATIONS_FETCH = ns('GROUP_POOL_FOLDER_RELATIONS_FETCH');\nexport const GROUP_POOL_FOLDER_RELATIONS_RESET = ns('GROUP_POOL_FOLDER_RELATIONS_RESET');\n\nexport const ARRAY_GROUP = 'ARRAY_GROUP';\nexport const POOL = 'POOL';\nexport const FOLDER = 'FOLDER';\n\nexport const ROOT = 'ROOT';\nexport const ALL = 'ALL';\n\nexport const DEFAULT_FOLDER = '(root)';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metric\":\"metric__2Vm2x\",\"value\":\"value__3pJzc\",\"unit\":\"unit__VCd-s\",\"subtitle\":\"subtitle__1Vyte\",\"muted\":\"muted__WQ4oG\",\"layout\":\"layout__fk9Sa\",\"inset\":\"inset__3D4Hn\",\"summary\":\"summary__1EtgW\",\"time-series\":\"time-series__M3892\",\"time-series-chart\":\"time-series-chart__3-epb\",\"top-pools\":\"top-pools__1E9mi\",\"chart\":\"chart__2IrEC\",\"bar-chart\":\"bar-chart__HbVoz\",\"total-usage\":\"total-usage__1I4g1\",\"folder-limit\":\"folder-limit__3J7vv\",\"system-config\":\"system-config__2FJJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metric\":\"metric__BZq3n\",\"value\":\"value__3lhIG\",\"unit\":\"unit__3ivv1\",\"subtitle\":\"subtitle__1AVaI\",\"muted\":\"muted__DyPLV\",\"layout\":\"layout__2TsdQ\",\"inset\":\"inset__pghUJ\",\"summary\":\"summary__21Ul3\",\"time-series\":\"time-series__q2HgC\",\"time-series-chart\":\"time-series-chart__25jdd\",\"top-pools\":\"top-pools__2oWgt\",\"chart\":\"chart__1Eihv\",\"bar-chart\":\"bar-chart__1nmfQ\",\"total-usage\":\"total-usage__3VY1i\",\"folder-limit\":\"folder-limit__2HS7Q\",\"system-config\":\"system-config__Yc0uX\",\"legend\":\"legend__39Lmg\",\"left\":\"left__1lQQo\",\"right\":\"right__1rAFq\",\"striped\":\"striped__1MEYI\"};","export default function rootStateSelector(state) {\n    return state.nimble;\n}\n","import numeral from 'numeral';\nimport moment from 'moment-timezone';\nimport { INFO_NOT_AVAILABLE,\n    FORMAT_BYTE_TYPE,\n} from './constants';\n\nexport const isEmpty = value => !!((value === null || value === undefined || value === ''));\n\n/**\n * Formats the value with the given format and appends unit abbreviation when provided\n * If either value & format is not provided, it returns null\n * @param {*} value\n * @param {*} format\n * @param {*} unitAbbr\n */\nexport const formatValue = (value, format, unitAbbr) => {\n    if (!format || isEmpty(value)) {\n        return null;\n    }\n\n    let numeralFormattedValue = numeral(value).format(format);\n\n    // numeral doesn't return the B when value is less than one\n    if (format.includes(FORMAT_BYTE_TYPE) && value > 0 && value < 1) {\n        numeralFormattedValue += 'B';\n    }\n\n    return `${numeralFormattedValue}${!isEmpty(unitAbbr) ? ` ${unitAbbr}` : ''}`;\n};\n\n/**\n * On Headlines, it is expected to show INFO_NOT_AVAILABLE when the data is empty\n */\nexport const headlineValueFormatter = (value, format, unitAbbr) =>\n    (isEmpty(value) ? INFO_NOT_AVAILABLE : formatValue(value, format, unitAbbr));\n// Currently an alias.  We want N/A for empty headline and list values.\nexport const listValueFormatter = headlineValueFormatter;\n\n\nexport const formatDateTime = (dateTimeValue, dateTimeFormat, isUTC = false) => {\n    if (!dateTimeValue || !dateTimeFormat) {\n        return null;\n    }\n    return isUTC ? moment.utc(dateTimeValue).format(dateTimeFormat) : moment(dateTimeValue).format(dateTimeFormat);\n};\n\n// TODO: Better name this function\nexport const formatDateTimeWithTimeZone = (dateTimeValue, dateTimeFormat, tz) => {\n    if (!dateTimeValue || !dateTimeFormat) {\n        return null;\n    }\n    let momentObj = moment(dateTimeValue);\n    if (tz) {\n        momentObj = momentObj.tz(tz);\n    }\n    return `${momentObj.fromNow()} (${momentObj.format(dateTimeFormat)})`;\n};\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    LIST_FETCH,\n    SUMMARY_CARDS_FETCH,\n    TREND_CARDS_FETCH,\n    CSV_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('pools'),\n    ...getInitialState('summaryCards'),\n    ...getInitialState('trendCards'),\n    ...getInitialState('poolsCsv'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: LIST_FETCH, stateKey: 'pools' }),\n    ...createReducersForAction({ type: SUMMARY_CARDS_FETCH, stateKey: 'summaryCards' }),\n    ...createReducersForAction({ type: TREND_CARDS_FETCH, stateKey: 'trendCards' }),\n    ...createReducersForAction({ type: CSV_FETCH, stateKey: 'poolsCsv' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).poolCollection;\nexport const poolsCollectionSelector = state => baseSelector(state);\nexport const csvSelector = createSelector(baseSelector, 'poolsCsv');\n","export const INFO_NOT_AVAILABLE = 'N/A';\nexport const UNKNOWN = 'Unknown';\n\n/* List of Formats supported accross the App */\n// Formats : Data\nexport const FORMAT_BYTE_TYPE = 'ib';\nexport const FORMAT_BYTE_NO_PRECISION = `0 ${FORMAT_BYTE_TYPE}`;\nexport const FORMAT_BYTE_PRECISION = `0.0 ${FORMAT_BYTE_TYPE}`;\n\n// Data formatted in base 10 for Physical Hardware\nexport const FORMAT_BYTE_10_TYPE = 'b';\nexport const FORMAT_BYTE_10_NO_PRECISION = `0 ${FORMAT_BYTE_10_TYPE}`;\nexport const FORMAT_BYTE_10_PRECISION = `0.0 ${FORMAT_BYTE_10_TYPE}`;\n\n// Formats : Number\nexport const FORMAT_NUMBER_NO_PRECISION = '0,0';\nexport const FORMAT_NUMBER_PRECISION = '0,0.0';\nexport const FORMAT_NUMBER_EXTRA_PRECISION = '0,0.00';\n\n// Formats: Number Abbreviation ( Ex: 1.2m, 2.4k)\n// TODO: Add numeral wrapper to change the abbreviations to Uppercase\nexport const FORMAT_NUMBER_ABBR = '0.0a';\n\n// Formats: PERCENT\nexport const FORMAT_PERCENT_PRECISION = '0.0 %';\n\n// Formats: momentjs date\nexport const FORMAT_MOMENT_CALENDAR_DAY = 'l';\n\n// momentjs date time\nexport const FORMAT_MOMENT_DATE_TIME = 'L LTS';\n\n// Use this if the input Timezone is described as a string ( Ex: 'America/Los_Angeles')\nexport const FORMAT_MOMENT_DATE_TIME_TIMEZONE_FROM_DESC = `${FORMAT_MOMENT_DATE_TIME} z`;\n\n// Units\n// Units: Latency (milliseconds)\nexport const UNIT_LATENCY_ABBR = 'ms';\n\n// Units: IOPS\nexport const UNIT_IOPS_ABBR = 'IO/sec';\n","var BaseGridModel = require('app/models/grid/BaseGridModel');\n\nmodule.exports = BaseGridModel.extend({\n    defaults: {\n        url: null,\n        pages: 50,\n    },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\nimport classnames from 'classnames/bind';\n\nconst SupportContractEndDateTooFarInFutureInYears = 10;\nconst SupportContractExpirationWarningThresholdInDays = 90;\n\nconst SupportStatus = Object.freeze({\n    NOT_AVAILABLE: 'N/A',\n    CURRENT: 'Current',\n    EXPIRING: 'Expiring',\n    EXPIRED: 'Expired',\n});\n\nexport const parseSupportStatus = (supportStatus, supportEndDate) => {\n    if (supportStatus.toLowerCase() === SupportStatus.EXPIRED.toLowerCase()) {\n        return SupportStatus.EXPIRED;\n    }\n\n    // pass 'true' to avoid rounding\n    if (Math.abs(moment(supportEndDate).diff(moment(), 'years', true)) > SupportContractEndDateTooFarInFutureInYears) {\n        return SupportStatus.NOT_AVAILABLE;\n    }\n\n    const expiring = Math.abs(moment(supportEndDate).diff(moment.utc(), 'days')) <= SupportContractExpirationWarningThresholdInDays;\n    return expiring ? SupportStatus.EXPIRING : SupportStatus.CURRENT;\n};\n\nconst ArraySupportStatus = ({ parsedSupportStatus }) => (\n    <span className={classnames(parsedSupportStatus !== SupportStatus.CURRENT ? 'text-danger' : '')}>\n        { parsedSupportStatus }\n    </span>\n);\n\nArraySupportStatus.propTypes = {\n    parsedSupportStatus: PropTypes.string,\n};\n\nexport default ArraySupportStatus;\n","import numeral from 'numeral';\n\n/**\n * Builds a String representing Network Card Information based on the Port Count\n * @param tenGigSfpPortCount\n * @param tenGigBaseTPortCount\n * @param gigPortCount\n * @param fcPortCount\n * @returns {string}\n */\nconst getNetworkCardInfo = ({ tenGigSfpPortCount, tenGigBaseTPortCount, gigPortCount, fcPortCount }) => {\n    const networkString = [];\n    if (tenGigSfpPortCount > 0) {\n        networkString.push(numeral(tenGigSfpPortCount).divide(2).format('0,0').concat(' Dual 10Gbe SFP+'));\n    }\n    if (tenGigBaseTPortCount > 0) {\n        networkString.push(numeral(tenGigBaseTPortCount).divide(2).format('0,0').concat(' Dual 10GbaseT'));\n    }\n    if (gigPortCount > 0) {\n        networkString.push(numeral(gigPortCount).divide(2).format('0,0').concat(' Dual 1GbE'));\n    }\n    if (fcPortCount > 0) {\n        networkString.push(numeral(fcPortCount).divide(2).format('0,0').concat(' Dual 16Gb FC'));\n    }\n    const networkData = networkString.join('; ');\n    return networkData;\n};\n\nexport default getNetworkCardInfo;\n","export const actionRegistry = new Map();\n\nexport const emitEventForAction = (action) => {\n    actionRegistry.set(action, true);\n};\n","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar moment = require('moment');\nvar SupportContractEndDateTooFarInFutureInYears = 10;\nvar SupportContractExpirationWarningThresholdInDays = 90;\nvar HeartbeatDelayThresholdInMinutes = 25;\nvar HeartbeatStaleThresholdInDays = 7;\n\nvar SupportStatus = Object.freeze({\n    NOT_AVAILABLE: 'NOT_AVAILABLE',\n    CURRENT: 'CURRENT',\n    EXPIRING: 'EXPIRING',\n    EXPIRED: 'EXPIRED',\n});\n\nvar parseSupportStatus = function (response) {\n    if (response.supportStatus === SupportStatus.EXPIRED) {\n        return SupportStatus.EXPIRED;\n    }\n\n    // pass 'true' to avoid rounding\n    if (Math.abs(moment(response.supportEndDate).diff(moment(), 'years', true)) > SupportContractEndDateTooFarInFutureInYears) {\n        return SupportStatus.NOT_AVAILABLE;\n    }\n\n    var expiring = Math.abs(moment(response.supportEndDate).diff(moment.utc(), 'days')) <= SupportContractExpirationWarningThresholdInDays;\n    return expiring ? SupportStatus.EXPIRING : SupportStatus.CURRENT;\n};\n\nvar parseLatestHeartbeat = function (latestHeartbeat) {\n    if (!latestHeartbeat) {\n        return;\n    }\n    latestHeartbeat.isDelayed = moment().diff(moment(latestHeartbeat.timestamp), 'minutes') > HeartbeatDelayThresholdInMinutes;\n};\n\n// TODO Merge this into AssetDetailsModel\nmodule.exports = Backbone.Model.extend({\n    /** @lends app/modules/assets_report/models/AssetModel.prototype */\n\n    /**\n     * @classdesc <span style=\"color: red;\">Developer description to be added.</span>\n     * @name app/modules/assets_report/models/AssetModel\n     * @constructor\n     * @augments Backbone.Model\n     */\n\n    idAttribute: 'serialNumber',\n\n    defaults: {\n        company: null,\n        accountId: null,\n        serialNumber: null,\n        assetId: null,\n        arrayType: null,\n        model: null,\n        version: null,\n        hostname: null,\n        group: null,\n        pool: null,\n        assetStreet: null,\n        assetCity: null,\n        assetCountry: null,\n        assetZip: null,\n        assetState: null,\n        supportStatus: null,\n        supportStartDate: null,\n        supportEndDate: null,\n        sendingAsups: null,\n        asupReceived: null,\n        asupProcessed: null,\n        assetShipDate: null,\n        assetShipStatus: null,\n        supportAgreement: null,\n        arrayTimezone: null,\n        capacity: null,\n        free: null,\n        expansionShelves: 0,\n        criticalEvents: null,\n        urgentEvents: null,\n        importantEvents: null,\n        warningEvents: null,\n        hasEvents: null,\n        asupStatus: null,\n        hbStatus: 'not-loaded',\n        hbReceived: null,\n        hbAge: null,\n        charts: [],\n        upgradable: null,\n        allFlash: null,\n    },\n\n    parse: function (response) {\n        response = {\n            ...response,\n            supportStatus: parseSupportStatus(response),\n            hostname: response.hostname || response.hostName,\n            serialNumber: response.serialNumber || response.arraySn,\n            latestHeartBeat: response.latestHeartBeat ? { ...response.latestHeartBeat } : null,\n            version: response.version || response.softwareVersion,\n        };\n\n        parseLatestHeartbeat(response.latestHeartbeat);\n\n        return response;\n    },\n\n    versionSupported: function (release) {\n        var version = this.get('version');\n\n        // If there are no ASUPs for array, then we don't know the version\n        if (!version) {\n            return true;\n        }\n\n        // Bad data happens. If no matching release, assume it is supported. Only likely to happen in non-prod envs.\n        if (!release) {\n            return true;\n        }\n\n        return release.get('supported');\n    },\n\n    hasHardwareIssues: function () {\n        var hb = this.get('latestHeartbeat');\n        if (!hb) {\n            return false;\n        }\n        if (moment().diff(hb.timestamp, 'days') > HeartbeatStaleThresholdInDays) {\n            // Exclude hardware issues from stale heartbeats\n            return false;\n        }\n        return !_(hb.controllers)\n                .chain()\n                .pluck('state')\n                .difference(['active', 'standby']) // Any state values NOT 'active' or 'standby' indicate a warning\n                .isEmpty()\n                .value() ||\n            hb.ssdFailedCount ||\n            hb.hddFailedCount ||\n            _(hb.controllers).some(function (controller) {\n                return _(controller.components).some(function (component) {\n                    return component.status != 'OK';\n                });\n            });\n    },\n\n    hasHeartbeatWarning: function () {\n        return !this.get('latestHeartbeat') || this.get('latestHeartbeat').isDelayed;\n    },\n\n    hasAsupWarning: function () {\n        return this.get('sendingAsups') != 'RECEIVED';\n    },\n\n}, {\n    SupportStatus: SupportStatus,\n});\n","const App = require('app/Application');\nvar Marionette = require('backbone.marionette');\nvar AccountSelection = require('./AccountSelection');\nvar AccountModel = require('./AccountModel');\n\nvar AccountController = Marionette.Object.extend({\n    initialize: function () {\n        App.handleRequest('global', 'get:account:selection', () => this.accountSelection, this);\n        this.accountSelection = new AccountSelection();\n    },\n\n    selectOneAccount: function (tenant) {\n        this.accountSelection.setAccount(new AccountModel(tenant));\n        App.event('global', 'change:account', this.accountSelection);\n    },\n});\n\nvar instance;\n\nmodule.exports = {\n    setTenant(tenant) {\n        this.getInstance().selectOneAccount(tenant);\n    },\n\n    getInstance() {\n        if (!instance) {\n            instance = new AccountController();\n        }\n\n        return instance;\n    },\n};\n","const Backbone = require('backbone');\nconst Api = require('app/modules/api/Api');\n\nmodule.exports = Backbone.Model.extend({\n    defaults: {\n        id: undefined,\n        name: undefined,\n    },\n\n    urlRoot: new Api().segment('accounts'),\n\n    isResellerEquivalent: function () {\n        return ['Distributor', 'Sub Distributor', 'Reseller'].includes(this.get('type'));\n    },\n\n});\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('PREFERENCES');\nexport const LOAD_PREFERENCES = ns('LOAD_PREFERENCES');\nexport const DISABLE_DIALOG = ns('DISABLE_DIALOG');\nexport const SET_NOTIFICATION = ns('SET_NOTIFICATION');\nexport const ACCEPT_EULA = ns('ACCEPT_EULA');\n","import { findIndex, findWhere } from 'underscore';\nimport { createReducersForAction, getInitialState } from '@infosight/elmer/dist/utils/redux';\n\nimport {\n    LOAD_PREFERENCES,\n    DISABLE_DIALOG,\n    SET_NOTIFICATION,\n    ACCEPT_EULA,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('preferences'),\n    dialogs: [],\n    acceptedEulas: [],\n    notifications: {},\n};\n\nconst upsertById = (arr, obj) => {\n    const idx = findIndex(arr, obj.id);\n    if (idx > -1) {\n        return [...arr.slice(0, idx), obj, arr.slice(idx + 1)];\n    }\n    return [...arr, obj];\n};\n\nconst ACTION_HANDLERS = {\n    ...createReducersForAction({ type: LOAD_PREFERENCES, stateKey: 'preferences' }),\n    [DISABLE_DIALOG]: (state, { payload: id }) => ({\n        ...state,\n        dialogs: upsertById(state.dialogs, { id, visible: false }),\n    }),\n    [SET_NOTIFICATION]: (state, { payload: { type, subtype, value } }) => ({\n        ...state,\n        notifications: {\n            ...state.notifications,\n            [type]: !subtype ? value : {\n                ...state.notifications[type],\n                [subtype]: value,\n            },\n        },\n    }),\n    [ACCEPT_EULA]: (state, { payload: eula }) => ({\n        ...state,\n        acceptedEulas: [...state.acceptedEulas, eula],\n    }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nexport const preferencesSelector = state => state.preferences;\nexport const alreadyFetchedPreferences = state => preferencesSelector(state).loadingPreferences || preferencesSelector(state).loadedPreferences;\n\nexport const getNotification = (state, { type, subtype }) => {\n    const { notifications } = preferencesSelector(state);\n    if (!notifications) {\n        return undefined;\n    }\n\n    return subtype ? (notifications[type] || {})[subtype] : notifications[type];\n};\n\nexport const isDialogEnabled = (state, id) => {\n    const pref = findWhere(preferencesSelector(state).dialogs, { id });\n    return preferencesSelector(state).loadedPreferences && (!pref || pref.visible);\n};\n\nexport const isEulaAccepted = (state, key) => {\n    const { acceptedEulas } = preferencesSelector(state);\n    return acceptedEulas && acceptedEulas.includes(key);\n};\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('ARRAY_DETAIL');\n\nexport const ARRAY_FETCH = ns('ARRAY_FETCH');\nexport const ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH = ns('ARRAY_HARDWARE_UPGRADE_RECOMMENDATIONS_FETCH');\n\nexport const RESET = ns('RESET');\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('VOLUME_DETAIL');\n\n// Actions\nexport const VOLUME_FETCH = ns('VOLUME_FETCH');\nexport const VOLUME_DETAIL_CAPACITY_FETCH = ns('CAPACITY_FETCH');\nexport const VOLUME_DETAIL_PROTECTION_FETCH = ns('PROTECTION_FETCH');\nexport const VOLUME_DETAIL_PERFORMANCE_FETCH = ns('PERFORMANCE_FETCH');\nexport const RESET = ns('RESET');\n\n// Number Format\nexport const NUMBER_FORMAT_NO_PRECISION = '0,0';\nexport const NUMBER_FORMAT_PRECISION = '0,0.00';\n","import _ from 'underscore';\nimport chroma from 'chroma-js';\n\n/**\n * The percentile which is mapped to a \"10 / 10\" score.\n * This sets the shape of the logarithmic function that converts percentile to score.\n * Increasing this value makes the score less sensitive and vice versa\n */\nvar MAX_SCORE_PERCENTILE = 0.99; // Formerly from infosight0.properties -> 'performance.impactScoreMaxPercentile'\nvar MAX_SCORE = 10;\nvar CLASSIFICATIONS = [\n    {\n        name: 'Low',\n        max: 3,\n        hideScore: true,\n    },\n    {\n        name: 'Medium',\n        max: 6,\n    },\n    {\n        name: 'High',\n        max: MAX_SCORE + 1,\n    },\n];\n\n// See http://gka.github.io/chroma.js/#chroma-scale for options\nvar COLOR_SCALE = chroma\n    .scale([chroma.hsv(0, 0, 0.86), chroma.hsv(0, 1, 0.86)])\n    .mode('hsv')\n    .domain([3, 10]);\n\nfunction percentileToScore(percentile) {\n    // Note: IE doesn't support Math.log10. Use Math.log instead.\n    function log10(n) {\n        return Math.log(n) / Math.LN10;\n    }\n\n    var score = (MAX_SCORE / log10(1 - MAX_SCORE_PERCENTILE)) * log10(1 - percentile);\n    return Math.min(score, MAX_SCORE);\n}\n\nfunction scoreToClassification(score) {\n    return _(CLASSIFICATIONS).find(function (classification) {\n        return score < classification.max;\n    });\n}\n\nfunction scoreToColor(score) {\n    return COLOR_SCALE(Math.max(CLASSIFICATIONS[0].max, score));\n}\n\nexport default {\n    COLOR_SCALE,\n    percentileToScore,\n    scoreToClassification,\n    scoreToColor,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartLabel\":\"chartLabel__35DXf\",\"gridRowChartContainer\":\"gridRowChartContainer__2oQzz\",\"progressContainer\":\"progressContainer__LETxc\",\"summaryCharts\":\"summaryCharts__1UN7B\",\"paddedLegend\":\"paddedLegend__3XTNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"perspective-selector\":\"perspective-selector__FPZlk\",\"options\":\"options__1sQg8\",\"optionTitle\":\"optionTitle__3wTt-\",\"show-more-button\":\"show-more-button__11_87\"};","export const xAxisDataRange = (chartRangeStart, chartRangeEnd) => ({\n    min: chartRangeStart.valueOf(),\n    max: chartRangeEnd.valueOf(),\n});\n\nexport default function (chartRangeStart, chartRangeEnd) {\n    return () => ({\n        xAxis: {\n            ...xAxisDataRange(chartRangeStart, chartRangeEnd),\n        },\n    });\n}\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('POOL_DETAIL');\n\nexport const POOL_FETCH = ns('POOL_FETCH');\nexport const CAPACITY_FETCH = ns('CAPACITY_FETCH');\nexport const OVERVIEW_FETCH = ns('OVERVIEW_FETCH');\nexport const RESET = ns('RESET');\n\nexport const POOL = 'Pool';\nexport const CAPACITY_TAB = 'capacity';\nexport const PERFORMANCE_TAB = 'performance';\nexport const PROTECTION_TAB = 'protection';\n\nexport const DEFAULT_DATA_FORMAT = '0.00 ib';\n","const _ = require('underscore');\nvar Backbone = require('backbone');\nvar moment = require('moment');\n\nvar OPTIONS = [\n    {\n        label: '1D',\n        id: '1-day',\n        lookback: moment.duration(1, 'day'),\n    },\n    {\n        label: '1W',\n        id: '1-week',\n        lookback: moment.duration(1, 'week'),\n    },\n    {\n        label: '1M',\n        id: '1-month',\n        lookback: moment.duration(1, 'month'),\n    },\n    {\n        label: '3M',\n        id: '3-months',\n        lookback: moment.duration(3, 'months'),\n    },\n    {\n        label: '1Y',\n        id: '1-year',\n        lookback: moment.duration(1, 'years'),\n    },\n];\n\nmodule.exports = Backbone.Model.extend({\n\n    defaults: _(OPTIONS).findWhere({ id: '1-week' }),\n\n    getQueryParams: function () {\n        return this.pick('lookback', 'min', 'max');\n    },\n\n    setLookback: function (id) {\n        this.clear({ silent: true })\n            .set(_(OPTIONS).findWhere({ id: id }));\n    },\n\n    setCustomRange: function (range) {\n        this.clear({ silent: true })\n            .set({\n                id: 'custom',\n                min: range.min.getTime(),\n                max: range.max.getTime(),\n            });\n    },\n\n    setActualDataRange: function (start, end) {\n        const actualDataRange = start && end ? { start, end } : null;\n        this.set({ actualDataRange }, { noRefresh: true });\n    },\n\n});\n","module.exports = \"<div class=\\\"sk-three-bounce\\\">\\n    <div class=\\\"sk-child sk-bounce1\\\"></div>\\n    <div class=\\\"sk-child sk-bounce2\\\"></div>\\n    <div class=\\\"sk-child sk-bounce3\\\"></div>\\n</div>\"","const _ = require('underscore');\nvar Marionette = require('backbone.marionette');\nvar tpl = require('raw-loader!./ErrorView.html');\n\nmodule.exports = Marionette.ItemView.extend({\n    template: _.template(tpl),\n});\n","var Marionette = require('backbone.marionette');\nvar numeral = require('numeral');\n\nvar ImpactScore = require('./ImpactScoreImpl').default;\n\nmodule.exports = Marionette.Object.extend({\n\n    initialize: function (options) {\n        this.percentile = options.percentile / 100;\n        this.score = ImpactScore.percentileToScore(this.percentile);\n        this.color = ImpactScore.COLOR_SCALE(this.score).hex();\n        this.classification = ImpactScore.scoreToClassification(this.score);\n    },\n\n    render: function () {\n        var result = this.classification.name;\n        if (!this.classification.hideScore) {\n            result += ' (' + numeral(this.score).format('0') + '/10)';\n        }\n        return result;\n    },\n\n});\n","var tinycolor = require('tinycolor2');\n\n// FROM gui/nmbl-components/addon/components/nmbl-charts/base-chart/component.js\n// const lighterTeal = { stroke: '#96cfdb', fill: '#EAF5F8' };\n// const teal = { stroke: '#66cccc', fill: '#E0F5F5' };\n// const lightTeal = { stroke: '#529fae', fill: '#dcecef' };\n// const darkTeal = { stroke: '#006666', fill: '#cce0e0' };\n\nmodule.exports = {\n    read: tinycolor('#66cccc'),\n    write: tinycolor('#006666'),\n};\n","const App = require('app/Application');\nconst _ = require('underscore');\nvar Backbone = require('backbone');\nvar ArrayEventModel = require('app/models/ArrayEventModel');\n\nvar cache;\n\nfunction getCache() {\n    if (!cache) {\n        cache = {};\n        App.handleEvent('global', 'change:account', function () {\n            cache = {};\n        });\n    }\n    return cache;\n}\n\nvar ArrayEventsCollection = Backbone.Collection.extend({\n    model: ArrayEventModel,\n\n    serialNumber: undefined,\n    category: null,\n    monthRange: 12,\n\n    initialize: function (models, options) {\n        _.defaults(this, options);\n        console.assert(!options || (options && options.serialNumber), 'serialNumber must be provided');\n    },\n\n    url: function () {\n        return this.api().array(this.serialNumber).segment('events').addQuery({\n            monthRange: this.monthRange,\n            category: this.category,\n        });\n    },\n\n    fetch: function (options) {\n        if (!this.deferred) {\n            this.deferred = Backbone.Collection.prototype.fetch.call(this, options);\n        }\n        return this.deferred;\n    },\n\n}, {\n    get: function (arraySn) {\n        var cached = getCache()[arraySn];\n        if (!cached) {\n            cached = getCache()[arraySn] = new ArrayEventsCollection([], {\n                serialNumber: arraySn,\n            });\n        }\n        return cached;\n    },\n});\n\nmodule.exports = ArrayEventsCollection;\n","var Backbone = require('backbone');\n\nmodule.exports = Backbone.Model.extend(\n    /** @lends models/ArrayEventModel.prototype */ {\n\n        /**\n         * @classdesc <span style=\"color: red;\">Developer description to be added.</span>\n         * @name models/ArrayEventModel\n         * @constructor\n         * @augments Backbone.Model\n         */\n\n\n        defaults: {\n            serialNumber: null,\n            date: null,\n            category: null,\n            details: null,\n            change: null,\n            previous: null,\n            current: null,\n            notes: null,\n        },\n\n        /**\n         * Helper method for getting the Highcharts configuration for\n         * an entry on a flag series.\n         * @param excludeColors optional parameter to specify whether the color has to be\n         excluded or not. If not passed considered as include colors\n         * @return {Object} Returns a flag config object.\n         */\n        getFlagConfig: function (excludeColors) {\n            var date = this.get('date'),\n                category = this.get('category'),\n                change = this.get('change'),\n                details = this.get('details'),\n                notes = this.get('notes'),\n                flagConfig = null;\n\n            notes = (notes) ? '<br />' + notes : '';\n\n            switch (category) {\n\n            case 'SOFTWARE':\n                flagConfig = {\n                    x: date,\n                    title: 'Software',\n                    text: 'Software updated to: ' + change + notes,\n                    color: excludeColors ? null : '#ED254E',\n                };\n                break;\n\n            case 'HARDWARE':\n                flagConfig = {\n                    x: date,\n                    title: 'Hardware',\n                    text: details + ' from ' +\n                        this.get('previous') + ' to ' +\n                        this.get('current') +\n                        notes,\n                    color: excludeColors ? null : '#090446',\n                };\n                break;\n\n            case 'CAPACITY':\n                flagConfig = {\n                    x: date,\n                    title: 'Capacity',\n                    text: details + '. ' + change + notes,\n                    color: excludeColors ? null : '#F06449',\n                };\n                break;\n\n                // New events should be added to this switch block\n            default:\n                console.error('Unexpected array event category: ' + category + '. Chart may not display correctly.', this.attributes);\n                break;\n            }\n\n            return flagConfig;\n        },\n    });\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('GROUPS_COLLECTION');\n\nexport const GROUPS_LIST_FETCH = ns('LIST_FETCH');\nexport const RESET = ns('RESET');\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    GROUPS_LIST_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('groups'),\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: GROUPS_LIST_FETCH, stateKey: 'groups' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).groupCollection;\nexport const listSelector = createSelector(baseSelector, 'groups');\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('BULLETINS');\n\nexport const FETCH_BULLETINS = ns('FETCH_BULLETINS');\nexport const RESET = ns('RESET');\n","/* eslint-disable react/no-danger */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport { connect } from 'react-redux';\nimport { Modal } from '@infosight/elmer/dist/components/Modal';\nimport Request from '../../../services/Request';\nimport { reset } from '../actionCreators';\nimport style from './Bulletins.scss';\n\nconst cx = classnames.bind(style);\n\nclass BulletinsModal extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    dismiss() {\n        const { bulletins } = this.props;\n        this.removeBulletins();\n\n        if (bulletins && bulletins.length) {\n            new Request()\n                .slash('user', 'banners', 'dismissed')\n                .put(bulletins.map(x => x.id));\n        }\n    }\n\n    removeBulletins() {\n        this.props.reset();\n    }\n\n    render() {\n        return (\n            <Modal\n                size=\"large\"\n                hideModalOnPrimaryButtonClick\n                hideModalOnSecondaryButtonClick\n                primaryButtonContent=\"Dismiss All\"\n                secondaryButtonContent=\"Hide\"\n                title=\"Bulletins\"\n                onClickPrimaryButton={this.dismiss}\n                onClickSecondaryButton={this.removeBulletins}\n                bodyClassName={cx('body')}\n                footerClassName={cx('footer')}\n                hide={this.props.closeModal}\n                isStoreDriven={false}\n                isOpen\n                hidePrimaryButton={this.props.hidePrimaryButton}\n            >\n                {this.props.bulletins && this.props.bulletins.map(({ contents, id }) => (\n                    <div\n                        key={id}\n                        dangerouslySetInnerHTML={{ __html: contents }}\n                        className={classnames('card-section card', cx('bulletin'))}\n                    />\n                ))}\n            </Modal>\n        );\n    }\n}\n\nBulletinsModal.propTypes = {\n    bulletins: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        contents: PropTypes.string.isRequired,\n    })),\n    reset: PropTypes.func.isRequired,\n    closeModal: PropTypes.func.isRequired,\n    hidePrimaryButton: PropTypes.bool,\n};\n\nBulletinsModal.defaultProps = {\n    hidePrimaryButton: false,\n};\n\nexport default connect(null, { reset })(BulletinsModal);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletin\":\"bulletin__3UmEL\",\"body\":\"body__udDub\",\"footer\":\"footer__PvMXm\"};","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('ADDRESS_REGISTRY');\n\nexport const FETCH_ADDRESSES = ns('FETCH_ADDRESSES');\nexport const FETCH_ASSETS = ns('FETCH_ASSETS');\nexport const ADD_ADDRESS = ns('ADD_ADDRESS');\nexport const EDIT_ADDRESS = ns('EDIT_ADDRESS');\nexport const VALIDATE_ADDRESS = ns('VALIDATE_ADDRESS');\nexport const SET_DELIVERY_PREFERENCE = ns('SET_DELIVERY_PREFERENCE');\nexport const RESET = ns('RESET');\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../rootStateSelector';\nimport {\n    FETCH_ALL_ARRAYS,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    ...getInitialState('accounts'),\n    ...getInitialState('accountsArrays'),\n};\n\nconst ACTION_HANDLERS = {\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: FETCH_ALL_ARRAYS, stateKey: 'accountsArrays' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).resellerArrays;\nexport const accountsCollectionSelector = createSelector(baseSelector, 'accountsArrays');\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\nconst ns = actionNamespacer('RESELLER_DASHBOARD');\n\nexport const RESET = ns('RESET');\nexport const FETCH_ALL_ARRAYS = ns('ACCOUNT_ARRAY_FETCH');\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('SETTINGS/USER');\n\nexport const FETCH = ns('FETCH');\nexport const CHANGE_ROLE = ns('CHANGE_ROLE');\nexport const DELETE = ns('DELETE');\nexport const CREATE = ns('CREATE');\nexport const RESET = ns('RESET');\n","import { getUserProfileApi, getUserProfile, getActiveTenant, UserContextChangeReason } from '@infosight/shell-api/lib/UserProfile';\nimport { getConfig } from '@infosight/shell-api/lib/Config';\nimport AccountController from 'app/modules/header/AccountController';\nimport LegacyApp from 'app/Application';\nimport { SET_AUTHORIZATION_EVALUATOR, SET_TENANT, USER_CONTEXT_CHANGED, EXPERIMENTAL_MODE_CHANGED, SET_PROFILE, SET_CONFIG } from './constants';\nimport Request from '../../services/Request';\n\nexport const loadAuthorizationEvaluator = () => async (dispatch) => {\n    try {\n        const { AuthorizationEvaluator } = await getUserProfileApi();\n        dispatch({ type: SET_AUTHORIZATION_EVALUATOR, payload: AuthorizationEvaluator });\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const loadUser = () => async (dispatch) => {\n    try {\n        const user = await getUserProfile();\n        LegacyApp.request('global', 'get:current:session').set(user);\n        dispatch({ type: SET_PROFILE, payload: user });\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const loadTenant = () => async (dispatch) => {\n    try {\n        let tenant = await getActiveTenant();\n\n        if (tenant && tenant.type === 'nimble') {\n            const id = tenant.id.replace('urn:nimble:');\n            const response = await new Request()\n                .slash('pod', 'accounts', id)\n                .query({ podLocator: `Nimble.Tenant.${id}`, boundary: `Nimble.Tenant.${id}` })\n                .get();\n            tenant = { tenant: response.data };\n        } else if (tenant && tenant.type === 'infosight') {\n            // TODO remove this case\n            // This is for backward compatibility. It should simply be an `else` rather than an `else if`\n            tenant = null;\n        }\n\n        dispatch({ type: SET_TENANT, payload: tenant });\n        await AccountController.setTenant(tenant && tenant.tenant);\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const loadConfig = () => async (dispatch) => {\n    try {\n        const config = await getConfig();\n        dispatch({ type: SET_CONFIG, payload: config });\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nexport const changeUserContext = (reason) => {\n    if (reason === UserContextChangeReason.ExperimentalMode) {\n        return { type: EXPERIMENTAL_MODE_CHANGED };\n    }\n\n    return { type: USER_CONTEXT_CHANGED, payload: reason };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Treebeard } from 'react-treebeard';\nimport autobind from 'react-autobind';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport treebeardStyle from './treebeardStyle.json';\n\nexport default class TreeView extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.state = {\n            treeData: [{ loading: true }],\n            cursor: undefined,\n        };\n    }\n\n    componentWillMount() {\n        const { data, createTree } = this.props;\n        this.setState({\n            treeData: createTree(data),\n        });\n    }\n\n    componentWillReceiveProps({ data, createTree }) {\n        if (this.props.data !== data) {\n            const treeData = createTree(data);\n            this.setState({ treeData });\n        }\n    }\n\n    onToggle(node) {\n        const { onSelect } = this.props;\n\n        if (node === this.state.cursor) {\n            onSelect(node.value);\n            return;\n        }\n\n        if (this.state.cursor) {\n            this.state.cursor.active = false;\n        }\n\n        node.active = true; // eslint-disable-line no-param-reassign\n\n        this.setState({ cursor: node }, () => onSelect(node.value, node));\n    }\n\n    onClickIcon(node, toggled) {\n        node.toggled = toggled; // eslint-disable-line no-param-reassign\n        this.forceUpdate();\n    }\n\n    render() {\n        const { treeData } = this.state;\n\n        return (\n            <div className={this.props.className}>\n                <NoData hasData={treeData} message={this.props.noDataMessage}>\n                    {() => (\n                        <Treebeard\n                            data={treeData}\n                            onToggle={this.onToggle}\n                            onClickIcon={this.onClickIcon}\n                            style={treebeardStyle}\n                        />\n                    )}\n                </NoData>\n            </div>\n        );\n    }\n}\n\nTreeView.propTypes = {\n    /**\n     * Callback that takes two parameters,`TreeNode.value` and `TreeNode`\n     */\n    onSelect: PropTypes.func,\n\n    /**\n     * Function to create the tree. It takes one parameter, `props.data`.\n     * We generate the tree as needed so it can be mutated internally.\n     * If this function doesn't care about the parameter, make sure to trigger a render as needed. This component\n     * will call createTree each time the reference to `props.data` is changed.\n     */\n    createTree: PropTypes.func.isRequired,\n\n    /**\n     * Source used to generate data backing the tree view.\n     * If needed you could create tree, accouting for mutations and have `props.createTree` simply return its\n     * input.\n     */\n    data: PropTypes.any.isRequired,\n\n    /**\n     * Message to display when `props.createTree()` returns falsey value\n     */\n    noDataMessage: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\n\nconst cx = classnames;\n\nconst Caret = ({ className, toggled, ...props }) => (\n    <i className={cx(className, 'fa', { 'fa-caret-right': !toggled, 'fa-caret-down': toggled })} {...props} />\n);\n\nCaret.propTypes = {\n    toggled: PropTypes.bool.isRequired,\n};\n\nCaret.defaultProps = {\n    toggled: false,\n};\n\nexport default Caret;\n","import TreeView from './TreeView';\nimport Caret from './Caret';\n\nexport default TreeView;\nexport { Caret };\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { Caret } from '../TreeView';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst PoolNodeHeader = ({ node: { name, parent }, onClick }) => {\n    const hasSiblings = parent.children.length > 1;\n    if (hasSiblings) {\n        return <span onClick={onClick} className={cx('name')}>{name}</span>;\n    }\n\n    return (\n        <span onClick={onClick} className={cx('name')}>\n            {parent.name} <span className={cx('sub-name')}>{name}</span>\n        </span>\n    );\n};\n\nPoolNodeHeader.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n        parent: PropTypes.shape({\n            name: PropTypes.string,\n        }),\n    }),\n    onClick: PropTypes.func,\n};\n\nconst PoolNodeIcon = props => <i className={cx('fa fa-th', 'icon')} {...props} />;\n\nconst PoolContainer = ({ onClick, onClickIcon, node }) => {\n    const hasChildren = node.children && node.children.length;\n\n    return (\n        <div className={cx('node')}>\n            <Caret\n                onClick={hasChildren ? onClickIcon : null}\n                toggled={node.toggled}\n                className={cx('caret', { invisible: !hasChildren })}\n            />\n            <PoolNodeIcon onClick={onClick} />\n            <PoolNodeHeader node={node} onClick={onClick} />\n        </div>\n    );\n};\n\nPoolContainer.propTypes = {\n    onClick: PropTypes.func,\n    onClickIcon: PropTypes.func,\n    node: PropTypes.object,\n};\nexport default PoolContainer;\n\n\nconst SelectedPool = ({ className, node }) => (\n    <div className={className}>\n        <PoolNodeIcon />\n        <PoolNodeHeader node={node} />\n    </div>\n);\n\nSelectedPool.propTypes = {\n    node: PropTypes.object,\n};\n\nexport { SelectedPool };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nexport const FolderNodeHeader = ({ node }) => (\n    <span className={cx('name')}>{node.name}</span>\n);\n\nFolderNodeHeader.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n};\n\nexport const FolderNodeIcon = () => (\n    <i className={cx('fa fa-folder-o', 'icon')} />\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { Caret } from '../TreeView';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst ArrayGroupNodeHeader = ({ node }) => <span className={cx('name')}>{node.name}</span>;\n\nArrayGroupNodeHeader.propTypes = {\n    node: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n};\n\nconst ArrayGroupContainer = ({ node }) => (\n    <div className={cx('node', 'disabled', 'text-muted')}>\n        <Caret toggled className={cx('caret', 'invisible')} />\n        <i className={cx('fa fa-server', 'icon')} />\n        <ArrayGroupNodeHeader node={node} />\n    </div>\n);\n\nArrayGroupContainer.propTypes = {\n    node: PropTypes.object,\n};\n\nexport default ArrayGroupContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst Container = ({ onClick, node, decorators: { Toggle, Header } }) => (\n    <button onClick={onClick} className={cx('node')}>\n        <Toggle />\n        <Header node={node} />\n    </button>\n);\n\nContainer.propTypes = {\n    onClick: PropTypes.func,\n    node: PropTypes.object,\n    decorators: PropTypes.shape({\n        Toggle: PropTypes.func.isRequired,\n        Header: PropTypes.func.isRequired,\n    }),\n};\n\nexport default Container;\n","import React from 'react';\nimport { flatten, compact } from 'underscore';\nimport Spinner from '@infosight/elmer/dist/components/Spinner';\nimport PoolContainer from './nodeDecorators/Pool';\nimport { FolderNodeHeader, FolderNodeIcon } from './nodeDecorators/Folder';\nimport ArrayGroupContainer from './nodeDecorators/ArrayGroup';\nimport Container from './nodeDecorators/Container';\nimport { POOL, FOLDER, ARRAY_GROUP, ROOT } from '../../constants';\n\nconst poolNodeDecorators = {\n    Loading: () => (<Spinner />),\n    Container: PoolContainer,\n};\n\nconst groupNodeDecorators = {\n    Loading: () => (<Spinner />),\n    Container: ArrayGroupContainer,\n};\n\nconst folderNodeDecorators = {\n    Loading: () => (<Spinner />),\n    Container,\n    Toggle: FolderNodeIcon,\n    Header: FolderNodeHeader,\n};\n\nconst clone = tree => JSON.parse(JSON.stringify(tree));\n\nexport default function createTree(objectRelationGraph) {\n    const getVisitor = parentNode =>\n        (node) => {\n            const visitor = visitors[node.type]; // eslint-disable-line no-use-before-define\n            if (visitor) {\n                visitor(node, parentNode);\n            } else if (parentNode) {\n                parentNode.children[parentNode.children.indexOf(node)] = undefined; // eslint-disable-line\n                // no-param-reassign\n            }\n        };\n\n    const visit = node => node.children.forEach(getVisitor(node));\n\n    const visitors = {\n        [ROOT]: (node) => {\n            visit(node);\n\n            const children = node.children.map((child) => {\n                // If a group has multiple pools, show the group\n                if (child.children && child.children.length > 1) {\n                    return child;\n                }\n\n                // Otherwise replace the node with its lone child node (or no node)\n                return child.children[0];\n            });\n\n            Object.assign(node, {\n                children: compact(flatten(children)),\n            });\n        },\n        [ARRAY_GROUP]: (node) => {\n            visit(node);\n\n            const children = compact(node.children);\n            Object.assign(node, {\n                children,\n                decorators: groupNodeDecorators,\n                toggled: true,\n            });\n        },\n        [POOL]: (node, parent) => {\n            visit(node);\n\n            Object.assign(node, {\n                parent,\n                decorators: poolNodeDecorators,\n                toggled: false,\n                children: compact(node.children),\n            });\n        },\n        [FOLDER]: (node, parent) => {\n            Object.assign(node, {\n                parent,\n                decorators: folderNodeDecorators,\n            });\n        },\n    };\n\n    const tree = clone(objectRelationGraph);\n    visitors[ROOT](tree);\n    return tree.children;\n}\n","import _ from 'underscore';\nimport { ARRAY_GROUP, FOLDER, POOL, ROOT } from '../../constants';\n\nconst createChildren = children => _(children)\n    .chain()\n    .values()\n    .map(createTree) // eslint-disable-line no-use-before-define\n    .sortBy('name')\n    .value();\n\nconst createTree = ({ children, ...node }) => ({\n    ...node,\n    children: children ? createChildren(children) : undefined,\n});\n\nconst createNode = (id, type, name, value) => ({ id, type, name, value, children: {} });\n\nexport default function createObjectGraph(relations) {\n    if (!relations) {\n        return undefined;\n    }\n\n    const children = relations.reduce((base, relation) => {\n        const { groupUID: groupId, poolUID: poolUid, folderUID: folderId } = relation;\n        const { groupName, poolName, folderName } = relation;\n\n        if (!base[groupId]) {\n            base[groupId] = createNode(groupId, ARRAY_GROUP, groupName); // eslint-disable-line no-param-reassign\n        }\n\n        if (poolUid) {\n            const group = base[groupId];\n\n            if (!group.children[poolUid]) {\n                const value = { ...relation, type: POOL };\n                group.children[poolUid] = createNode(poolUid, POOL, poolName, value);\n            }\n\n            if (folderId) {\n                const pool = group.children[poolUid];\n\n                if (!pool.children[folderId]) {\n                    const value = { ...relation, type: FOLDER };\n                    pool.children[folderId] = createNode(folderId, FOLDER, folderName, value);\n                }\n            }\n        }\n\n        return base;\n    }, {});\n\n    return createTree({ children, id: ROOT, type: ROOT, name: ROOT });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport autobind from 'react-autobind';\nimport TreeView from './TreeView';\nimport createTree from './createTree';\nimport createObjectGraph from './createObjectGraph';\nimport { objectRelationshipsSelector } from '../../reducer/objectRelationships';\n\nclass PoolFolderTreeView extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    createTree() {\n        const { data } = this.props;\n        if (data && data.length) {\n            return createTree(createObjectGraph(data));\n        }\n\n        return [];\n    }\n\n    render() {\n        const { onSelect, data, className } = this.props;\n        return <TreeView data={data} createTree={this.createTree} onSelect={onSelect} className={className} />;\n    }\n}\n\nPoolFolderTreeView.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        arraySn: PropTypes.string.isRequired,\n        groupUID: PropTypes.string.isRequired,\n        groupName: PropTypes.string.isRequired,\n        poolUID: PropTypes.string.isRequired,\n        poolName: PropTypes.string.isRequired,\n        folderUID: PropTypes.string,\n        folderName: PropTypes.string,\n    })),\n    onSelect: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    data: objectRelationshipsSelector(state).relationships,\n});\n\nexport default connect(mapStateToProps)(PoolFolderTreeView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NimbleIcon from '../../../nimble/components/NimbleIcon/NimbleIcon';\nimport { FOLDER, POOL, ALL } from '../../constants';\n\nconst Selection = ({ value, className }) => {\n    if (!value) {\n        return <div className={className} />;\n    }\n\n    switch (value.type) {\n    case FOLDER:\n        return (\n            <div className={className}>\n                <NimbleIcon name=\"Folder\" /> <span>{value.folderName}</span>\n            </div>\n        );\n    case POOL:\n        return (\n            <div className={className}>\n                <NimbleIcon name=\"Pool\" />\n                <span> {value.groupName} <span className=\"subtitle\">{value.poolName}</span></span>\n            </div>\n        );\n    case ALL:\n    default:\n        return (<div className={className}>All Pools</div>);\n    }\n};\n\nSelection.propTypes = {\n    value: PropTypes.shape({\n        arraySn: PropTypes.string,\n        groupUID: PropTypes.string,\n        groupName: PropTypes.string,\n        poolUID: PropTypes.string,\n        poolName: PropTypes.string,\n        folderName: PropTypes.string,\n    }),\n};\n\nexport default Selection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport autobind from 'react-autobind';\nimport style from './style.scss';\nimport { ComplexDropdown } from '../../../../components/Dropdown';\nimport PoolFolderTreeView from './PoolFolderTreeView';\nimport Selection from '../containers/Selection';\nimport { ALL } from '../../constants';\n\nconst cx = classnames.bind(style);\n\nclass PoolFolderTreeViewDropdown extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    onSelectAll() {\n        this.props.onSelect({ type: ALL });\n    }\n\n    render() {\n        const { className, menuClassName, onSelect, value, disabled } = this.props;\n\n        return (\n            <ComplexDropdown\n                className={className}\n                menuClassName={menuClassName}\n                value={value}\n                valueRenderer={() => <Selection value={value} className={cx('selection')} />}\n                disabled={disabled}\n            >\n                <button className={cx('all-pools')} onClick={this.onSelectAll}>\n                    All Pools\n                </button>\n                <PoolFolderTreeView onSelect={onSelect} className={cx('treeview')} />\n            </ComplexDropdown>\n        );\n    }\n}\n\nPoolFolderTreeViewDropdown.propTypes = {\n    menuClassName: PropTypes.string,\n    value: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        name: PropTypes.string,\n        id: PropTypes.string,\n    }),\n    onSelect: PropTypes.func.isRequired,\n    disabled: PropTypes.bool.isRequired,\n};\n\nPoolFolderTreeViewDropdown.defaultProps = {\n    disabled: false,\n};\n\nexport default PoolFolderTreeViewDropdown;\n","import PoolFolderTreeViewDropdown from './PoolFolderTreeViewDropdown';\n\nexport default PoolFolderTreeViewDropdown;\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport {\n    FOLDER_CAPACITY_APPLICATIONS_FETCH,\n    FOLDER_CAPACITY_SUMMARY_FETCH,\n    FOLDER_CAPACITY_TIME_SERIES_FETCH,\n    FOLDER_CAPACITY_RESET,\n    DEFAULT_FOLDER,\n} from '../constants';\nimport Request from '../../../services/Request';\n\n// IS-11262 - \"default\" is an alias for null when a pool has multiple folders\nconst getFolderId = folderId => (folderId === DEFAULT_FOLDER ? 'null' : folderId);\n\nexport const getFolderCapacityTimeSeries = ({ poolUid, folderId, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(FOLDER_CAPACITY_TIME_SERIES_FETCH, dispatch);\n    dispatchStart();\n\n    return new Request().pod().account()\n        .urlSegment(`capacity/pools/${poolUid}/folders/${getFolderId(folderId)}/timeSeries`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport const getFolderCapacitySummary = ({ poolUid, folderId, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(FOLDER_CAPACITY_SUMMARY_FETCH, dispatch);\n    dispatchStart();\n\n    return new Request().pod().account()\n        .urlSegment(`capacity/pools/${poolUid}/folders/${getFolderId(folderId)}`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data[0] : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport const getFolderCapacityApplications = ({ poolUid, folderId, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(FOLDER_CAPACITY_APPLICATIONS_FETCH, dispatch);\n    dispatchStart();\n\n    return new Request().pod().account()\n        .urlSegment(`capacity/pools/${poolUid}/folders/${getFolderId(folderId)}/applications`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport function getFolderCapacity(options) {\n    return (dispatch) => {\n        getFolderCapacityTimeSeries(options)(dispatch);\n        getFolderCapacityApplications(options)(dispatch);\n        getFolderCapacitySummary(options)(dispatch);\n    };\n}\n\nexport function resetFolderCapacity() {\n    return { type: FOLDER_CAPACITY_RESET };\n}\n","import classnames from 'classnames/bind';\nimport numeral from 'numeral';\nimport { FillPattern } from '@infosight/elmer/dist/charts/highcharts';\nimport style from './style.scss';\nimport { lightGrey04 } from '../../../../util/colors';\n\nconst cx = classnames.bind(style);\n\nconst unusedReservePattern = new FillPattern('unusedReservePattern')\n    .svgPath(FillPattern.patterns[0])\n    .strokeWidth(1)\n    .strokeColor('#B0CED4')\n    .dimensions(5)\n    .fillColor(lightGrey04);\n\nexport default ({ height, width, data }) => ({\n    chart: {\n        type: 'pie',\n        spacingTop: 0,\n        spacingBottom: 0,\n        spacingLeft: 0,\n        spacingRight: 0,\n        marginTop: -10,\n        marginRight: 0,\n        marginBottom: -10,\n        marginLeft: -20,\n        height,\n        width,\n    },\n    defs: {\n        patterns: [unusedReservePattern],\n    },\n    title: false,\n    plotOptions: {\n        pie: {\n            shadow: false,\n            dataLabels: {\n                enabled: false,\n            },\n            center: [height / 2, '50%'],\n        },\n    },\n    tooltip: {\n        enabled: false,\n    },\n    series: [\n        {\n            name: 'Series',\n            data,\n            showInLegend: true,\n            size: '100%',\n            innerSize: '85%',\n            borderWidth: 0,\n            states: {\n                hover: {\n                    enabled: false,\n                },\n            },\n        },\n    ],\n    legend: {\n        enabled: true,\n        layout: 'vertical',\n        // itemStyle: {width: '50%'},\n        align: 'left',\n        width: 0,\n        x: height + 20,\n        verticalAlign: 'middle',\n        padding: 0,\n        margin: 0,\n        itemMarginTop: 5,\n        itemMarginBottom: 5,\n        symbolHeight: 10,\n        symbolWidth: 10,\n        useHTML: true,\n        labelFormatter() {\n            return `<div class=\"\"${cx('legend')}>\n                        <span class=\"\"${cx('left')}>${this.name}</span>\n                        <span class=\"\"${cx('right')}>${numeral(this.y).format('0.0 ib')}</span>\n                    </div>`;\n        },\n    },\n});\n","// https://confluence.eng.nimblestorage.com/display/UXPatternLibrary/Color+palette\nexport const black = '#000';\nexport const white = '#FFF';\nexport const darkGrey01 = '#36373B';\nexport const darkGrey02 = '#444';\nexport const darkGrey03 = '#56575E';\nexport const mediumGrey01 = '#666';\nexport const mediumGrey02 = '#888';\nexport const mediumGrey03 = '#CCC';\nexport const lightGrey01 = '#E3E6EA';\nexport const lightGrey02 = '#EEF0F2';\nexport const lightGrey03 = '#EEF0F2';\nexport const lightGrey04 = '#EEE';\nexport const lightGrey05 = '#F4F6F9';\nexport const lightGrey06 = '#FAFAFA';\nexport const lightBlueGrey01 = '#E2E6EA';\nexport const lightBlueGrey02 = '#EFF1F5';\nexport const lightBlueGrey03 = '#F4F6F9';\nexport const green01 = '#63A704';\nexport const nimbleGreen = '#77BC1F';\nexport const green02 = '#9DCF65';\nexport const blue01 = '#1973CB';\nexport const blue02 = '#1197EB';\nexport const blue03 = '#32B2F8';\nexport const orange01 = '#FC9935';\nexport const orange02 = '#FFAD00';\nexport const nimbleYellow = '#DDFF00';\nexport const red01 = '#D3524D';\nexport const red02 = '#FF6363';\n","import numeral from 'numeral';\n\nexport const byteToTibibyte = bytes => bytes / (2 ** 40);\n\nexport const getByteFormat = maxCapacityBytes => (byteToTibibyte(maxCapacityBytes) < 25 ? '0.000' : '0');\n\nexport const formatBytes = (bytes, maxCapacityBytes) =>\n    numeral(byteToTibibyte(bytes)).format(getByteFormat(maxCapacityBytes));\n\nexport const VOLUME_USAGE_COLOR = '#2d94cf';\nexport const SNAPSHOT_USAGE_COLOR = '#66CCCC';\nexport const TOTAL_USAGE_COLOR = VOLUME_USAGE_COLOR;\nexport const LIMIT_COLOR = '#f1c232';\nexport const FREE_SPACE_COLOR = '#EEF0F2';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport numeral from 'numeral';\nimport { isNumber } from 'underscore';\nimport chartOptions from './chartOptions';\nimport { lightGrey04, darkGrey02 } from '../../../../util/colors';\nimport { TOTAL_USAGE_COLOR } from '../../util';\nimport style from './style.scss';\n\n\nexport class PoolUsageChart extends PureComponent {\n    data() {\n        const { poolCapacityUsed, poolFree, poolUnusedReserve } = this.props;\n        const data = [{\n            name: 'Total Usage',\n            y: poolCapacityUsed,\n            color: TOTAL_USAGE_COLOR,\n        }];\n\n        if (poolUnusedReserve && isNumber(poolUnusedReserve)) {\n            data.push({\n                name: 'Unused Reserve',\n                y: poolUnusedReserve,\n                color: 'url(#unusedReservePattern)',\n            });\n        }\n\n        data.push({\n            name: 'Free Space',\n            y: poolFree,\n            color: lightGrey04,\n        });\n\n        return data;\n    }\n\n    config() {\n        const { poolCapacityUsed, poolFree, poolUsedPct, containerHeight, containerWidth } = this.props;\n        if (![poolCapacityUsed, poolFree, poolUsedPct].every(isNumber)) {\n            return null;\n        }\n\n        const options = chartOptions({ height: containerHeight, width: containerWidth, data: this.data() });\n        options.title = {\n            text: `<div style=\"width: ${containerHeight}px\" class=\"${style.value}\">\n                        ${numeral(poolUsedPct).format('0')}%\n                   </div>`,\n            useHTML: true,\n            align: 'left',\n            y: 10,\n            verticalAlign: 'middle',\n            style: {\n                'text-align': 'center',\n                'font-size': '24px',\n                'font-family': \"'Helvetica Neue', Helvetica, Roboto, Arial, sans-serif\",\n                color: darkGrey02,\n            },\n        };\n\n        return options;\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} />}\n            </NoData>\n        );\n    }\n}\n\nPoolUsageChart.propTypes = {\n    poolCapacityUsed: PropTypes.number.isRequired,\n    poolFree: PropTypes.number.isRequired,\n    poolUnusedReserve: PropTypes.number.isRequired,\n    poolUsedPct: PropTypes.number.isRequired,\n    containerHeight: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n};\n\nPoolUsageChart.defaultProps = {\n    containerHeight: 0,\n    containerWidth: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(PoolUsageChart);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactHighcharts } from '@infosight/elmer/dist/components/ReactHighcharts';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport ReactDimensions from 'react-dimensions';\nimport { isNumber } from 'underscore';\nimport { lightGrey04 } from '../../../../util/colors';\nimport chartOptions from './chartOptions';\nimport { SNAPSHOT_USAGE_COLOR, VOLUME_USAGE_COLOR } from '../../util';\n\nexport class FolderUsageChart extends PureComponent {\n    data() {\n        const { volumeUsage, snapshotUsage, unusedReserve, limit } = this.props;\n\n        const data = [{\n            name: 'Volume Usage',\n            y: volumeUsage,\n            color: VOLUME_USAGE_COLOR,\n        }, {\n            name: 'Snapshot Usage',\n            y: snapshotUsage,\n            color: SNAPSHOT_USAGE_COLOR,\n        }];\n\n        if (unusedReserve !== 0) {\n            data.push({\n                name: 'Unused Reserve',\n                y: unusedReserve,\n                color: 'url(#unusedReservePattern)',\n            });\n        }\n\n        data.push({\n            name: 'Unused',\n            y: limit - (volumeUsage + snapshotUsage + unusedReserve),\n            color: lightGrey04,\n        });\n\n        return data;\n    }\n\n    config() {\n        const { volumeUsage, snapshotUsage, unusedReserve, containerHeight } = this.props;\n\n        if (![volumeUsage, snapshotUsage, unusedReserve].every(isNumber)) {\n            return null;\n        }\n\n        return chartOptions({ height: containerHeight, data: this.data() });\n    }\n\n    render() {\n        const config = this.config();\n\n        return (\n            <NoData hasData={!!config}>\n                {() => <ReactHighcharts config={config} />}\n            </NoData>\n        );\n    }\n}\n\nFolderUsageChart.propTypes = {\n    volumeUsage: PropTypes.number,\n    snapshotUsage: PropTypes.number,\n    unusedReserve: PropTypes.number,\n    limit: PropTypes.number,\n    containerHeight: PropTypes.number,\n};\n\nexport default ReactDimensions({ elementResize: true })(FolderUsageChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport numeral from 'numeral';\nimport style from './FolderUsageBarChart.scss';\nimport { SNAPSHOT_USAGE_COLOR, VOLUME_USAGE_COLOR, LIMIT_COLOR, FREE_SPACE_COLOR } from '../../util';\n\nconst cx = classnames.bind(style);\n\n// TODO Might be extracted at some point. Array GUI doesn't use highcharts legends; they are custom.\nconst LegendItem = ({ swatchClassName, color, name, value }) => {\n    const [displayValue, unit] = numeral(value).format('0.00 ib').split(' ');\n\n    return (\n        <div className={classnames(cx('legend'))}>\n            <span className={cx('legend-name')}>\n                <i className={classnames(swatchClassName, cx('swatch'))} style={{ backgroundColor: color }} />\n                {name}\n            </span>\n            <span className={cx('legend-value')}>{displayValue}</span>\n            <span className={cx('legend-unit')}>{unit}</span>\n        </div>\n    );\n};\n\nLegendItem.propTypes = {\n    color: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    swatchClassName: PropTypes.string,\n};\n\n// TODO convert to a common component BarChart that doesn't use Highcharts\nconst FolderUsageBarChart = ({ className, volumeUsage, snapshotUsage, unusedReserve, limit }) => {\n    let includeLimitCaret = true;\n    let total = (volumeUsage || 0) + (snapshotUsage || 0) + (unusedReserve || 0);\n    let freeSpace = limit - total;\n\n    if (freeSpace > 0) {\n        total = limit;\n        includeLimitCaret = false;\n    } else {\n        freeSpace = 0;\n    }\n\n    const percentage = value => numeral(value / total).format('0%');\n\n    const limitPercent = percentage(limit);\n    const volumePercent = percentage(volumeUsage);\n    const snapshotPercent = percentage(snapshotUsage);\n    const unusedReservePercent = percentage(unusedReserve);\n\n    return (\n        <div className={className}>\n            <div className={cx('bar-chart')}>\n                <div\n                    className={cx('bar', { 'is-zero': volumePercent === '0%' })}\n                    style={{ width: volumePercent, backgroundColor: VOLUME_USAGE_COLOR }}\n                />\n                <div\n                    className={cx('bar', { 'is-zero': snapshotPercent === '0%' })}\n                    style={{ width: snapshotPercent, backgroundColor: SNAPSHOT_USAGE_COLOR }}\n                />\n                {!!unusedReserve && (\n                    <div\n                        className={cx('striped', 'bar', { 'is-zero': unusedReservePercent === '0%' })}\n                        style={{ width: unusedReservePercent }}\n                    />\n                )}\n                {includeLimitCaret && (\n                    <div className={cx('caret')} style={{ left: limitPercent }}>\n                        <i className=\"fa fa-caret-up\" style={{ position: 'relative', left: '-0.4ch' }} />\n                    </div>\n                )}\n            </div>\n            <div className={cx('legend-container')}>\n                <LegendItem name=\"Volume Usage\" value={volumeUsage} color={VOLUME_USAGE_COLOR} />\n                <LegendItem name=\"Snapshot Usage\" value={snapshotUsage} color={SNAPSHOT_USAGE_COLOR} />\n                {!!unusedReserve && (\n                    <LegendItem\n                        name=\"Unused Reserve\"\n                        value={unusedReserve}\n                        swatchClassName={cx('striped')}\n                        color=\"white\"\n                    />\n                )}\n                <LegendItem name=\"Limit\" value={limit} color={LIMIT_COLOR} />\n                {!!freeSpace && <LegendItem name=\"Free Space\" value={freeSpace} color={FREE_SPACE_COLOR} />}\n            </div>\n        </div>\n    );\n};\n\nFolderUsageBarChart.propTypes = {\n    volumeUsage: PropTypes.number,\n    snapshotUsage: PropTypes.number,\n    unusedReserve: PropTypes.number,\n    limit: PropTypes.number,\n};\n\nexport default FolderUsageBarChart;\n","import React from 'react';\nimport { sortBy, pluck, compact } from 'underscore';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\n\nexport const percentGrowthRenderer = value => (value === null ? 'N/A' : <PercentGrowth value={value} isPercent />);\n\nexport const getMaxTotalUsage = (data, key = 'totalUsed') => {\n    if (data && data.length) {\n        return Math.max.apply(null, compact(pluck(data, key)));\n    }\n\n    return null;\n};\n\nexport const getSortedValues = values => (values ? sortBy(values, ({ totalUsed }) => 0 - totalUsed) : null);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isNumber } from 'underscore';\nimport classnames from 'classnames';\nimport calcPercent from './calcPercent';\n\nconst Bar = ({ className, value, min, max, color }) => {\n    if (!isNumber(min) || !isNumber(max) || !isNumber(value)) {\n        return null;\n    }\n\n    const style = {\n        width: `${calcPercent(min, max, value)}%`,\n        backgroundColor: color,\n    };\n\n    return (\n        <span className={classnames('progress-bar', className)} style={style} />\n    );\n};\n\nBar.propTypes = {\n    value: PropTypes.number,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    color: PropTypes.string,\n};\n\nBar.defaultProps = {\n    value: 0,\n    min: 0,\n    max: 100,\n};\n\nexport default Bar;\n","export default function calcPercent(min, max, value) {\n    if (max <= min || value > max || value < min) {\n        throw new Error(`Invalid input min: ${min}, max: ${max}, value: ${value}.\nValid cases are max !== min, value <= max, value >= min`);\n    }\n\n    return (100 * (value - min)) / (max - min);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { isNumber } from 'underscore';\nimport Bar from './Bar';\nimport './style.scss';\n\nconst Progress = ({ className, value, min, max, color, context }) => {\n    if (!isNumber(min) || !isNumber(max) || !isNumber(value)) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames(className, 'progress', context)}\n            aria-valuemax={max}\n            aria-valuemin={min}\n            aria-valuenow={value}\n            role=\"progressbar\"\n        >\n            <Bar value={value} color={color} max={max} min={min} />\n        </div>\n    );\n};\n\n// Either percent | value & number are required. percent is primary\nProgress.propTypes = {\n    value: PropTypes.number,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    color: PropTypes.string,\n    context: PropTypes.oneOf(['chart', 'thin']),\n};\n\nProgress.defaultProps = {\n    value: 0,\n    min: 0,\n    max: 100,\n    context: 'thin',\n};\n\nexport default Progress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { isNumber } from 'underscore';\nimport Bar from './Bar';\n\nconst StackedProgress = ({ className, values, min, max, colors, context }) => {\n    if (!isNumber(min) || !isNumber(max) || values.length !== colors.length) {\n        return null;\n    }\n\n    return (\n        <div\n            className={classnames(className, 'progress', context)}\n            aria-valuemax={max}\n            aria-valuemin={min}\n            role=\"progressbar\"\n        >\n            {values.map((value, index) => (\n                <Bar key={colors[index]} value={value} color={colors[index]} min={min} max={max} />\n            ))}\n        </div>\n    );\n};\n\n// Either percent | value & number are required. percent is primary\nStackedProgress.propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    values: PropTypes.arrayOf(PropTypes.number),\n    colors: PropTypes.arrayOf(PropTypes.string),\n    context: PropTypes.oneOf(['chart', 'thin']),\n};\n\nStackedProgress.defaultProps = {\n    min: 0,\n    max: 100,\n    context: 'thin',\n};\n\nexport default StackedProgress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Progress from './Progress';\nimport StackedProgress from './StackedProgress';\nimport BEM from '../util/bem';\nimport './style.scss';\n\nconst bem = new BEM('nmbl-ProgressWithValue');\n\nconst ProgressWithValue = ({ className, children, leftLabel, rightLabel }) => {\n    if (children.type !== Progress && children.type !== StackedProgress) {\n        if (__DEBUG__) {\n            throw new Error('props.children must be an element of type Progress or StackedProgress.');\n        }\n\n        return null;\n    }\n\n    return (\n        <div className={classnames(className, bem.valueOf(), 'clearfix')}>\n            {!!leftLabel && <span className={classnames(bem.e('left'))}>{leftLabel}</span>}\n            {!!rightLabel && <span className={classnames(bem.e('right'))}>{rightLabel}</span>}\n            {children}\n        </div>\n    );\n};\n\nProgressWithValue.propTypes = {\n    /**\n     * Should be a Progress or StackedProgress element\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * Label on left edge of progress bar, typically the value or sum of values represented by the progress bar\n     */\n    leftLabel: PropTypes.node,\n\n    /**\n     * Label on right edge of progress bar, typically the max or terminal value of the progress bar\n     */\n    rightLabel: PropTypes.node,\n};\n\nexport default ProgressWithValue;\n","export default class BEM {\n    static nextValue(bem) {\n        return bem.chainable ? bem : bem.valueOf();\n    }\n\n    constructor(blockOrValues) {\n        if (typeof blockOrValues === 'object') {\n            const { block, element, modifier, chainable = false } = blockOrValues;\n            Object.assign(this, { block, element, modifier, chainable });\n        } else if (typeof blockOrValues === 'string') {\n            this.block = blockOrValues;\n        } else {\n            throw new Error('contructor argument must be a string or object');\n        }\n    }\n\n    cloneWith(constructorOptions) {\n        return new BEM({ ...this, ...constructorOptions });\n    }\n\n    e(element) {\n        return BEM.nextValue(this.cloneWith({ element }));\n    }\n\n    m(modifier) {\n        return BEM.nextValue(this.cloneWith({ modifier }));\n    }\n\n    valueOf() {\n        const { block, element, modifier } = this;\n        let className = block;\n        if (element) {\n            className = `${className}__${element}`;\n        }\n\n        if (modifier) {\n            className = `${className}--${modifier}`;\n        }\n\n        return className;\n    }\n\n    chain() {\n        return BEM.nextValue(this.cloneWith({ chainable: true }));\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport numeral from 'numeral';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nfunction SavingsDetail({ className, name, savings, factor }) {\n    return (\n        <div className={cx('detail', className)}>\n            <div className={cx('savings-name')}>{name}</div>\n            <div className={cx('savings-value')}>\n                {savings !== undefined ? numeral(savings).format('0.0 ib') : null}\n                {factor !== undefined ? ` | ${factor}x` : null}\n                {savings === undefined && factor === undefined ? 'N/A' : null}\n            </div>\n        </div>\n    );\n}\n\nSavingsDetail.propTypes = {\n    name: PropTypes.string.isRequired,\n    savings: PropTypes.number,\n    factor: PropTypes.number,\n};\n\nexport default SavingsDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { isNumber } from 'underscore';\nimport style from './style.scss';\nimport SavingsDetail from './SavingsDetail';\n\nconst cx = classnames.bind(style);\n\nconst Popover = ({ cloneSavings, dedupSavings, compressionSavings }) => (\n    <div className={cx('popover')}>\n        {isNumber(cloneSavings) && cloneSavings > 0 && <SavingsDetail name=\"Clones\" savings={cloneSavings} />}\n        {isNumber(dedupSavings) && dedupSavings > 0 && <SavingsDetail name=\"Deduplication\" savings={dedupSavings} />}\n        {isNumber(compressionSavings) && compressionSavings > 0 && (\n            <SavingsDetail name=\"Compression\" savings={compressionSavings} />\n        )}\n    </div>\n);\n\nPopover.propTypes = {\n    cloneSavings: PropTypes.number,\n    dedupSavings: PropTypes.number,\n    compressionSavings: PropTypes.number,\n};\n\nexport default Popover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport OverlayTrigger from '@infosight/elmer/dist/components/OverlayTrigger';\nimport style from './style.scss';\nimport Popover from './Popover';\n\nconst cx = classnames.bind(style);\n\nfunction SavingsBreakdownPopover({ className, children, ...props }) {\n    return (\n        <OverlayTrigger trigger=\"hover\" overlay={<Popover {...props} />} placement=\"bottom\">\n            <div className={cx(className, 'popover-link')}>\n                {children}\n            </div>\n        </OverlayTrigger>\n    );\n}\n\nSavingsBreakdownPopover.propTypes = {\n    cloneSavings: PropTypes.number,\n    dedupSavings: PropTypes.number,\n    compressionSavings: PropTypes.number,\n    children: PropTypes.node,\n};\n\nexport default SavingsBreakdownPopover;\n","import React from 'react';\nimport numeral from 'numeral';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport { COLUMN_WIDTHS } from '@infosight/elmer/dist/components/Table';\nimport { Progress, ProgressWithValue } from '../../../../components/Progress';\nimport NamedNimbleIcon from '../../../nimble/components/NamedNimbleIcon';\nimport SavingsBreakdownPopover from '../savings/SavingsBreakdownPopover';\nimport { SNAPSHOT_USAGE_COLOR, VOLUME_USAGE_COLOR } from '../../util';\n\n/* eslint-disable react/prop-types */\n\nconst applicationsConfig = (maxTotalUsage, maxTotalPhysicalUsage) => ({\n    categories: ['space'],\n    columns: [\n        {\n            Header: 'Application',\n            accessor: 'applicationCategory',\n            minWidth: COLUMN_WIDTHS.LARGE,\n            Cell: ({ original: { applicationCategory } }) => <NamedNimbleIcon iconName={applicationCategory} inline />,\n        },\n        {\n            Header: 'Volumes',\n            accessor: 'volumeCount',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { volumeCount } }) => <span>{ volumeCount }</span>,\n        },\n        {\n            Header: 'Volume Usage',\n            accessor: 'volumeUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { volumeUsed } }) => (\n                <ProgressWithValue leftLabel={numeral(volumeUsed).format('0.0 ib')}>\n                    <Progress\n                        color={VOLUME_USAGE_COLOR}\n                        max={maxTotalUsage}\n                        value={volumeUsed}\n                    />\n                </ProgressWithValue>\n            ),\n        },\n        {\n            Header: 'Snapshot Usage',\n            accessor: 'snapshotUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { snapshotUsed } }) => (\n                <ProgressWithValue leftLabel={numeral(snapshotUsed).format('0.0 ib')}>\n                    <Progress\n                        color={SNAPSHOT_USAGE_COLOR}\n                        max={maxTotalUsage}\n                        value={snapshotUsed}\n                    />\n                </ProgressWithValue>\n            ),\n        },\n        {\n            Header: 'Physical Usage (After Deduplication)',\n            accessor: 'totalPhysicalUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { totalPhysicalUsed } }) => (\n                <ProgressWithValue leftLabel={numeral(totalPhysicalUsed).format('0.00 ib')}>\n                    <Progress\n                        color={VOLUME_USAGE_COLOR}\n                        max={maxTotalPhysicalUsage}\n                        value={totalPhysicalUsed}\n                    />\n                </ProgressWithValue>\n            ),\n        },\n        {\n            Header: 'Past Growth (days)',\n            headerClassName: 'text-center',\n            columns: [\n                {\n                    Header: '90',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct90day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct90day } }) => (growthPct90day === null ? '' : <PercentGrowth value={growthPct90day} isPercent />),\n                },\n                {\n                    Header: '60',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct60day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct60day } }) => (growthPct60day === null ? '' : <PercentGrowth value={growthPct60day} isPercent />),\n                },\n                {\n                    Header: '30',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct30day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct30day } }) => (growthPct30day === null ? '' : <PercentGrowth value={growthPct30day} isPercent />),\n                },\n            ],\n        },\n        {\n            Header: 'Savings',\n            accessor: 'totalPhysicalUsed',\n            minWidth: COLUMN_WIDTHS.MEDIUM,\n            Cell: ({ original }) => {\n                const { savingsFactor, totalSavings } = original;\n                let child = null;\n                if (totalSavings !== undefined) {\n                    const [value, unit] = numeral(totalSavings).format('0.0 ib').split(' ');\n                    child = `${value} ${unit || 'B'}`;\n                    if (savingsFactor !== undefined) {\n                        child = `${child} | ${numeral(savingsFactor).format('0.00')}x`;\n                    }\n                }\n                if (totalSavings <= 0) {\n                    return <span>{child}</span>;\n                }\n                return <SavingsBreakdownPopover {...original}>{child}</SavingsBreakdownPopover>;\n            },\n        },\n    ],\n});\n\nexport { applicationsConfig as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { ClientControlledTable } from '@infosight/elmer/dist/components/Table';\nimport { getSortedValues, getMaxTotalUsage } from './gridViewOptions';\nimport applicationsConfig from './applicationsConfig';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nfunction ApplicationsTable({ values, loadingCollection, userName }) {\n    const data = getSortedValues(values || []);\n    const maxTotalUsage = getMaxTotalUsage(data);\n    const maxTotalPhysicalUsage = getMaxTotalUsage(data, 'totalPhysicalUsed');\n\n    const { columns, categories } = applicationsConfig(maxTotalUsage, maxTotalPhysicalUsage);\n\n    return (\n        <div className={cx('applications-container')}>\n            <ClientControlledTable\n                tableId={`${userName}_NIMBLE_APPLICATIONS_CAPACITY`}\n                data={data || []}\n                columns={columns}\n                categories={categories}\n                loading={loadingCollection}\n                syncUrl={false}\n            />\n        </div>\n    );\n}\n\nApplicationsTable.propTypes = {\n    loadingCollection: PropTypes.bool.isRequired,\n    userName: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.shape({\n        applicationCategory: PropTypes.string, // Default is \"default\"\n        volumeCount: PropTypes.number.isRequired,\n        volumeUsed: PropTypes.number.isRequired,\n        snapshotUsed: PropTypes.number.isRequired,\n        totalUsed: PropTypes.number.isRequired,\n        growthPct30day: PropTypes.number,\n        growthPct60day: PropTypes.number,\n        growthPct90day: PropTypes.number,\n    })),\n};\n\nexport default ApplicationsTable;\n","import React from 'react';\nimport numeral from 'numeral';\nimport { max } from 'underscore';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport { Progress, StackedProgress, ProgressWithValue } from '@infosight/elmer/dist/components/Progress';\nimport { COLUMN_WIDTHS } from '@infosight/elmer/dist/components/Table';\nimport { SNAPSHOT_USAGE_COLOR, VOLUME_USAGE_COLOR } from '../../util';\nimport { DEFAULT_FOLDER } from '../../constants';\nimport style from './style.scss';\n\n/* eslint-disable react/prop-types */\n\nexport const foldersConfig = () => ({\n    categories: ['space'],\n    columns: [\n        {\n            Header: 'Folder',\n            accessor: 'folderName',\n            filterable: true,\n            minWidth: COLUMN_WIDTHS.LARGE,\n            Cell: ({ original: { poolUID, folderName } }) => (\n                <a href={`#capacity-report?pool=${poolUID}&folder=${folderName}`}>\n                    {folderName || DEFAULT_FOLDER}\n                </a>\n            ),\n        },\n        {\n            Header: 'Volumes',\n            accessor: 'volumeCount',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { volumeCount } }) => <span>{ volumeCount }</span>,\n        },\n        {\n            Header: 'Volume Usage',\n            accessor: 'volumeUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { volumeUsed, folderLimit, totalUsed } }) => (\n                <ProgressWithValue leftLabel={numeral(volumeUsed).format('0.0 ib')}>\n                    <Progress\n                        color={VOLUME_USAGE_COLOR}\n                        // IS-19371:Added 0 to handle undefined values, leading 0 was required because we use old version of underscore\n                        // Math.max returns NaN for Math.max(null, undefined) and Math.max(0, undefined)\n                        max={max([0, folderLimit, totalUsed])}\n                        value={volumeUsed}\n                    />\n                </ProgressWithValue>\n            ),\n        },\n        {\n            Header: 'Snapshot Usage',\n            accessor: 'snapshotUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { snapshotUsed, folderLimit, totalUsed } }) => (\n                <ProgressWithValue leftLabel={numeral(snapshotUsed).format('0.0 ib')}>\n                    <Progress\n                        color={SNAPSHOT_USAGE_COLOR}\n                        // IS-19371:Added 0 to handle undefined values, leading 0 was required because we use old version of underscore\n                        // Math.max returns NaN for Math.max(null, undefined) and Math.max(0, undefined)\n                        max={max([0, folderLimit, totalUsed])}\n                        value={snapshotUsed}\n                    />\n                </ProgressWithValue>\n            ),\n        },\n        {\n            Header: 'Total Usage',\n            accessor: 'totalUsed',\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '5px' },\n            Cell: ({ original: { volumeUsed, snapshotUsed, folderLimit, totalUsed } }) => {\n                let rightValue = totalUsed;\n                let rightLabel = 'No limit';\n                if (folderLimit > 0) {\n                    const isOverLimit = totalUsed >= folderLimit;\n                    rightValue = isOverLimit ? totalUsed : folderLimit;\n                    rightLabel = isOverLimit ?\n                        <span className={style.warning}>Exceeds limit</span> :\n                        numeral(folderLimit).format('0.0 ib');\n                }\n                return (\n                    <ProgressWithValue leftLabel={numeral(totalUsed).format('0.00 ib')} rightLabel={rightLabel}>\n                        <StackedProgress\n                            values={[volumeUsed, snapshotUsed]}\n                            colors={[VOLUME_USAGE_COLOR, SNAPSHOT_USAGE_COLOR]}\n                            max={rightValue}\n                            context=\"thin\"\n                        />\n                    </ProgressWithValue>\n                );\n            },\n        },\n        {\n            Header: 'Limit',\n            accessor: 'folderLimit',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { folderLimit } }) => (folderLimit ? numeral(folderLimit).format('0.0 ib') : 'No limit'),\n        },\n        {\n            Header: '% Free',\n            accessor: 'percentFree',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { percentFree } }) => {\n                if (percentFree > 1) {\n                    return null;\n                } else if (percentFree <= 0.1) {\n                    return <span className={style.warning}>{numeral(percentFree < 0 ? 0 : percentFree).format('0%')}</span>;\n                }\n                return numeral(percentFree).format('0%');\n            },\n        },\n        {\n            Header: 'Past Growth (days)',\n            headerClassName: 'text-center',\n            columns: [\n                {\n                    Header: '90',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct90day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct90day } }) => (growthPct90day === null ? '' : <PercentGrowth value={growthPct90day} isPercent />),\n                },\n                {\n                    Header: '60',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct60day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct60day } }) => (growthPct60day === null ? '' : <PercentGrowth value={growthPct60day} isPercent />),\n                },\n                {\n                    Header: '30',\n                    headerClassName: 'text-right',\n                    accessor: 'growthPct30day',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthPct30day } }) => (growthPct30day === null ? '' : <PercentGrowth value={growthPct30day} isPercent />),\n                },\n            ],\n        },\n    ],\n});\n\nexport { foldersConfig as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { ClientControlledTable } from '@infosight/elmer/dist/components/Table';\nimport { getSortedValues } from './gridViewOptions';\nimport { foldersConfig } from './foldersConfig';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nfunction FoldersTable({ values, loadingCollection, userName }) {\n    // TODO get this from backend. Doing it here to expedite 2017.03-1 release and make Karthik happy\n    const sortedData = getSortedValues(values);\n    const data = sortedData && sortedData.map(r => ({\n        ...r,\n        percentFree: !r.folderLimit ? 2 : (1 - (r.totalUsed / r.folderLimit)),\n    }));\n\n    const { columns, categories } = foldersConfig();\n\n    return (\n        <div className={cx('container')}>\n            <ClientControlledTable\n                tableId={`${userName}_NIMBLE_FOLDERS_CAPACITY`}\n                data={data || []}\n                columns={columns}\n                categories={categories}\n                loading={loadingCollection}\n                // TODO: Disabled until table params are namespaced\n                // defaultSorted={[{ id: 'folderName', desc: false }]}\n                syncUrl={false}\n            />\n        </div>\n    );\n}\n\nFoldersTable.propTypes = {\n    loadingCollection: PropTypes.bool.isRequired,\n    userName: PropTypes.string,\n    values: PropTypes.arrayOf(PropTypes.shape({\n        folderName: PropTypes.string,\n        volumeCount: PropTypes.number.isRequired,\n        volumeUsed: PropTypes.number.isRequired,\n        snapshotUsed: PropTypes.number.isRequired,\n        totalUsed: PropTypes.number.isRequired,\n        growthPct30day: PropTypes.number,\n        growthPct60day: PropTypes.number,\n        growthPct90day: PropTypes.number,\n        folderLimit: PropTypes.number,\n    })),\n};\n\nexport default FoldersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { OBJECTS } from '../../../nimble/inventory';\nimport PoolsList from '../../../nimble/pools/collection/components/table/PoolsTableView';\nimport { SPACE_CATEGORY } from '../../../nimble/pools/collection/constants';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nexport const PoolsTable = ({ poolUid, config, userName }) => {\n    const scope = poolUid ? {\n        type: OBJECTS.POOL,\n        id: poolUid,\n    } : null;\n    return (\n        <div className={cx('container')}>\n            <PoolsList\n                tableId={`${userName}_NIMBLE_POOLS_CAPACITY`}\n                scope={scope}\n                config={config}\n                enabledFieldSets={[SPACE_CATEGORY]}\n                syncUrl={false}\n                disableDefaultSort\n            />\n        </div>);\n};\n\nPoolsTable.propTypes = {\n    poolUid: PropTypes.string,\n    userName: PropTypes.string,\n    config: PropTypes.object,\n};\n\nexport default PoolsTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { OBJECTS } from '../../../nimble/inventory';\nimport VolumesList from '../../../nimble/volumes/collection/components/list';\nimport { SPACE_TAB } from '../../../nimble/volumes/collection/constants';\nimport { DEFAULT_FOLDER } from '../../constants';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nfunction VolumesTable({ poolUid, folderId, config, userName }) {\n    let scope = null;\n    let filters = null;\n    if (poolUid || folderId) {\n        if (folderId === DEFAULT_FOLDER) {\n            scope = {\n                type: OBJECTS.POOL,\n                id: poolUid,\n            };\n            filters = [{\n                field: '_scope_folderUid',\n                $eq: null,\n            }];\n        } else {\n            scope = {\n                id: folderId || poolUid,\n                type: folderId ? OBJECTS.FOLDER : OBJECTS.POOL,\n            };\n        }\n    }\n\n    return (\n        <div className={cx('container')}>\n            <VolumesList\n                tableId={`${userName}_NIMBLE_VOLUMES_CAPACITY`}\n                scope={scope}\n                filters={filters}\n                config={config}\n                enabledFieldSets={[SPACE_TAB]}\n                syncUrl={false}\n                disableDefaultSort\n            />\n        </div>);\n}\n\nVolumesTable.propTypes = {\n    poolUid: PropTypes.string,\n    folderId: PropTypes.string,\n    config: PropTypes.object,\n    userName: PropTypes.string,\n};\n\nexport default VolumesTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { last } from 'underscore';\nimport numeral from 'numeral';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { CHART_COLORS } from '../../../../util/chartColors';\nimport { formatBytes } from '../../util';\nimport { xAxisDataRange } from '../../../charts/mixins/xAxis';\n\nconst LIMIT = 'LIMIT';\n\nconst Chart = mergeSharedTooltip({\n    valueFormatter(point) {\n        return numeral(point.y).format('0.0 ib');\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, 'L');\n    },\n});\n\n// Exported for testing\nexport const convertMiBtoBytes = mebibytes => mebibytes * (2 ** 20);\n\n// Exported for testing\nexport class FolderCapacityTimeSeries extends Component {\n    /**\n     * chartRangeStart and chartRangeEnd are moment objects, so referential equality checks fail,\n     * resulting in unnecessary user-visible re-rendering\n     */\n    shouldComponentUpdate({ timeSeries, containerHeight, chartRangeStart, chartRangeEnd }) {\n        return !(\n            chartRangeStart.isSame(this.props.chartRangeStart) &&\n            chartRangeEnd.isSame(this.props.chartRangeEnd) &&\n            timeSeries === this.props.timeSeries &&\n            containerHeight === this.props.containerHeight\n        );\n    }\n\n    config() {\n        const { chartRangeStart, chartRangeEnd, timeSeries } = this.props;\n\n        const extremes = {\n            timeSeriesStart: chartRangeEnd,\n            timeSeriesEnd: chartRangeStart,\n        };\n\n        const firstPoint = timeSeries.find(x => x.totalUsed !== null);\n        if (firstPoint) {\n            extremes.timeSeriesStart = Math.min(extremes.timeSeriesStart, firstPoint.asupLocalDate);\n        }\n\n        const lastPoint = timeSeries.concat().reverse().find(x => x.totalUsed !== null);\n        if (lastPoint) {\n            extremes.timeSeriesEnd = Math.max(extremes.timeSeriesEnd, lastPoint.asupLocalDate);\n        }\n\n        return {\n            chart: {\n                height: this.props.containerHeight,\n                spacingTop: 20,\n                resetZoomButton: {\n                    theme: {\n                        display: 'none',\n                    },\n                },\n            },\n            title: false,\n            xAxis: xAxisDataRange(chartRangeStart, chartRangeEnd),\n            yAxis: {\n                title: {\n                    text: 'USAGE (TiB)',\n                },\n                labels: {\n                    formatter() {\n                        return formatBytes(this.value, this.axis.dataMax);\n                    },\n                    zIndex: 6,\n                },\n                plotLines: [0.25, 0.5, 0.75].map(stop => ({\n                    color: CHART_COLORS.plotBandGrey,\n                    dashStyle: 'ShortDot',\n                    value: this.finalCapacity() * stop,\n                    width: 2,\n                })),\n            },\n            legend: {\n                enabled: true,\n                symbolHeight: 10,\n                symbolWidth: 10,\n                labelFormatter() {\n                    const latestLimit = last(this.yData);\n                    return this.userOptions.id === LIMIT\n                        ? `${this.name} ${formatBytes(latestLimit, latestLimit)} TiB`\n                        : this.name;\n                },\n            },\n            series: [this.totalUsageSeries(), this.limitSeries()],\n        };\n    }\n\n    totalUsageSeries() {\n        return {\n            type: 'area',\n            color: CHART_COLORS.blue,\n            fillColor: CHART_COLORS.blueLight,\n            name: 'Total Usage',\n            data: this.props.timeSeries.map(val => ({\n                x: val.asupLocalDate,\n                y: val.totalUsed,\n            })),\n            events: {\n                legendItemClick: (e) => {\n                    e.preventDefault();\n                },\n            },\n            marker: {\n                enabled: false,\n            },\n        };\n    }\n\n    limitSeries() {\n        const data = this.props.timeSeries.map(val => ({\n            x: val.asupLocalDate,\n            y: val.folderLimit,\n        }));\n\n        return {\n            type: 'line',\n            color: CHART_COLORS.warningYellow,\n            dashStyle: 'Dash',\n            name: 'Limit',\n            data,\n            id: LIMIT,\n            marker: {\n                enabled: false,\n            },\n            step: true,\n        };\n    }\n\n    finalCapacity() {\n        return convertMiBtoBytes(last(this.props.timeSeries).folderLimit);\n    }\n\n    render() {\n        const hasData = this.props.timeSeries && this.props.timeSeries.length > 0;\n        return (\n            <NoData hasData={hasData} message=\"No capacity history data available.\">\n                {() => <Chart config={this.config()} />}\n            </NoData>\n        );\n    }\n}\n\nFolderCapacityTimeSeries.propTypes = {\n    timeSeries: PropTypes.arrayOf(PropTypes.shape({\n        asupLocalDate: PropTypes.number,\n        totalUsed: PropTypes.number,\n        folderLimit: PropTypes.number,\n    })),\n\n    /**\n     * Moment\n     */\n    chartRangeStart: PropTypes.object,\n\n    /**\n     * Moment\n     */\n    chartRangeEnd: PropTypes.object,\n\n    // From ReactDimensions\n    containerHeight: PropTypes.number.isRequired,\n};\n\nFolderCapacityTimeSeries.defaultProps = {\n    containerHeight: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(FolderCapacityTimeSeries);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { pluck, last, isNumber } from 'underscore';\nimport numeral from 'numeral';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { CHART_COLORS } from '../../../../util/chartColors';\nimport { red01 } from '../../../../util/colors';\nimport { formatBytes } from '../../util';\nimport { xAxisDataRange } from '../../../charts/mixins/xAxis';\n\nconst DEGRADATION = 'DEGRADATION';\nconst CAPACITY = 'CAPACITY';\n\nconst Chart = mergeSharedTooltip({\n    getPoints(that) {\n        const { points } = that;\n        return [points[1], points[0]]\n            .concat(points.slice(2))\n            .filter(point => point.series.options.id !== DEGRADATION);\n    },\n    valueFormatter(point) {\n        return numeral(point.y).format('0.0 ib');\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, 'L');\n    },\n});\n\n// Exported for testing\nexport class PoolCapacityTimeSeries extends Component {\n    /**\n     * chartRangeStart and chartRangeEnd are moment objects, so referential equality checks fail,\n     * resulting in unnecessary user-visible re-rendering\n     */\n    shouldComponentUpdate({ timeSeries, containerHeight, containerWidth, chartRangeStart, chartRangeEnd }) {\n        return !(\n            chartRangeStart.isSame(this.props.chartRangeStart) &&\n            chartRangeEnd.isSame(this.props.chartRangeEnd) &&\n            timeSeries === this.props.timeSeries &&\n            containerHeight === this.props.containerHeight &&\n            containerWidth === this.props.containerWidth\n        );\n    }\n\n    config() {\n        const maxCapacity = this.maxCapacity();\n        const finalCapacity = this.finalCapacity();\n        const { chartRangeStart, chartRangeEnd, timeSeries } = this.props;\n\n        const extremes = {\n            timeSeriesStart: chartRangeEnd,\n            timeSeriesEnd: chartRangeStart,\n        };\n\n        const firstPoint = timeSeries.find(x => x.used !== null);\n        if (firstPoint) {\n            extremes.timeSeriesStart = Math.min(extremes.timeSeriesStart, firstPoint.asupLocalDate);\n        }\n\n        const lastPoint = timeSeries.concat().reverse().find(x => x.used !== null);\n        if (lastPoint) {\n            extremes.timeSeriesEnd = Math.max(extremes.timeSeriesEnd, lastPoint.asupLocalDate);\n        }\n\n        return {\n            chart: {\n                width: this.props.containerWidth,\n                height: this.props.containerHeight,\n                spacingBottom: 0,\n                spacingTop: 20,\n                marginTop: 30,\n                type: 'area',\n                resetZoomButton: {\n                    theme: {\n                        display: 'none',\n                    },\n                },\n            },\n            title: false,\n            xAxis: xAxisDataRange(chartRangeStart, chartRangeEnd),\n            yAxis: {\n                title: {\n                    text: 'USAGE (TiB)',\n                },\n                labels: {\n                    formatter() {\n                        return formatBytes(this.value, maxCapacity);\n                    },\n                },\n                plotLines: [0.25, 0.5, 0.75].map(stop => ({\n                    color: CHART_COLORS.plotBandGrey,\n                    dashStyle: 'ShortDot',\n                    value: this.finalCapacity() * stop,\n                    width: 2,\n                })),\n            },\n            legend: {\n                enabled: true,\n                symbolHeight: 10,\n                symbolWidth: 10,\n                labelFormatter() {\n                    return this.userOptions.id === CAPACITY\n                        ? `${this.name} ${numeral(finalCapacity).format('0 ib')}`\n                        : this.name;\n                },\n            },\n            series: [\n                this.savingsSeries(),\n                this.totalUsageSeries(),\n                this.maxCapacitySeries(),\n                this.performanceDegradationCapacitySeries(),\n            ],\n            plotOptions: {\n                area: {\n                    animation: false,\n                    stacking: 'normal',\n                    marker: {\n                        enabled: false,\n                    },\n                },\n                line: {\n                    marker: {\n                        enabled: false,\n                        width: 0,\n                        height: 0,\n                        states: {\n                            hover: {\n                                enabled: false,\n                            },\n                        },\n                    },\n                },\n            },\n        };\n    }\n\n    savingsSeries() {\n        return {\n            color: CHART_COLORS.teal,\n            fillColor: CHART_COLORS.tealLight,\n            name: 'Savings',\n            data: this.props.timeSeries.map(val => ({\n                x: val.asupLocalDate,\n                y: val.savingsTotal,\n            })),\n            legendIndex: 2,\n            visible: false,\n        };\n    }\n\n    totalUsageSeries() {\n        return {\n            color: CHART_COLORS.blue,\n            fillColor: CHART_COLORS.blueLight,\n            name: 'Total Usage',\n            data: this.props.timeSeries.map(val => ({\n                x: val.asupLocalDate,\n                y: val.used,\n            })),\n            legendIndex: 1,\n            events: {\n                legendItemClick(event) {\n                    event.preventDefault();\n                },\n            },\n        };\n    }\n\n    maxCapacitySeries() {\n        return {\n            type: 'line',\n            color: red01,\n            lineWidth: 2,\n            legendIndex: 10,\n            id: CAPACITY,\n            name: 'Capacity',\n            data: this.props.timeSeries.map(val => ({\n                x: val.asupLocalDate,\n                y: val.capacity,\n            })),\n            step: true,\n        };\n    }\n\n    performanceDegradationCapacitySeries() {\n        return {\n            type: 'line',\n            color: red01,\n            lineWidth: 2,\n            dashStyle: 'dot',\n            legendIndex: 11,\n            id: DEGRADATION,\n            name: 'Performance Degradation Threshold (90%)',\n            data: this.props.timeSeries.map(val => ({\n                x: val.asupLocalDate,\n                y: isNumber(val.capacity) ? val.capacity * 0.9 : val.capacity,\n            })),\n            step: true,\n            marker: {\n                enabled: false,\n            },\n        };\n    }\n\n    maxCapacity() {\n        return Math.max.apply(null, pluck(this.props.timeSeries, 'capacity'));\n    }\n\n    finalCapacity() {\n        return last(this.props.timeSeries).capacity;\n    }\n\n    render() {\n        const hasData = this.props.timeSeries && this.props.timeSeries.length > 0;\n\n        return (\n            <NoData hasData={hasData} message=\"No capacity history data available.\">\n                {() => <Chart config={this.config()} />}\n            </NoData>\n        );\n    }\n}\n\nPoolCapacityTimeSeries.propTypes = {\n    timeSeries: PropTypes.arrayOf(PropTypes.shape({\n        asupLocalDate: PropTypes.number,\n        used: PropTypes.number,\n        capacity: PropTypes.number,\n        savingsTotal: PropTypes.number,\n    })),\n\n    /**\n     * Moment\n     */\n    chartRangeStart: PropTypes.object,\n\n    /**\n     * Moment\n     */\n    chartRangeEnd: PropTypes.object,\n\n    // From ReactDimensions\n    containerWidth: PropTypes.number,\n    containerHeight: PropTypes.number.isRequired,\n};\n\nPoolCapacityTimeSeries.defaultProps = {\n    containerWidth: 0,\n    containerHeight: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(PoolCapacityTimeSeries);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport ReactDimensions from 'react-dimensions';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport mergeSharedTooltip, { Timestamp } from '@infosight/elmer/dist/charts/mergeSharedTooltip';\nimport { xAxisDataRange } from '../../../charts/mixins/xAxis';\n\nconst Chart = mergeSharedTooltip({\n    valueFormatter(point) {\n        return numeral(point.y).format('0.0 ib');\n    },\n    xValueFormatter(point) {\n        return Timestamp(point.x, 'L');\n    },\n    leftJustifyPoints: true,\n});\n\n// Exported for testing\nexport class TopPoolsCapacityTimeSeries extends Component {\n    /**\n     * chartRangeStart and chartRangeEnd are moment objects, so referential equality checks fail,\n     * resulting in unnecessary user-visible re-rendering\n     */\n    shouldComponentUpdate({ pools, containerHeight, containerWidth, chartRangeStart, chartRangeEnd }) {\n        return !(\n            chartRangeStart.isSame(this.props.chartRangeStart) &&\n            chartRangeEnd.isSame(this.props.chartRangeEnd) &&\n            pools === this.props.pools &&\n            containerHeight === this.props.containerHeight &&\n            containerWidth === this.props.containerWidth\n        );\n    }\n\n    config() {\n        const { pools, chartRangeStart, chartRangeEnd } = this.props;\n\n        return {\n            chart: {\n                width: this.props.containerWidth,\n                height: this.props.containerHeight,\n                spacingBottom: 0,\n                spacingTop: 20,\n                marginTop: 40,\n                type: 'area',\n                resetZoomButton: {\n                    theme: {\n                        display: 'none',\n                    },\n                },\n            },\n            title: false,\n            xAxis: xAxisDataRange(chartRangeStart, chartRangeEnd),\n            yAxis: {\n                title: {\n                    text: 'USAGE (TiB)',\n                },\n                labels: {\n                    formatter() {\n                        return numeral(this.value / (2 ** 40)).format('0.0');\n                    },\n                },\n            },\n            legend: {\n                enabled: true,\n                symbolHeight: 10,\n                symbolWidth: 10,\n            },\n            series: pools.map(({ poolName, timeSeries }, index) => ({\n                name: poolName,\n                data: timeSeries.map(val => ({\n                    x: val.asupLocalDate,\n                    y: val.used,\n                })),\n                legendIndex: index,\n            })),\n            plotOptions: {\n                area: {\n                    animation: false,\n                    stacking: 'normal',\n                    marker: {\n                        enabled: false,\n                    },\n                },\n                line: {\n                    marker: {\n                        enabled: false,\n                        width: 0,\n                        height: 0,\n                        states: {\n                            hover: {\n                                enabled: false,\n                            },\n                        },\n                    },\n                },\n            },\n        };\n    }\n\n    render() {\n        const hasData = this.props.pools && this.props.pools.length > 0;\n\n        return (\n            <NoData hasData={hasData} message=\"No capacity history data available.\">\n                {() => <Chart config={this.config()} />}\n            </NoData>\n        );\n    }\n}\n\nTopPoolsCapacityTimeSeries.propTypes = {\n    pools: PropTypes.arrayOf(PropTypes.shape({\n        poolUID: PropTypes.string,\n        poolName: PropTypes.string,\n        timeSeries: PropTypes.arrayOf(PropTypes.shape({\n            asupLocalDate: PropTypes.number,\n            used: PropTypes.number,\n        })),\n    })),\n\n    /**\n     * Moment\n     */\n    chartRangeStart: PropTypes.object,\n\n    /**\n     * Moment\n     */\n    chartRangeEnd: PropTypes.object,\n\n    // From ReactDimensions\n    containerWidth: PropTypes.number,\n    containerHeight: PropTypes.number.isRequired,\n};\n\nTopPoolsCapacityTimeSeries.defaultProps = {\n    containerWidth: 0,\n    containerHeight: 0,\n};\n\nexport default ReactDimensions({ elementResize: true })(TopPoolsCapacityTimeSeries);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport { isNumber } from 'underscore';\nimport classnames from 'classnames/bind';\nimport style from '../../shared.scss';\n\nconst cx = classnames.bind(style);\n\n// Exported for testing\nexport const getFormat = value => (value >= 1024 ? '0.0 ib' : '0 ib');\nexport const getValueAndUnit = (value) => {\n    if (isNumber(value)) {\n        return numeral(value).format(getFormat(value)).split(' ');\n    }\n\n    return [null, null];\n};\n\nfunction TotalUsage({ totalUsage, growthPctLastWeek, capacity, className, children }) {\n    // Bad/Missing data\n    if (!isNumber(totalUsage)) {\n        return (\n            <div className={className}>\n                <div className={cx('metric')}>\n                    <span className={cx('value')}>N/A</span>\n                </div>\n            </div>\n        );\n    }\n\n    const [usedValue, usedUnit] = getValueAndUnit(totalUsage);\n    const [capacityValue, capacityUnit] = getValueAndUnit(capacity);\n\n    let growth;\n    if (growthPctLastWeek) {\n        growth = <span><PercentGrowth percent={growthPctLastWeek} precision={1} isPercent /> past 7 days</span>;\n    }\n\n    return (\n        <div className={className}>\n            <div className={cx('subtitle')}>Total Usage</div>\n            <div className={cx('metric')}>\n                <span className={cx('value')}>{usedValue}</span>\n                <span className={cx('unit')}>{usedUnit}</span>\n                <span className={cx('muted')}>{capacityValue ? ' of ' : null}</span>\n                <span className={cx('value', 'muted')}>{capacityValue}</span>\n                <span className={cx('unit', 'muted')}>{capacityUnit}</span>\n            </div>\n            {growth}\n            {children}\n        </div>\n    );\n}\n\nTotalUsage.propTypes = {\n    totalUsage: PropTypes.number,\n    capacity: PropTypes.number,\n    growthPctLastWeek: PropTypes.number,\n    children: PropTypes.node,\n};\n\nexport default TotalUsage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport { isNumber } from 'underscore';\nimport style from '../../shared.scss';\n\nfunction Volumes({ className, volumeCount, totalAllocated }) {\n    let allocated;\n    if (isNumber(totalAllocated)) {\n        allocated = <span>{numeral(totalAllocated).format('0.0 ib')} allocated</span>;\n    }\n\n    const count = volumeCount || volumeCount === 0 ? numeral(volumeCount).format('0,0') : 'N/A';\n    return (\n        <div className={className}>\n            <div className={style.subtitle}>Volumes</div>\n            <div className={style.metric}>\n                <span className={style.value}>{count}</span>\n            </div>\n            {allocated}\n        </div>\n    );\n}\n\nVolumes.propTypes = {\n    volumeCount: PropTypes.number,\n    totalAllocated: PropTypes.number, // TODO currently missing from API response\n};\n\nexport default Volumes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isNumber } from 'underscore';\nimport style from '../../shared.scss';\n\nfunction RecentIssues({ className, recentIssuesCount }) {\n    if (!isNumber(recentIssuesCount)) {\n        return null;\n    }\n\n    return (\n        <div className={className}>\n            <div className={style.subtitle}>Recent Issues</div>\n            <div className={style.metric}>\n                <span className={style.value}>{recentIssuesCount || 'N/A'}</span>\n            </div>\n        </div>\n    );\n}\n\nRecentIssues.propTypes = {\n    recentIssuesCount: PropTypes.number.isRequired,\n};\n\nexport default RecentIssues;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport OverlayTrigger from '@infosight/elmer/dist/components/OverlayTrigger';\nimport style from './Trends.scss';\n\nconst cx = classnames.bind(style);\n\nfunction Trend({ type, message, tooltip }) {\n    const iconClass = {\n        'fa-info': type === 'info',\n        'fa-check': type === 'success',\n        'fa-exclamation': type === 'error' || type === 'warning',\n        'text-success': type === 'success',\n        'text-danger': type === 'error',\n        'text-warning': type === 'warning',\n        'text-primary': type === 'info',\n    };\n    const icon = <span><i className={cx('icon', 'fa', iconClass)} /></span>;\n\n    if (type === 'success' || !tooltip) {\n        return <div className={cx('trend')}>{icon} {message}</div>;\n    }\n\n    return (\n        <OverlayTrigger overlay={<div className={cx('tooltip')}>{tooltip}</div>} placement=\"left\">\n            <div className={cx('trend', 'popover-link')}>{icon} {message}</div>\n        </OverlayTrigger>\n    );\n}\n\nTrend.propTypes = {\n    type: PropTypes.oneOf(['info', 'success', 'error', 'warning']),\n    message: PropTypes.string.isRequired,\n    tooltip: PropTypes.string,\n};\n\nTrend.defaultProps = {\n    type: 'info',\n};\n\nfunction Trends({ className, trends }) {\n    if (trends) {\n        return (\n            <div className={className}>{trends.map(trend => <Trend {...trend} key={trend.message} />)}</div>\n        );\n    }\n\n    return null;\n}\n\nTrends.propTypes = {\n    trends: PropTypes.array,\n};\n\nexport default Trends;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const daysUntilFullText = (days) => {\n    if (days === null || days === undefined) {\n        return null;\n    }\n\n    let dayEstimate = null;\n    if (days <= 7) {\n        dayEstimate = 'one week';\n    } else if (days <= 15) {\n        dayEstimate = 'two weeks';\n    } else if (days <= 31) {\n        dayEstimate = 'one month';\n    } else if (days <= 60) {\n        dayEstimate = 'two months';\n    } else if (days <= 90) {\n        dayEstimate = 'three months';\n    }\n\n    return dayEstimate;\n};\n\nconst DaysUntilFull = ({ className, days }) => <span className={className}>{daysUntilFullText(days)}</span>;\n\nDaysUntilFull.propTypes = {\n    days: PropTypes.number,\n};\n\nexport default DaysUntilFull;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Trends from './Trends';\nimport { daysUntilFullText } from './DaysUntilFull';\n\nfunction FolderTrends({ className, fullCapacityReachDays }) {\n    const trends = [];\n\n    const dayText = daysUntilFullText(fullCapacityReachDays);\n    if (dayText) {\n        trends.push({ type: 'warning', message: `Full capacity in ${dayText}` });\n    } else {\n        trends.push({ type: 'success', message: 'No capacity risk' });\n    }\n\n    return <Trends className={className} trends={trends} />;\n}\n\nFolderTrends.propTypes = {\n    fullCapacityReachDays: PropTypes.number,\n};\n\nexport default FolderTrends;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport autobind from 'react-autobind';\nimport moment from 'moment-timezone';\nimport { Tabs, Tab, TabList, TabPanel, TabClasses } from '@infosight/elmer/dist/components/Tabs';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport style from './style.scss';\nimport { FolderUsageBarChart } from '../usageSummaryCharts';\nimport { ApplicationsTable, VolumesTable } from '../usageDetailTable';\nimport { FolderCapacityTimeSeries } from '../timeSeries';\nimport TotalUsage from './summary/TotalUsage';\nimport Volumes from './summary/Volumes';\nimport RecentIssues from './summary/RecentIssues';\nimport FolderTrends from './summary/FolderTrends';\n\nconst cx = classnames.bind(style);\n\nclass FolderCapacity extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    renderTabs() {\n        const { applications, loadingApplications, config, folderId, poolUid } = this.props;\n        return (\n            <Tabs forceRenderTabPanel>\n                <TabList className={TabClasses.TableHeader}>\n                    <Tab>Applications</Tab>\n                    <Tab>Volumes</Tab>\n                </TabList>\n                <TabPanel>\n                    <ApplicationsTable values={applications} loadingCollection={loadingApplications} />\n                </TabPanel>\n                <TabPanel>\n                    <VolumesTable poolUid={poolUid} folderId={folderId} config={config} />\n                </TabPanel>\n            </Tabs>\n        );\n    }\n\n    renderSummary() {\n        const { summary } = this.props;\n        if (!summary) {\n            return <NoData hasData={false} message=\"No data available.\" />;\n        }\n\n        const {\n            volumeCount,\n            volumeUsed,\n            snapshotUsed,\n            totalUsed,\n            totalSizeMB,\n            fullCapacityReachDays,\n            folderLimit,\n            folderUnusedReserve,\n        } = summary;\n\n        return (\n            <div className={cx('summary')}>\n                <div className={cx('total-usage')}>\n                    <TotalUsage totalUsage={totalUsed}>\n                        <div className={cx('bar-chart')}>\n                            <FolderUsageBarChart\n                                snapshotUsage={snapshotUsed}\n                                volumeUsage={volumeUsed}\n                                unusedReserve={folderUnusedReserve}\n                                limit={folderLimit}\n                            />\n                        </div>\n                    </TotalUsage>\n                </div>\n                <div>\n                    <div className={cx('subtitle')}>Trends</div>\n                    <FolderTrends fullCapacityReachDays={fullCapacityReachDays} limit={folderLimit} />\n                </div>\n                {/* TODO API in progress; totalAllocated is probably fake */}\n                <Volumes totalAllocated={totalSizeMB * (2 ** 20)} volumeCount={volumeCount} />\n                <RecentIssues />\n            </div>\n        );\n    }\n\n    renderTimeSeries() {\n        const { timeSeries, lookbackMonths } = this.props;\n        const chartRangeEnd = moment().startOf('day');\n        const chartRangeStart = moment(chartRangeEnd).subtract(lookbackMonths, 'months').add(1, 'day');\n\n        return (\n            <div className={cx('time-series-chart')}>\n                <FolderCapacityTimeSeries\n                    timeSeries={timeSeries}\n                    chartRangeStart={chartRangeStart}\n                    chartRangeEnd={chartRangeEnd}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        const { loadingSummary, loadingTimeSeries, summary, timeSeries } = this.props;\n\n        // Has the summary and time series\n        const hasData = !loadingSummary && summary && !loadingTimeSeries && timeSeries;\n\n        return (\n            <Async loading={loadingSummary || loadingTimeSeries}>\n                <NoData hasData={!!hasData}>\n                    <article className={cx('layout')}>\n                        <section>{this.renderSummary()}</section>\n                        <section className={cx('time-series', 'inset')}>\n                            <h1>Usage</h1>\n                            {this.renderTimeSeries()}\n                        </section>\n                        <section className={cx('facet-tables', 'inset')}>{this.renderTabs()}</section>\n                    </article>\n                </NoData>\n            </Async>\n        );\n    }\n}\n\nFolderCapacity.propTypes = {\n    folderId: PropTypes.string,\n    poolUid: PropTypes.string,\n    loadingTimeSeries: PropTypes.bool.isRequired,\n    loadingSummary: PropTypes.bool.isRequired,\n    loadingApplications: PropTypes.bool.isRequired,\n    summary: PropTypes.shape({\n        volumeCount: PropTypes.number,\n        volumeUsed: PropTypes.number,\n        snapshotUsed: PropTypes.number,\n        totalUsed: PropTypes.number,\n        totalSizeMB: PropTypes.number,\n        fullCapacityReachDays: PropTypes.number,\n        folderLimit: PropTypes.number,\n        folderUnusedReserve: PropTypes.number,\n    }),\n    applications: PropTypes.array,\n    timeSeries: PropTypes.array,\n    lookbackMonths: PropTypes.number,\n    config: PropTypes.object,\n};\n\nexport default FolderCapacity;\n","export const folderContextSelector = state => state.capacityReport.folderContext;\n\nexport const isLoadingSelector = (state) => {\n    const { loadingTimeSeries, loadingApplications, loadingSummary } = folderContextSelector(state);\n    return loadingTimeSeries || loadingApplications || loadingSummary;\n};\n\nexport default {\n    folderContextSelector,\n    isLoadingSelector,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isFunction } from 'underscore';\nimport { resetFolderCapacity, getFolderCapacity } from '../../actionCreators/folder';\nimport FolderCapacity from '../layout/FolderCapacity';\nimport { folderContextSelector, isLoadingSelector } from '../../reducer/folderContext/selectors';\n\nclass FolderCapacityContainer extends Component {\n    componentDidMount() {\n        if (!this.props.loading) {\n            this.props.getData({\n                folderId: this.props.folderId,\n                poolUid: this.props.poolUid,\n                lookback: this.props.lookbackMonths,\n            });\n        }\n    }\n\n    componentWillReceiveProps({ poolUid, folderId, lookbackMonths, loading }) {\n        if (\n            this.props.folderId !== folderId ||\n            this.props.poolUid !== poolUid ||\n            this.props.lookbackMonths !== lookbackMonths\n        ) {\n            this.props.getData({ folderId, poolUid, lookback: lookbackMonths });\n        }\n\n        if (this.props.toggleFilters) {\n            this.props.toggleFilters(!loading);\n        }\n    }\n\n    componentWillUnmount() {\n        if (isFunction(this.props.reset)) {\n            this.props.reset();\n        }\n    }\n\n    render() {\n        return <FolderCapacity {...this.props} />;\n    }\n}\n\nFolderCapacityContainer.propTypes = {\n    getData: PropTypes.func.isRequired,\n    reset: PropTypes.func,\n    loading: PropTypes.bool.isRequired,\n\n    // These should be passed from parent component\n    lookbackMonths: PropTypes.number.isRequired,\n    folderId: PropTypes.string.isRequired,\n    poolUid: PropTypes.string.isRequired,\n    toggleFilters: PropTypes.func,\n};\n\nFolderCapacityContainer.defaultProps = {\n    lookbackMonths: 3,\n    loading: false,\n};\n\nconst mapStateToProps = state => ({\n    ...folderContextSelector(state),\n    loading: isLoadingSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getData: getFolderCapacity,\n    reset: resetFolderCapacity,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FolderCapacityContainer);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport {\n    POOL_CAPACITY_RESET,\n    POOL_CAPACITY_FOLDERS_FETCH,\n    POOL_CAPACITY_APPLICATIONS_FETCH,\n    POOL_CAPACITY_SUMMARY_FETCH,\n    POOL_CAPACITY_TIME_SERIES_FETCH,\n    POOL_CAPACITY_ARRAY_CAPACITY_FETCH,\n    TOP_POOLS_CAPACITY_TIME_SERIES_FETCH,\n} from '../constants';\nimport Request from '../../../services/Request';\nimport { firstOrNullData } from '../../../util/genericQuery';\n\nconst poolURISegment = poolUid => (!poolUid ? '' : `/${poolUid}`);\n\nexport const getTopPoolsCapacityTimeSeries = ({ count = 5, lookback }) => (dispatch) => {\n    const {\n        dispatchStart,\n        dispatchSuccess,\n        dispatchError,\n    } = actionsFor(TOP_POOLS_CAPACITY_TIME_SERIES_FETCH, dispatch);\n\n    dispatchStart();\n\n    return new Request().pod().account()\n        .urlSegment('capacity/pools/topnTimeSeries')\n        .uriAddQuery({ monthRange: lookback, topnCount: count })\n        .get()\n        .then((response) => {\n            // Each pool's timeseries data is in an object where the key is the poolUid\n            const dispatchData = (response.data && Object.keys(response.data).length) ? response.data : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport const getPoolCapacityTimeSeries = ({ poolUid, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_TIME_SERIES_FETCH, dispatch);\n\n    dispatchStart();\n    new Request().pod().account()\n        .urlSegment(`capacity/pools${poolURISegment(poolUid)}/timeSeries`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport const getAggregatedPoolCapacitySummary = ({ lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_SUMMARY_FETCH, dispatch);\n\n    dispatchStart();\n    new Request().pod().account()\n        .urlSegment('capacity/pools')\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const first = response.data;\n            dispatchSuccess(first[0]);\n        })\n        .catch((error) => {\n            dispatchError(error);\n        });\n};\n\nexport const getPoolCapacitySummary = ({ poolUid }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_SUMMARY_FETCH, dispatch);\n    dispatchStart();\n    const options = {};\n\n    if (poolUid) {\n        options.scope = { type: 'pool', id: poolUid };\n    }\n\n    new Request().pod().genericQuery('pool', ['capacityDashboardDetail'])\n        .post(options)\n        .then(firstOrNullData)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getPoolCapacityFolders = ({ poolUid, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_FOLDERS_FETCH, dispatch);\n\n    dispatchStart();\n    return new Request().pod().account()\n        .urlSegment(`capacity/pools${poolURISegment(poolUid)}/folders`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((folders) => {\n            // Pool only has one folder, the default folder, which means customer is not using folders\n            if (folders.data.length === 1 && !folders.data[0].folderName) {\n                return [];\n            }\n            return folders.data;\n        })\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const getPoolCapacityApplications = ({ poolUid, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_APPLICATIONS_FETCH, dispatch);\n\n    dispatchStart();\n    return new Request().pod().account()\n        .urlSegment(`capacity/pools${poolURISegment(poolUid)}/applications`)\n        .uriAddQuery({ monthRange: lookback })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport const getArrayCapacity = ({ arraySerialNumber, lookback }) => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(POOL_CAPACITY_ARRAY_CAPACITY_FETCH, dispatch);\n\n    dispatchStart();\n    return new Request().pod().account()\n        .urlSegment('capacity')\n        .uriAddQuery({ monthRange: lookback, arraySn: arraySerialNumber })\n        .get()\n        .then((response) => {\n            const dispatchData = (response.data && response.data.length) ? response.data[0] : null;\n            dispatchSuccess(dispatchData);\n        })\n        .catch(dispatchError);\n};\n\nexport function getPoolCapacity(options) {\n    return (dispatch) => {\n        getPoolCapacityTimeSeries(options)(dispatch);\n        getPoolCapacityFolders(options)(dispatch);\n        getPoolCapacityApplications(options)(dispatch);\n        getPoolCapacitySummary(options)(dispatch);\n        getArrayCapacity(options)(dispatch);\n    };\n}\n\nexport function getAggregatePoolCapacity(options) {\n    return (dispatch) => {\n        getTopPoolsCapacityTimeSeries(options)(dispatch);\n        getPoolCapacityApplications(options)(dispatch);\n        getAggregatedPoolCapacitySummary(options)(dispatch);\n    };\n}\n\nexport function resetPoolCapacity() {\n    return { type: POOL_CAPACITY_RESET };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment-timezone';\n\nimport Trends from './Trends';\n\nconst getExceedsTooltip = (isHighlyLikely, dateString) =>\n    `This array is ${isHighlyLikely ? 'highly likely' : 'likely'} to exceed the performance throttling ` +\n`threshold on ${dateString}. ` +\n'It is critical that you take corrective action by freeing up space on the array or adding additional capacity.';\n\nconst getFoldersTooltip = (foldersFull, numMonthString) => (\n    `${foldersFull} folder${foldersFull > 1 ? 's' : ''} full in less than ${numMonthString}`\n);\n\nfunction PoolTrends({ className, arrayCapacity, pool }) {\n    if (!arrayCapacity || !pool) {\n        return null;\n    }\n\n    const { capacity, free, possiblyExceedsThreshold, probablyExceedsThreshold, unmanagedSnapshots } = arrayCapacity;\n    const { foldersFull1Month, foldersFull2Month } = pool;\n    const trends = [];\n\n    // if less than 10% free\n    if (free / capacity <= 0.1) {\n        trends.push({\n            type: 'error',\n            message: 'Critical space alert',\n            tooltip: 'This array has exceeded the performance throttling threshold. ' +\n            'It is critical that you take corrective action by freeing up space on the array ' +\n            'or adding additional capacity.',\n        });\n    } else {\n        if (probablyExceedsThreshold) {\n            // these can be the same, so only show probably...\n            trends.push({\n                type: 'error',\n                message: `Highly likely to exceed threshold on ${moment.utc(probablyExceedsThreshold).format('l')}`,\n                tooltip: getExceedsTooltip(true, moment.utc(probablyExceedsThreshold).format('l')),\n            });\n        }\n\n        const TWO_WEEKS_IN_MILLISECONDS = 1000 * 60 * 60 * 24 * 14;\n        const spanMoreThan2Weeks = (probablyExceedsThreshold - possiblyExceedsThreshold) > TWO_WEEKS_IN_MILLISECONDS;\n\n        if (possiblyExceedsThreshold && (!probablyExceedsThreshold || spanMoreThan2Weeks)) {\n            trends.push({\n                type: 'error',\n                message: `Likely to exceed threshold on ${moment.utc(possiblyExceedsThreshold).format('l')}`,\n                tooltip: getExceedsTooltip(true, moment.utc(possiblyExceedsThreshold).format('l')),\n            });\n        }\n    }\n\n    // show unmanaged snapshots info\n    if (unmanagedSnapshots > 0) {\n        trends.push({\n            type: 'error',\n            message: `${unmanagedSnapshots} unmanaged snapshot${unmanagedSnapshots > 1 ? 's' : ''}`,\n            tooltip: 'A snapshot is considered unmanaged when a protection schedule or volume collection is deleted ' +\n            'and snapshots that were created as part of the schedule still remain. ' +\n            'This may be an opportunity to free up some space.',\n        });\n    }\n\n    if (foldersFull1Month > 0) {\n        trends.push({\n            type: 'error',\n            message: getFoldersTooltip(foldersFull1Month, 'one month'),\n        });\n    }\n\n    if (foldersFull2Month > 0) {\n        trends.push({\n            type: 'warning',\n            message: getFoldersTooltip(foldersFull2Month, 'two months'),\n        });\n    }\n\n    if (trends.length === 0) {\n        trends.push({\n            type: 'success',\n            message: 'No capacity risk',\n        });\n    }\n\n    return <Trends className={className} trends={trends} />;\n}\n\nPoolTrends.propTypes = {\n    arrayCapacity: PropTypes.shape({\n        capacity: PropTypes.number,\n        free: PropTypes.number,\n        possiblyExceedsThreshold: PropTypes.number, // Date as epoch\n        probablyExceedsThreshold: PropTypes.number, // Date as epoch\n        unmanagedSnapshots: PropTypes.number,\n    }),\n    pool: PropTypes.shape({\n        foldersFull1Month: PropTypes.number.isRequired,\n        foldersFull2Month: PropTypes.number.isRequired,\n    }),\n};\n\nexport default PoolTrends;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport Backbone from 'backbone';\nimport SoftwareUpgradesView from 'app/views/components/asset/SoftwareUpgradesView';\nimport App from 'app/Application';\n\n// TODO this will break in \"infosight\" bundle. I just don't feel like moving this to React pre-lasik\nclass NimbleOSVersionLink extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    onClickVersion(event) {\n        event.preventDefault();\n        App.modalRegion.show(new SoftwareUpgradesView({ model: new Backbone.Model(this.props) }));\n    }\n\n    render() {\n        const { version, className } = this.props;\n        return <a className={className} href=\"_null\" onClick={this.onClickVersion}>{version}</a>;\n    }\n}\n\nNimbleOSVersionLink.propTypes = {\n    version: PropTypes.string.isRequired,\n    serialNumber: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n    hostname: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default NimbleOSVersionLink;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames/bind';\nimport autobind from 'react-autobind';\nimport moment from 'moment-timezone';\nimport { Tabs, Tab, TabList, TabPanel, TabClasses } from '@infosight/elmer/dist/components/Tabs';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport NoData from '@infosight/elmer/dist/components/NoData';\nimport DonutChart from '../../../charts/DataUsageDonut';\nimport { PoolCapacityTimeSeries, TopPoolsCapacityTimeSeries } from '../timeSeries';\nimport TotalUsage from './summary/TotalUsage';\nimport Volumes from './summary/Volumes';\nimport Savings from '../../../nimble/pools/detail/components/headline/Savings';\nimport { userSelector } from '../../../user/reducer';\nimport { FoldersTable, ApplicationsTable, PoolsTable, VolumesTable } from '../usageDetailTable';\nimport style from './style.scss';\nimport PoolTrends from './summary/PoolTrends';\nimport DaysUntilFull from './summary/DaysUntilFull';\nimport NimbleOSVersionLink from '../NimbleOSVersionLink';\n\nconst cx = classnames.bind(style);\n\nclass PoolCapacity extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    renderTabs() {\n        const {\n            applications,\n            loadingApplications,\n            folders,\n            loadingFolders,\n            isAggregate,\n            poolUid,\n            config,\n            userName,\n        } = this.props;\n        const showFolders = !isAggregate && folders && folders.length;\n        return (\n            <Tabs forceRenderTabPanel>\n                <TabList className={TabClasses.TableHeader}>\n                    {isAggregate && <Tab>Pools</Tab>}\n                    <Tab>Applications</Tab>\n                    <Tab disabled={!showFolders}>Folders</Tab>\n                    <Tab>Volumes</Tab>\n                </TabList>\n                {isAggregate && (\n                    <TabPanel>\n                        <PoolsTable userName={userName} poolUid={poolUid} config={config} />\n                    </TabPanel>\n                )}\n                <TabPanel>\n                    <ApplicationsTable userName={userName} values={applications} loadingCollection={loadingApplications} />\n                </TabPanel>\n                <TabPanel>\n                    <FoldersTable userName={userName} values={folders} loadingCollection={loadingFolders} />\n                </TabPanel>\n                <TabPanel>\n                    <VolumesTable userName={userName} poolUid={poolUid} config={config} />\n                </TabPanel>\n            </Tabs>\n        );\n    }\n\n    renderTrends() {\n        const { arrayCapacity, summary } = this.props;\n\n        if (!arrayCapacity) {\n            return null;\n        }\n\n        return (\n            <div>\n                <div className={cx('subtitle')}>Trends</div>\n                <PoolTrends arrayCapacity={arrayCapacity} pool={summary} />\n            </div>\n        );\n    }\n\n    renderShelfConfig() {\n        if (!this.props.arrayCapacity) {\n            return null;\n        }\n\n        const { arrayCapacity: { hostname, group, version, model, serialNumber } } = this.props;\n\n        return (\n            <div>\n                <div className={cx('subtitle')}>System Configuration</div>\n                <div className={cx('system-config')}>\n                    <dl>\n                        <dt>Array</dt>\n                        <dd>{hostname}</dd>\n\n                        <dt>Model</dt>\n                        <dd>{model}</dd>\n\n                        <dt>Version</dt>\n                        <dd>\n                            <NimbleOSVersionLink hostname={hostname} version={version} serialNumber={serialNumber} />\n                        </dd>\n                    </dl>\n                    <dl>\n                        <dt>Serial Number</dt>\n                        <dd>{serialNumber}</dd>\n\n                        <dt>Group</dt>\n                        <dd>{group}</dd>\n                    </dl>\n                </div>\n            </div>\n        );\n    }\n\n    renderSummary() {\n        const { summary, isAggregate } = this.props;\n        if (!summary) {\n            return <NoData hasData={false} message=\"No data available.\" />;\n        }\n\n        const {\n            savingsDedupBytes,\n            savingsCompressionBytes,\n            savingsCloneBytes,\n            totalSavingsBytes,\n            cloneSavingsFactor,\n            compressionSavingsFactor,\n            dedupSavingsFactor,\n            totalSavingsFactor,\n            daysUntilFull,\n            usedBytes,\n            lastWeekGrowthPercent,\n            unusedReserveBytes,\n            freeBytes,\n            volumeCount,\n            totalAllocated,\n            allocatedBytes,\n        } = summary;\n\n        return (\n            <div className={cx('summary')}>\n                <div className={cx('total-usage')}>\n                    <TotalUsage\n                        growthPctLastWeek={lastWeekGrowthPercent}\n                        totalUsage={usedBytes}\n                        capacity={allocatedBytes}\n                    />\n                    {!isAggregate && daysUntilFull !== null && (\n                        <span>\n                            Forecasting full capacity in\n                            <strong> <DaysUntilFull days={daysUntilFull} /></strong>\n                        </span>\n                    )}\n                </div>\n                <div className={cx('chart')}>\n                    <DonutChart\n                        allocatedBytes={allocatedBytes}\n                        usedBytes={usedBytes}\n                        freeBytes={freeBytes}\n                        unusedReserveBytes={unusedReserveBytes}\n                        growthPercent={lastWeekGrowthPercent}\n                        warningThreshold={90}\n                    />\n                </div>\n                <Volumes volumeCount={volumeCount} totalAllocated={totalAllocated} />\n                <div>\n                    <div className={cx('subtitle')}>Savings</div>\n                    <Savings\n                        dedupSavings={savingsDedupBytes}\n                        compressionSavings={savingsCompressionBytes}\n                        cloneSavings={savingsCloneBytes}\n                        cloneSavingsFactor={cloneSavingsFactor}\n                        compressionSavingsFactor={compressionSavingsFactor}\n                        dedupSavingsFactor={dedupSavingsFactor}\n                        totalSavingsFactor={totalSavingsFactor}\n                        totalSavings={totalSavingsBytes}\n                        usedBytes={usedBytes}\n                    />\n                </div>\n                {!isAggregate && this.renderTrends()}\n                {!isAggregate && this.renderShelfConfig()}\n            </div>\n        );\n    }\n\n    renderTimeSeries() {\n        const { timeSeries, topPoolsTimeSeries, isAggregate, lookbackMonths } = this.props;\n        const chartRangeEnd = moment().startOf('day');\n        const chartRangeStart = moment(chartRangeEnd).subtract(lookbackMonths, 'months').add(1, 'day');\n\n        return (\n            <div className={cx('time-series-chart', { 'top-pools': isAggregate })}>\n                {isAggregate\n                    ? (\n                        <TopPoolsCapacityTimeSeries\n                            pools={topPoolsTimeSeries}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                        />\n                    )\n                    : (\n                        <PoolCapacityTimeSeries\n                            timeSeries={timeSeries}\n                            chartRangeStart={chartRangeStart}\n                            chartRangeEnd={chartRangeEnd}\n                        />\n                    )}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            loadingSummary,\n            loadingTimeSeries,\n            loadingArrayCapacity,\n            loadingTopPoolsTimeSeries,\n            summary,\n            timeSeries,\n            topPoolsTimeSeries,\n        } = this.props;\n\n        // Has the summary and either all pools or single pool summary. Don't care about table data here.\n        const hasData = !loadingSummary && summary &&\n            ((!loadingTimeSeries && timeSeries) || (!loadingTopPoolsTimeSeries && topPoolsTimeSeries));\n\n        const loading = loadingSummary || loadingArrayCapacity || loadingTimeSeries || loadingTopPoolsTimeSeries;\n\n        return (\n            <Async loading={loading}>\n                <NoData hasData={!!hasData}>\n                    <article className={cx('layout')}>\n                        <section>{this.renderSummary()}</section>\n                        <section className={cx('time-series', 'inset')}>\n                            <h1>Usage</h1>\n                            {this.renderTimeSeries()}\n                        </section>\n                        <section className={cx('facet-tables', 'inset')}>{this.renderTabs()}</section>\n                    </article>\n                </NoData>\n            </Async>\n        );\n    }\n}\n\nPoolCapacity.propTypes = {\n    poolUid: PropTypes.string,\n    loadingTimeSeries: PropTypes.bool.isRequired,\n    loadingSummary: PropTypes.bool.isRequired,\n    loadingApplications: PropTypes.bool.isRequired,\n    loadingFolders: PropTypes.bool.isRequired,\n    loadingArrayCapacity: PropTypes.bool.isRequired,\n    loadingTopPoolsTimeSeries: PropTypes.bool,\n    summary: PropTypes.shape({\n        allocatedBytes: PropTypes.number,\n        arrayHostName: PropTypes.string,\n        arraySearchableName: PropTypes.string,\n        arraySn: PropTypes.string,\n        daysUntilFull: PropTypes.number,\n        folderCount: PropTypes.number,\n        freeBytes: PropTypes.number,\n        groupName: PropTypes.string,\n        groupUid: PropTypes.string,\n        lastWeekGrowthPercent: PropTypes.number,\n        poolName: PropTypes.string,\n        poolUid: PropTypes.string,\n        savingsCloneBytes: PropTypes.number,\n        savingsCompressionBytes: PropTypes.number,\n        savingsDedupBytes: PropTypes.number,\n        cloneSavingsFactor: PropTypes.number,\n        compressionSavingsFactor: PropTypes.number,\n        dedupSavingsFactor: PropTypes.number,\n        totalSavingsFactor: PropTypes.number,\n        snapshotCount: PropTypes.number,\n        totalSavingsBytes: PropTypes.number,\n        unusedReserveBytes: PropTypes.number,\n        usedBytes: PropTypes.number,\n        volumeCount: PropTypes.number,\n        foldersFull1Month: PropTypes.number,\n        foldersFull2Month: PropTypes.number,\n    }),\n    arrayCapacity: PropTypes.shape({\n        group: PropTypes.string.isRequired,\n        hostname: PropTypes.string.isRequired,\n        model: PropTypes.string.isRequired,\n        serialNumber: PropTypes.string.isRequired,\n        version: PropTypes.string.isRequired,\n    }),\n    applications: PropTypes.array,\n    folders: PropTypes.array,\n    timeSeries: PropTypes.array,\n    topPoolsTimeSeries: PropTypes.array,\n    isAggregate: PropTypes.bool.isRequired,\n    lookbackMonths: PropTypes.number.isRequired,\n    config: PropTypes.object,\n    userName: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n    userName: userSelector(state).username,\n});\n\nexport default connect(mapStateToProps)(PoolCapacity);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isFunction } from 'underscore';\nimport { getPoolCapacity, resetPoolCapacity, getAggregatePoolCapacity } from '../../actionCreators/pool';\nimport PoolCapacity from '../layout/PoolCapacity';\nimport {\n    poolContextSelector,\n    isLoadingSelector,\n    topPoolsSelector,\n} from '../../reducer/poolContext/selectors';\n\nclass PoolCapacityContainer extends Component {\n    componentDidMount() {\n        if (!this.props.loading) {\n            const { poolUid, arraySerialNumber, lookbackMonths: lookback } = this.props;\n            this.getData(poolUid)({ poolUid, lookback, arraySerialNumber });\n        }\n    }\n\n    componentWillReceiveProps({ poolUid, lookbackMonths, arraySerialNumber, loading }) {\n        if (this.props.poolUid !== poolUid || this.props.lookbackMonths !== lookbackMonths) {\n            this.getData(poolUid)({ poolUid, lookback: lookbackMonths, arraySerialNumber });\n        }\n\n        if (this.props.toggleFilters) {\n            this.props.toggleFilters(!loading);\n        }\n    }\n\n    componentWillUnmount() {\n        if (isFunction(this.props.resetPoolCapacity)) {\n            this.props.resetPoolCapacity();\n        }\n    }\n\n    getData(poolUid) {\n        return poolUid ? this.props.getPoolCapacity : this.props.getAggregatePoolCapacity;\n    }\n\n    render() {\n        return (\n            <PoolCapacity {...this.props} />\n        );\n    }\n}\n\nPoolCapacityContainer.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    getAggregatePoolCapacity: PropTypes.func.isRequired,\n    getPoolCapacity: PropTypes.func.isRequired,\n    resetPoolCapacity: PropTypes.func,\n\n    // These should be passed from parent component\n    lookbackMonths: PropTypes.number.isRequired,\n    poolUid: PropTypes.string,\n    toggleFilters: PropTypes.func,\n    arraySerialNumber: PropTypes.string,\n    isAggregate: PropTypes.bool, // eslint-disable-line react/no-unused-prop-types\n    config: PropTypes.object,\n};\n\nPoolCapacityContainer.defaultProps = {\n    lookbackMonths: 3,\n    loading: false,\n    isAggregate: false,\n};\n\nconst mapUrlToProps = (state, { match: { params } }) => ({\n    sort: params.sort,\n});\n\nconst mapStateToProps = (state, props) => ({\n    ...mapUrlToProps(state, props),\n    ...poolContextSelector(state),\n    topPoolsTimeSeries: topPoolsSelector(state),\n    loading: isLoadingSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getPoolCapacity,\n    getAggregatePoolCapacity,\n    resetPoolCapacity,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PoolCapacityContainer);\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport { GROUP_POOL_FOLDER_RELATIONS_FETCH, GROUP_POOL_FOLDER_RELATIONS_RESET } from '../constants';\nimport Request from '../../../services/Request';\n\nexport const fetchRelationships = () => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(GROUP_POOL_FOLDER_RELATIONS_FETCH, dispatch);\n\n    dispatchStart();\n\n    new Request().pod().account()\n        .urlSegment('capacity/pools/overview')\n        .get()\n        .then(response => response.data)\n        .then(dispatchSuccess)\n        .catch(dispatchError);\n};\n\nexport const resetRelationships = () => ({\n    type: GROUP_POOL_FOLDER_RELATIONS_RESET,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport { connect } from 'react-redux';\nimport { withQueryParams } from '@infosight/elmer/dist/components/Router';\nimport { bindActionCreators } from 'redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport { param } from 'jquery';\nimport { identity, pick } from 'underscore';\nimport style from './style.scss';\nimport PoolFolderTreeViewDropdown from '../PoolFolderTreeViewDropdown';\nimport FolderCapacityContainer from './FolderCapacityContainer';\nimport PoolCapacityContainer from './PoolCapacityContainer';\nimport { FOLDER, POOL, ALL } from '../../constants';\nimport Selection from './Selection';\nimport { fetchRelationships, resetRelationships } from '../../actionCreators/objectRelationships';\nimport {\n    relationshipsByTypeSelector,\n    objectRelationshipsSelector,\n    hasFoldersSelector,\n} from '../../reducer/objectRelationships';\nimport { productInterface as infrastructureConfig } from '../../../nimble/config';\n\nconst cx = classnames.bind(style);\n\nclass CapacityContainer extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n\n        this.state = { disableFilters: false };\n    }\n\n    componentWillMount() {\n        if (!this.props.loadingRelationships) {\n            this.props.fetchRelationships();\n        }\n\n        // Update the page style from Bootstrap to \"New Look and Feel\"\n        const contentRegion = document.getElementById('content-region');\n        if (contentRegion) {\n            contentRegion.classList.add('hack-100vw');\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetRelationships();\n\n        // Revert the page style from \"New Look and Feel\" to Bootstrap\n        const contentRegion = document.getElementById('content-region');\n        if (contentRegion) {\n            contentRegion.classList.remove('hack-100vw');\n        }\n    }\n\n    onSelectMonthRange(event) {\n        this.updateUrlParams({ monthRange: event.target.value });\n    }\n\n    updateUrlParams(mergeParams) {\n        const params = pick({ ...this.props.match.params, ...mergeParams }, identity);\n        this.props.history.push(`?${param(params)}`, {});\n    }\n\n    updateFragmentForResource({ poolUID, folderUID, type }) {\n        if (type === ALL) {\n            this.updateUrlParams({ pool: null });\n        }\n\n        if (type === POOL && poolUID) {\n            this.updateUrlParams({ pool: poolUID, folderId: null });\n        }\n\n        if (type === FOLDER && folderUID) {\n            this.updateUrlParams({ pool: poolUID, folderId: folderUID });\n        }\n    }\n\n    findResource() {\n        const { relationships } = this.props;\n\n        const { pool: poolUid, folderId } = this.props.match.params;\n\n        if (!relationships) {\n            return null;\n        }\n\n        let type = ALL;\n        if (folderId || folderId === null) {\n            type = FOLDER;\n        } else if (poolUid) {\n            type = POOL;\n        }\n\n        return relationships.find(({ poolUID, folderUID, type: valueType }) => (\n            valueType === type &&\n            (!poolUid || (poolUid && poolUID === poolUid)) &&\n            (!folderId || (folderId === folderUID))\n        ));\n    }\n\n    toggleFilters(on) {\n        this.setState({ disableFilters: !on });\n    }\n\n    renderChildContainer(resource) {\n        if (!resource) {\n            return null;\n        }\n\n        const { poolUID: poolUid, folderUID: folderId, arraySn, type } = resource;\n\n        let ChildContainer;\n        switch (type) {\n        case FOLDER:\n            ChildContainer = FolderCapacityContainer;\n            break;\n        case ALL:\n        case POOL:\n            ChildContainer = PoolCapacityContainer;\n            break;\n        default:\n            return null;\n        }\n\n        const { monthRange } = this.props.match.params;\n\n        // IS-11756 Add a key so each filter change forces a destroy+mount cycle to clear any internal state\n        const key = `${poolUid}${folderId}${monthRange}`;\n        return (\n            <ChildContainer\n                history={this.props.history}\n                location={this.props.location}\n                match={this.props.match}\n                key={key}\n                lookbackMonths={monthRange}\n                poolUid={poolUid}\n                folderId={folderId}\n                toggleFilters={this.toggleFilters}\n                arraySerialNumber={arraySn}\n                isAggregate={type === ALL}\n                config={infrastructureConfig}\n            />\n        );\n    }\n\n    renderFilters(resource) {\n        const { disableFilters: disabled } = this.state;\n        const { monthRange } = this.props.match.params;\n        /* eslint-disable jsx-a11y/label-has-for */\n        return (\n            <div className=\"row expanded align-justify\">\n                <div className=\"pool-list\">\n                    <label className={cx('align-middle', 'label')} htmlFor=\"capacity-object-dropdown\">\n                        Pool{this.props.hasFolders && (<span> or Folder</span>)}\n                    </label>\n                    <PoolFolderTreeViewDropdown\n                        id=\"capacity-object-dropdown\"\n                        onSelect={this.updateFragmentForResource}\n                        className={cx('pool-selector', 'align-middle')}\n                        menuClassName={cx('menu')}\n                        value={resource}\n                        disabled={disabled}\n                    />\n                </div>\n                <div>\n                    <select\n                        onChange={this.onSelectMonthRange}\n                        className={cx('align-middle', 'time-range')}\n                        value={monthRange}\n                        disabled={disabled}\n                    >\n                        <option value=\"3\">Past 3 months</option>\n                        <option value=\"6\">Past 6 months</option>\n                        <option value=\"9\">Past 9 months</option>\n                        <option value=\"12\">Past year</option>\n                    </select>\n                </div>\n            </div>\n        );\n        /* eslint-enable jsx-a11y/label-has-for */\n    }\n\n    render() {\n        const resource = this.findResource(this.props);\n        return (\n            <div className={cx('container')}>\n                <div className={style.title}>\n                    Capacity Report\n                </div>\n                <Async loading={this.props.loadingRelationships}>\n                    <div className={classnames('container-fluid', cx('header-container'))}>\n                        {this.renderFilters(resource)}\n                        <div className=\"row expanded\">\n                            <Selection className={cx('header')} value={resource} />\n                        </div>\n                    </div>\n                </Async>\n                {this.renderChildContainer(resource)}\n            </div>\n        );\n    }\n}\n\nCapacityContainer.propTypes = {\n    relationships: PropTypes.array,\n    loadingRelationships: PropTypes.bool.isRequired,\n    fetchRelationships: PropTypes.func.isRequired,\n    resetRelationships: PropTypes.func.isRequired,\n    hasFolders: PropTypes.bool.isRequired,\n\n    // Injected by withQueryParams\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    ...objectRelationshipsSelector(state),\n    relationships: relationshipsByTypeSelector(state),\n    hasFolders: hasFoldersSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchRelationships,\n    resetRelationships,\n}, dispatch);\n\nexport default withQueryParams(connect(mapStateToProps, mapDispatchToProps)(CapacityContainer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst Menu = ({ active, options, onClick, disabled }) => {\n    const boundOnClick = value => (event) => {\n        event.preventDefault();\n        if (!disabled) {\n            onClick(value);\n        }\n    };\n\n    const isActive = active && !disabled;\n    return (\n        <ul className={cx('menu', 'menu-item-container', { hide: !isActive })}>\n            {options.map(option => (\n                <li key={option.value}>\n                    <button\n                        className={cx('menu-item')}\n                        onClick={boundOnClick(option)}\n                    >\n                        {option.label}\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nMenu.propTypes = {\n    active: PropTypes.bool.isRequired,\n    options: PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node,\n        value: PropTypes.any,\n    })).isRequired,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool.isRequired,\n};\n\nMenu.defaultProps = {\n    disabled: false,\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames/bind';\nimport { noop } from 'underscore';\nimport style from './style.scss';\n\nconst cx = classnames.bind(style);\n\nconst ComplexToggle = ({ active, onClick, children, disabled }) => {\n    const isActive = active && !disabled;\n    const onclick = disabled ? noop : onClick;\n\n    return (\n        <button className={cx('btn-block', 'toggle', { active })} onClick={onclick} disabled={disabled}>\n            <div className={cx('pull-left', 'align-middle')}>{children}</div>\n            <div className={cx('pull-right', 'align-middle')}>\n                <i className={cx('fa', 'caret', { 'fa-caret-up': isActive, 'fa-caret-down': !isActive })} />\n            </div>\n        </button>\n    );\n};\n\nComplexToggle.propTypes = {\n    active: PropTypes.bool.isRequired,\n    children: PropTypes.element,\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool.isRequired,\n};\n\nComplexToggle.defaultProps = {\n    disabled: false,\n};\n\nexport default ComplexToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ComplexToggle from './ComplexToggle';\n\nconst Toggle = ({ value, ...props }) => (\n    <ComplexToggle {...props}>\n        <span>{value ? value.label : ' '}</span>\n    </ComplexToggle>\n);\n\nToggle.propTypes = {\n    active: PropTypes.bool.isRequired,\n    value: PropTypes.shape({\n        label: PropTypes.node,\n    }),\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport { noop } from 'underscore';\nimport ReactClickOutside from 'react-click-outside';\nimport style from './style.scss';\nimport Menu from './Menu';\nimport Toggle from './Toggle';\n\nconst cx = classnames.bind(style);\n\nclass Dropdown extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = {\n            active: false,\n        };\n\n        console.warn('Don\\'t use anything in here if you can avoid it.' +\n            ' I plan to replace this convoluted nonsense that I factored out of capacity report. - Marque');\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.selection !== this.props.selection) {\n            this.setState({ active: false });\n        }\n    }\n\n    onClickToggle(event) {\n        event.preventDefault();\n        this.setState({ active: !this.state.active });\n    }\n\n    onClickMenuItem(option) {\n        this.setState({ active: false }, () => this.props.onChange(option));\n    }\n\n    // Used by ReactClickOutside\n    handleClickOutside() {\n        if (this.state.active) {\n            this.setState({ active: false });\n        }\n    }\n\n    render() {\n        const { active } = this.state;\n        const { disabled, className, value, options } = this.props;\n        return (\n            <div className={cx(className, 'nmbl-dropdown')}>\n                <Toggle active={active} value={value} onClick={this.onClickToggle} disabled={disabled} />\n                <Menu active={active} options={options} onClick={this.onClickMenuItem} disabled={disabled} />\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    value: PropTypes.object,\n    onChange: PropTypes.func,\n    options: PropTypes.array.isRequired,\n    selection: PropTypes.any,\n    disabled: PropTypes.bool.isRequired,\n};\n\nDropdown.defaultProps = {\n    disabled: false,\n    onChange: noop,\n};\n\nexport default ReactClickOutside(Dropdown);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport classnames from 'classnames/bind';\nimport ReactClickOutside from 'react-click-outside';\nimport style from './style.scss';\nimport ComplexToggle from './ComplexToggle';\n\nconst cx = classnames.bind(style);\n\nclass ComplexDropdown extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n        this.state = {\n            active: false,\n        };\n\n        console.warn('Don\\'t use anything in here if you can avoid it.' +\n            ' I plan to replace this convoluted nonsense that I factored out of capacity report. - Marque');\n    }\n\n    componentWillReceiveProps() {\n        this.setState({ active: false });\n    }\n\n    onClickToggle() {\n        this.setState({ active: !this.state.active });\n    }\n\n    // Called by react-click-outside HOC\n    handleClickOutside() {\n        if (this.state.active) {\n            this.setState({ active: false });\n        }\n    }\n\n    render() {\n        const { valueRenderer, value, className, menuClassName, children, disabled } = this.props;\n        const { active } = this.state;\n        return (\n            <div className={cx(className, 'nmbl-dropdown')}>\n                <ComplexToggle active={active} onClick={this.onClickToggle} value={value} disabled={disabled}>\n                    {valueRenderer(value)}\n                </ComplexToggle>\n                <div className={cx('menu', menuClassName, { hide: !active || disabled })}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nComplexDropdown.propTypes = {\n    value: PropTypes.object,\n    menuClassName: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    valueRenderer: PropTypes.func.isRequired,\n    disabled: PropTypes.bool.isRequired,\n};\n\nComplexDropdown.defaultProps = {\n    value: null,\n    disabled: false,\n};\n\nexport default ReactClickOutside(ComplexDropdown);\n","import Dropdown from './Dropdown';\nimport ComplexDropdown from './ComplexDropdown';\nimport ComplexToggle from './ComplexToggle';\n\nexport default Dropdown;\nexport { ComplexDropdown, ComplexToggle };\n","import { actionsFor } from '@infosight/elmer/dist/utils/redux';\nimport { groupBy, indexBy } from 'underscore';\nimport axios from 'axios';\nimport moment from 'moment-timezone';\nimport { saveAs } from 'file-saver';\nimport {\n    LIST_FETCH,\n    SUMMARY_CARDS_FETCH,\n    CSV_FETCH,\n    RESET,\n} from './constants';\nimport Request from '../../../../services/Request';\n\n/**\n * For better access, index the pools list by Id\n * @param {*} pools\n */\nconst indexById = pools => indexBy(pools, 'poolUid');\n\nconst groupById = pools => groupBy(pools, 'poolUid');\n\n/**\n * Fetches the list of Pools\n * @param {*} scope\n */\nexport function fetchPools(scope) {\n    return (dispatch) => {\n        const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(LIST_FETCH, dispatch);\n        dispatchStart();\n\n        new Request().pod().genericQuery('pools')\n            .post({ scope })\n            .then(response => indexById(response.data.data))\n            .then(dispatchSuccess)\n            .catch(dispatchError);\n    };\n}\n\n/**\n * Fetch Top Volumes in a Pool ranked by Days Until Full\n * @param {object} scope\n * @param {number} n, defaults to 10\n */\nfunction fetchTopNVolumesByCapacity(scope, n = 10) {\n    const options = { scope };\n\n    options.filters = [{\n        field: 'rankByCapacity', // TODO: Change this to daysUntilFull once data is available\n        $lte: n,\n    }];\n\n    return new Request().pod().genericQuery('volume', ['capacityByPool'])\n        .post(options);\n}\n\n/**\n * Fetch TOP N Volumes By IO and  Latency\n * TODO: Latency part\n * @param {object} scope\n * @param {number} n , defaults to 20\n */\nfunction fetchTopNPerformantVolumes(scope, n = 20) {\n    const options = { scope };\n\n    options.filters = [{\n        field: 'performanceRank',\n        $lte: n,\n    }];\n\n    return new Request().pod().genericQuery('volume', ['topPerformanceByPool'])\n        .post(options);\n}\n\n/**\n * Fetch CPU and cache data for the pools\n * @param {object} scope\n */\nfunction fetchCpuCacheUsage(scope) {\n    const options = { scope };\n\n    return new Request().pod().genericQuery('pool', ['cpuCacheUsage'])\n        .post(options);\n}\n\n/**\n * Dispatches all the api calls required to get data for the executive card charts\n * and updates the state with final wrangled data\n */\nexport function fetchSummaryCards(scope) {\n    return (dispatch) => {\n        const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(SUMMARY_CARDS_FETCH, dispatch);\n        dispatchStart();\n\n        new Request().all([\n            fetchTopNVolumesByCapacity(scope),\n            fetchTopNPerformantVolumes(scope),\n            fetchCpuCacheUsage(scope),\n        ])\n            .then(axios.spread((volumesByCapacity, volumesByIO, cpuCacheUsage) => {\n                const capacity = groupById(volumesByCapacity.data.data);\n                const io = groupById(volumesByIO.data.data);\n                const cpuCache = indexById(cpuCacheUsage.data.data);\n                const finalData = Object.keys(capacity).map(poolId => ({\n                    volumesByCapacity: capacity[poolId],\n                    volumesByIO: io[poolId],\n                    ...cpuCache[poolId],\n                }));\n                return finalData;\n            }))\n            .then(dispatchSuccess)\n            .catch(dispatchError);\n    };\n}\n/**\n * Download the pools CSV file. NOTE: this actually saves the file\n */\nexport const getPoolsCsv = scope => (dispatch) => {\n    const { dispatchStart, dispatchSuccess, dispatchError } = actionsFor(CSV_FETCH, dispatch);\n    dispatchStart();\n\n    new Request().pod().genericQuery('pools').csv()\n        .post({ scope }, { responseType: 'blob' })\n        .then(x => saveAs(x.data, `HPE InfoSight Pools ${moment().format('L').replace(/\\\\|\\//g, '-')}.csv`))\n        .then(() => dispatchSuccess({})) // we want to end the loading but don't actually want to save the CSV data in redux\n        .catch(dispatchError);\n};\n\nexport function reset() {\n    return { type: RESET };\n}\n","import React from 'react';\nimport numeral from 'numeral';\nimport classnames from 'classnames/bind';\nimport { ProgressWithValue, Progress } from '@infosight/elmer/dist/components/Progress';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport { COLUMN_WIDTHS } from '@infosight/elmer/dist/components/Table';\nimport { ObjectDetailLink, ObjectListPopover } from '@infosight/elmer/dist/infrastructure';\nimport Savings from '../../../detail/components/headline/Savings';\nimport {\n    BYTE_FORMAT_PRECISION,\n    NUMBER_ABBREVIATE_FORMAT,\n    LATENCY_UNIT_ABBR,\n    IOPS_UNIT_ABBR,\n    listValueFormatter,\n} from '../../../../../constants';\nimport { OBJECTS } from '../../../../inventory';\nimport { DaysUntilFull } from '../../../../volumes/common';\nimport { getValueAndUnit } from '../../../../../../util/numeralHelpers';\nimport { SPACE_CATEGORY, PERFORMANCE_CATEGORY } from '../../constants';\n\nconst numeralPerSec = (value, format) => {\n    const valueAndUnit = getValueAndUnit(value, format);\n    const number = valueAndUnit[0];\n    const unit = valueAndUnit[1] || 'B';\n\n    if (!number) {\n        return '';\n    }\n    return (<span>{number} {unit}/sec</span>);\n};\n\n/* eslint-disable react/prop-types */\n\n\nexport default infrastructureConfig => ({\n    categories: [SPACE_CATEGORY, PERFORMANCE_CATEGORY],\n    columns: [\n        {\n            Header: 'Pool Name',\n            accessor: 'poolName',\n            filterable: true,\n            minWidth: COLUMN_WIDTHS.LARGE,\n            Cell: ({ original: { poolName, poolUid } }) => (<ObjectDetailLink\n                objectType={OBJECTS.POOL}\n                id={poolUid}\n                productInterface={infrastructureConfig}\n                name={poolName}\n            />),\n        },\n        {\n            Header: 'Group Name',\n            accessor: 'groupName',\n            filterable: true,\n            minWidth: COLUMN_WIDTHS.LARGE,\n            Cell: ({ original: { groupName } }) => <span>{ groupName }</span>,\n        },\n        {\n            Header: 'Arrays',\n            accessor: 'arrayHostName',\n            filterable: true,\n            minWidth: COLUMN_WIDTHS.LARGE,\n            Cell: ({ original: { arrayHostName, poolArrays } }) => {\n                if (poolArrays) {\n                    const arrayList = poolArrays.toString().split(', ').map(snHost => (snHost.split(':'))).map(list => ({ id: list[0], name: list[1] }));\n                    return (<ObjectListPopover\n                        productInterface={infrastructureConfig}\n                        objectList={arrayList}\n                        type={OBJECTS.ARRAY}\n                        listSuffix=\"Arrays\"\n                        includeIcon={false}\n                    />);\n                }\n                return arrayHostName;\n            },\n        },\n        {\n            Header: 'Time Until Full',\n            headerClassName: 'text-right',\n            accessor: 'daysUntilFull',\n            filterable: false,\n            className: 'text-right',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            categories: [SPACE_CATEGORY],\n            Cell: ({ original: { daysUntilFull } }) => <DaysUntilFull days={daysUntilFull} inline />,\n        },\n        {\n            Header: '% Used',\n            accessor: 'percentFull',\n            filterable: false,\n            minWidth: COLUMN_WIDTHS.XLARGE,\n            style: { marginTop: '8px' },\n            categories: [SPACE_CATEGORY],\n            Cell: ({ original: { percentFull, usedBytes, allocatedBytes } }) => (\n                <ProgressWithValue\n                    leftLabel={`${numeral(percentFull).format('0.0%')}\n                    \\u00A0(${numeral(usedBytes).format(BYTE_FORMAT_PRECISION)})`}\n                >\n                    <Progress\n                        className={percentFull >= 0.9 ? 'danger' : null}\n                        max={allocatedBytes}\n                        value={usedBytes > allocatedBytes ? allocatedBytes : usedBytes}\n                    />\n                </ProgressWithValue>),\n        },\n        {\n            Header: 'Size',\n            headerClassName: 'text-right',\n            accessor: 'allocatedBytes',\n            className: 'text-right',\n            filterable: false,\n            minWidth: COLUMN_WIDTHS.SMALL,\n            categories: [SPACE_CATEGORY],\n            Cell: ({ original: { allocatedBytes } }) => <span>{ numeral(allocatedBytes).format(BYTE_FORMAT_PRECISION) }</span>,\n        },\n        {\n            Header: 'Unused Reserve',\n            headerClassName: 'text-right',\n            accessor: 'unusedReserveBytes',\n            className: 'text-right',\n            filterable: false,\n            minWidth: COLUMN_WIDTHS.SMALL,\n            categories: [SPACE_CATEGORY],\n            Cell: ({ original: { unusedReserveBytes } }) => numeral(unusedReserveBytes).format(BYTE_FORMAT_PRECISION),\n        },\n        {\n            Header: 'Savings',\n            headerClassName: 'text-right',\n            accessor: 'savingsFactor',\n            className: 'text-right',\n            filterable: false,\n            minWidth: COLUMN_WIDTHS.LARGE,\n            categories: [SPACE_CATEGORY],\n            Cell: ({ original: {\n                totalSavingsBytes,\n                totalSavingsFactor,\n                savingsDedupBytes,\n                usedBytes,\n                savingsCompressionBytes,\n                savingsCloneBytes,\n                cloneSavingsFactor,\n                compressionSavingsFactor,\n                dedupSavingsFactor } }) =>\n                (<Savings\n                    context=\"table\"\n                    totalSavings={totalSavingsBytes}\n                    totalSavingsFactor={totalSavingsFactor}\n                    cloneSavingsFactor={cloneSavingsFactor}\n                    compressionSavingsFactor={compressionSavingsFactor}\n                    dedupSavingsFactor={dedupSavingsFactor}\n                    cloneSavings={savingsCloneBytes}\n                    dedupSavings={savingsDedupBytes}\n                    compressionSavings={savingsCompressionBytes}\n                    usedBytes={usedBytes}\n                />),\n        },\n        {\n            Header: 'Cache Capacity',\n            headerClassName: 'text-center',\n            categories: [SPACE_CATEGORY],\n            columns: [\n                {\n                    Header: 'Pinnable',\n                    headerClassName: 'text-right',\n                    accessor: 'pinnableCacheCapacity',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { pinnableCacheCapacity, allFlash } }) =>\n                        (allFlash ? 'all-flash' : numeral(pinnableCacheCapacity).format(BYTE_FORMAT_PRECISION)),\n                },\n                {\n                    Header: 'Pinned',\n                    headerClassName: 'text-right',\n                    accessor: 'pinnedCacheCapacity',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { pinnedCacheCapacity, allFlash } }) =>\n                        (allFlash ? 'all-flash' : numeral(pinnedCacheCapacity).format(BYTE_FORMAT_PRECISION)),\n                },\n            ],\n        },\n        {\n            Header: 'Past Growth (days)',\n            headerClassName: 'text-center',\n            categories: [SPACE_CATEGORY],\n            columns: [\n                {\n                    Header: '90',\n                    headerClassName: 'text-right',\n                    accessor: 'growthLast90Days',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthLast90Days } }) => (growthLast90Days === null ? '' : <PercentGrowth value={growthLast90Days} isPercent />),\n                },\n                {\n                    Header: '60',\n                    headerClassName: 'text-right',\n                    accessor: 'growthLast60Days',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthLast60Days } }) => (growthLast60Days === null ? '' : <PercentGrowth value={growthLast60Days} isPercent />),\n                },\n                {\n                    Header: '30',\n                    headerClassName: 'text-right',\n                    accessor: 'growthLast30Days',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.XSMALL,\n                    Cell: ({ original: { growthLast30Days } }) => (growthLast30Days === null ? '' : <PercentGrowth value={growthLast30Days} isPercent />),\n                },\n            ],\n        },\n        {\n            Header: 'Avg IOPS (past week)',\n            headerClassName: 'text-center',\n            categories: [PERFORMANCE_CATEGORY],\n            columns: [\n                {\n                    Header: 'Read',\n                    headerClassName: 'text-right',\n                    accessor: 'avgReadsPerWeek',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgReadsPerWeek } }) => listValueFormatter(avgReadsPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                },\n                {\n                    Header: 'Write',\n                    headerClassName: 'text-right',\n                    accessor: 'avgWritesPerWeek',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgWritesPerWeek } }) => listValueFormatter(avgWritesPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                },\n                {\n                    Header: 'Overall',\n                    headerClassName: 'text-right',\n                    accessor: 'avgIopsPerWeek',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgIopsPerWeek } }) => listValueFormatter(avgIopsPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                },\n            ],\n        },\n        {\n            Header: 'Avg Latency (past week)',\n            headerClassName: 'text-center',\n            categories: [PERFORMANCE_CATEGORY],\n            columns: [\n                {\n                    Header: 'Read',\n                    headerClassName: 'text-right',\n                    accessor: 'avgReadLatencyMs',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgReadLatencyMs } }) => `${numeral(avgReadLatencyMs).format(NUMBER_ABBREVIATE_FORMAT)} ${LATENCY_UNIT_ABBR}`,\n                },\n                {\n                    Header: 'Write',\n                    headerClassName: 'text-right',\n                    accessor: 'avgWriteLatencyMs',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgWriteLatencyMs } }) => `${numeral(avgWriteLatencyMs).format(NUMBER_ABBREVIATE_FORMAT)} ${LATENCY_UNIT_ABBR}`,\n                },\n                {\n                    Header: 'Overall',\n                    headerClassName: 'text-right',\n                    accessor: 'avgLatencyMs',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgLatencyMs } }) => `${numeral(avgLatencyMs).format(NUMBER_ABBREVIATE_FORMAT)} ${LATENCY_UNIT_ABBR}`,\n                },\n            ],\n        },\n        {\n            Header: 'Avg Throughput (past week)',\n            headerClassName: 'text-center',\n            categories: [PERFORMANCE_CATEGORY],\n            columns: [\n                {\n                    Header: 'Read',\n                    headerClassName: 'text-right',\n                    accessor: 'avgReadThroughput',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgReadThroughput } }) => numeralPerSec(avgReadThroughput, BYTE_FORMAT_PRECISION),\n                },\n                {\n                    Header: 'Write',\n                    headerClassName: 'text-right',\n                    accessor: 'avgWriteThroughput',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgWriteThroughput } }) => numeralPerSec(avgWriteThroughput, BYTE_FORMAT_PRECISION),\n                },\n                {\n                    Header: 'Overall',\n                    headerClassName: 'text-right',\n                    accessor: 'avgThroughput',\n                    filterable: false,\n                    className: 'text-right',\n                    minWidth: COLUMN_WIDTHS.SMALL,\n                    Cell: ({ original: { avgThroughput } }) => numeralPerSec(avgThroughput, BYTE_FORMAT_PRECISION),\n                },\n            ],\n        },\n        {\n            Header: 'CPU Usage',\n            headerClassName: 'text-right',\n            accessor: 'avgCpuUtilization',\n            filterable: false,\n            categories: [PERFORMANCE_CATEGORY],\n            className: 'text-right',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { avgCpuUtilization, cpuUtilizationThreshold } }) => (\n                <span className={classnames(avgCpuUtilization > cpuUtilizationThreshold ? 'text-danger' : null)}>\n                    {numeral(avgCpuUtilization).format('0.0')} %\n                </span>),\n        },\n        {\n            Header: 'Cache Miss Rate',\n            headerClassName: 'text-right',\n            accessor: 'avgCacheMissRate',\n            filterable: false,\n            categories: [PERFORMANCE_CATEGORY],\n            className: 'text-right',\n            minWidth: COLUMN_WIDTHS.SMALL,\n            Cell: ({ original: { avgCacheMissRate, cacheMissThreshold } }) => (\n                <span className={classnames(avgCacheMissRate > cacheMissThreshold ? 'text-danger' : null)}>\n                    {numeral(avgCacheMissRate).format('0.0')} %\n                </span>),\n        },\n    ],\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { values } from 'underscore';\nimport { ClientControlledTable } from '@infosight/elmer/dist/components/Table';\nimport { userSelector } from '../../../../../user/reducer';\nimport { fetchPools, reset, getPoolsCsv } from '../../actionCreators';\nimport {\n    poolsCollectionSelector,\n    csvSelector,\n} from '../../reducer';\nimport getConfig from './getConfig';\n\nexport class PoolsTableView extends Component {\n    componentDidMount() {\n        const { scope, config } = this.props;\n        this.props.fetchPools(config.convertToGenericQueryScope(scope));\n    }\n\n    componentWillUnmount() {\n        this.props.resetPoolCollection();\n    }\n\n    render() {\n        const { userName, pools, loadingPools, config, loadingPoolsCsv, scope, enabledFieldSets, disableDefaultSort } = this.props;\n        const { columns, categories } = getConfig(config);\n\n        return (\n            <ClientControlledTable\n                tableId={`${userName}_NIMBLE_POOLS`}\n                data={pools ? values(pools) : []}\n                columns={columns}\n                categories={enabledFieldSets || categories}\n                loading={loadingPools}\n                defaultSorted={!disableDefaultSort ? [{ id: 'poolName', desc: false }] : undefined}\n                downloadCsv={() => this.props.getPoolsCsv(config.convertToGenericQueryScope(scope))}\n                downloadingCsv={loadingPoolsCsv}\n                {...this.props}\n            />\n        );\n    }\n}\n\nPoolsTableView.propTypes = {\n    userName: PropTypes.string,\n    resetPoolCollection: PropTypes.func.isRequired,\n    pools: PropTypes.arrayOf(PropTypes.shape({\n        allFlash: PropTypes.bool,\n        allocatedBytes: PropTypes.number,\n        arrayHostName: PropTypes.string,\n        arraySearchableName: PropTypes.string,\n        arraySn: PropTypes.string,\n        avgCacheMissRate: PropTypes.number,\n        avgCpuUtilization: PropTypes.number,\n        avgIopsPerWeek: PropTypes.number,\n        avgLatencyMs: PropTypes.number,\n        avgReadLatencyMs: PropTypes.number,\n        avgReadThroughput: PropTypes.number,\n        avgReadsPerWeek: PropTypes.number,\n        avgThroughput: PropTypes.number,\n        avgWriteLatencyMs: PropTypes.number,\n        avgWriteThroughput: PropTypes.number,\n        avgWritesPerWeek: PropTypes.number,\n        daysUntilFull: PropTypes.number,\n        folderCount: PropTypes.number,\n        freeBytes: PropTypes.number,\n        groupName: PropTypes.string,\n        groupUid: PropTypes.string,\n        growthLast30Days: PropTypes.number,\n        growthLast60Days: PropTypes.number,\n        growthLast90Days: PropTypes.number,\n        lastWeekGrowthPercent: PropTypes.number,\n        pinnableCacheCapacity: PropTypes.number,\n        pinnedCacheCapacity: PropTypes.number,\n        poolArrays: PropTypes.number,\n        poolName: PropTypes.string,\n        poolUid: PropTypes.string,\n        savingsCloneBytes: PropTypes.number,\n        savingsCompressionBytes: PropTypes.number,\n        savingsDedupBytes: PropTypes.number,\n        savingsFactor: PropTypes.number,\n        snapshotCount: PropTypes.number,\n        totalSavingsBytes: PropTypes.number,\n        unusedReserveBytes: PropTypes.number,\n        usedBytes: PropTypes.number,\n        volumeCount: PropTypes.number,\n    })),\n    loadingPools: PropTypes.bool,\n    fetchPools: PropTypes.func.isRequired,\n    getPoolsCsv: PropTypes.func.isRequired,\n    loadingPoolsCsv: PropTypes.bool.isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    enabledFieldSets: PropTypes.array,\n\n    // TODO: Until elmer Table is fixed to support namespaced url params\n    disableDefaultSort: PropTypes.bool,\n};\n\nPoolsTableView.defaultProps = {\n    pools: [],\n    loadingPools: false,\n    loadingPoolsCsv: false,\n    disableDefaultSort: false,\n};\n\nconst mapStateToProps = state => ({\n    ...poolsCollectionSelector(state),\n    ...csvSelector(state),\n    userName: userSelector(state).username,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    fetchPools,\n    resetPoolCollection: reset,\n    getPoolsCsv,\n}, dispatch);\n\n/*\n Reason for passing pure: false\n This component is being used in multiple places.\n In one of the place ie., Capacity Dashboard, the parent of this component does not pass match as a prop.\n So when the match (prop from child of this component ie., FacetedCollectionPage) changes\n this is not being rerendered as by default react-redux connect will make this component a Pure Component.\n So by passing {pure: false}, it will rerender even if none of the props were changed\n*/\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(PoolsTableView);\n","import React from 'react';\nimport { ProgressWithValue, Progress } from '@infosight/elmer/dist/components/Progress';\nimport { ObjectDetailLink } from '@infosight/elmer/dist/infrastructure';\nimport StatusIndicator from '@infosight/elmer/dist/components/StatusIndicator';\nimport PercentGrowth from '@infosight/elmer/dist/components/PercentGrowth';\nimport { COLUMN_WIDTHS } from '@infosight/elmer/dist/components/Table';\nimport NamedNimbleIcon from '../../../../components/NamedNimbleIcon';\nimport { OBJECTS } from '../../../../inventory';\nimport { DataProtection, DaysUntilFull, categorizeDaysUntilFull, VolumeStatus, VolumeDataUsageInfo } from '../../../common';\nimport {\n    BYTE_FORMAT_PRECISION,\n    NUMBER_FORMAT_PRECISION,\n    NUMBER_ABBREVIATE_FORMAT,\n    LATENCY_UNIT_ABBR,\n    IOPS_UNIT_ABBR,\n    PERCENT_ABBR,\n    listValueFormatter,\n    formatValue,\n    isEmpty,\n} from '../../../../../constants';\nimport { formatDateTime } from '../../../../../../util/formatter';\nimport { FORMAT_MOMENT_DATE_TIME } from '../../../../../../util/formatter/constants';\nimport { DEFAULT_TAB, SPACE_TAB, PERFORMANCE_TAB, PROTECTION_TAB } from '../../constants';\n\nconst percentGrowthRenderer = value => (isEmpty(value) ? null : <PercentGrowth value={value} isPercent />);\n\n/* eslint-disable react/prop-types */\n\nexport default infrastructureConfig =>\n    ({\n        categories: [DEFAULT_TAB, SPACE_TAB, PERFORMANCE_TAB, PROTECTION_TAB],\n        columns: [\n            {\n                Header: 'Volume Name',\n                accessor: 'name',\n                minWidth: COLUMN_WIDTHS.XLARGE,\n                Cell: ({ original: { name, sn } }) =>\n                    <ObjectDetailLink objectType={OBJECTS.VOLUME} id={sn} productInterface={infrastructureConfig} name={name} />,\n                filterable: true,\n            },\n            {\n                Header: 'Attributes',\n                headerClassName: 'text-center',\n                accessor: 'volumeStatusSort',\n                categories: [DEFAULT_TAB],\n                minWidth: COLUMN_WIDTHS.SMALL,\n                Cell: ({ original: { volumePinned, volumeEncrypted } }) => (\n                    <VolumeStatus\n                        volumePinned={volumePinned}\n                        volumeEncrypted={volumeEncrypted}\n                    />),\n            },\n            {\n                Header: 'Application',\n                accessor: 'appCategory',\n                categories: [DEFAULT_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                Cell: ({ original: { appCategory } }) =>\n                    <NamedNimbleIcon iconName={appCategory} inline />,\n                filterable: true,\n            },\n            {\n                Header: 'Array',\n                accessor: 'arraySearchableName',\n                categories: [DEFAULT_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                Cell: ({ original: { hostName, arraySn } }) => {\n                    if (arraySn === null) {\n                        return null;\n                    }\n                    if (hostName === null) {\n                        hostName = '';\n                    }\n                    const name = `${hostName} (${arraySn})`;\n                    return <ObjectDetailLink objectType={OBJECTS.ARRAY} id={arraySn} config={infrastructureConfig} name={name} includeIcon={false} />;\n                },\n                filterable: true,\n            },\n            {\n                Header: 'Pool',\n                accessor: 'poolName',\n                categories: [DEFAULT_TAB],\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                Cell: ({ original: { poolName, poolUid } }) =>\n                    <ObjectDetailLink objectType={OBJECTS.POOL} id={poolUid} config={infrastructureConfig} name={poolName} includeIcon={false} />,\n                filterable: true,\n            },\n            {\n                Header: 'Folder',\n                accessor: 'folderName',\n                categories: [DEFAULT_TAB],\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                filterable: true,\n            },\n            {\n                Header: 'Total Usage',\n                headerClassName: 'text-right',\n                accessor: 'totalUsageBytes',\n                categories: [SPACE_TAB],\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.SMALL,\n                Cell: ({ original: { totalUsageBytes } }) => listValueFormatter(totalUsageBytes, BYTE_FORMAT_PRECISION),\n            },\n            {\n                Header: <VolumeDataUsageInfo title=\"% Data Usage\" />,\n                accessor: 'percentFull',\n\n                categories: [DEFAULT_TAB, SPACE_TAB],\n                minWidth: COLUMN_WIDTHS.XLARGE,\n                style: { marginTop: '8px' },\n                Cell: ({ original: { percentFull, dataUsageBytes, allocatedBytes } }) => (\n                    <ProgressWithValue\n                        leftLabel={`${listValueFormatter(percentFull, PERCENT_ABBR)}\n                        \\u00A0(${listValueFormatter(dataUsageBytes, BYTE_FORMAT_PRECISION)})`}\n                    >\n                        <Progress\n                            className={percentFull >= 0.9 ? 'danger' : null}\n                            max={allocatedBytes}\n                            value={dataUsageBytes > allocatedBytes ? allocatedBytes : dataUsageBytes}\n                        />\n                    </ProgressWithValue>),\n                sortable: true,\n            },\n            {\n                Header: 'Size',\n                accessor: 'allocatedBytes',\n                headerClassName: 'text-right',\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.XSMALL,\n                Cell: ({ original: { allocatedBytes } }) => listValueFormatter(allocatedBytes, BYTE_FORMAT_PRECISION),\n                categories: [DEFAULT_TAB, SPACE_TAB],\n            },\n            {\n                Header: 'Days Until Full',\n                headerClassName: 'text-right',\n                accessor: 'daysUntilFull',\n                filterable: true,\n                categories: [SPACE_TAB],\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                Cell: ({ original: { daysUntilFull } }) => <DaysUntilFull days={daysUntilFull} inline />,\n                filterMethod: (filter, row) => {\n                    const { id, value: filterValue } = filter;\n                    const rowValue = row[id];\n                    if (!isEmpty(rowValue)) {\n                        /* Why is this switch added: IS-18362 */\n                        switch (filterValue) {\n                        case '<= 1 Week': return rowValue <= 7;\n                        case '>1 Week and <=1 Month': return rowValue > 7 && rowValue <= 28;\n                        case '>1 Month': return rowValue > 29;\n                        default:\n                            return String(categorizeDaysUntilFull(rowValue).category)\n                                .toLowerCase().includes(String(filterValue).toLowerCase());\n                        }\n                    }\n                    return false;\n                },\n            },\n            {\n                Header: 'SNAPSHOT',\n                headerClassName: 'text-center',\n                categories: [SPACE_TAB],\n                columns: [\n                    {\n                        Header: 'Count',\n                        headerClassName: 'text-right',\n                        accessor: 'snapshotCount',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                    },\n                    {\n                        Header: 'Usage',\n                        headerClassName: 'text-right',\n                        accessor: 'snapshotBytes',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.LARGE,\n                        Cell: ({ original: { snapshotBytes } }) => listValueFormatter(snapshotBytes, BYTE_FORMAT_PRECISION),\n                    },\n                ],\n            },\n            {\n                Header: 'Compression',\n                headerClassName: 'text-right',\n                accessor: 'volumeCompression',\n\n                className: 'text-right',\n                categories: [SPACE_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                Cell: ({ original: { volumeCompression } }) => (isEmpty(volumeCompression) ? null :\n                    `${formatValue(volumeCompression, NUMBER_FORMAT_PRECISION)}X`),\n            },\n            {\n                Header: 'Dedupe',\n                headerClassName: 'text-right',\n                accessor: 'dedupeEnabled',\n\n                categories: [SPACE_TAB],\n                minWidth: COLUMN_WIDTHS.SMALL,\n                Cell: ({ original: { dedupeEnabled } }) => { // eslint-disable-line arrow-body-style\n                    return isEmpty(dedupeEnabled) ? null :\n                        (<StatusIndicator\n                            status={dedupeEnabled ? 'success' : 'unavailable'}\n                            tooltip={dedupeEnabled ? 'Enabled' : 'Disabled'}\n                            size={17}\n                        />);\n                },\n            },\n            {\n                Header: 'Past Growth (days)',\n                headerClassName: 'text-center',\n                categories: [SPACE_TAB],\n                columns: [\n                    {\n                        Header: '90',\n                        headerClassName: 'text-right',\n                        accessor: 'last90daysGrowth',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { last90daysGrowth } }) => percentGrowthRenderer(last90daysGrowth),\n                    },\n                    {\n                        Header: '60',\n                        headerClassName: 'text-right',\n                        accessor: 'last60daysGrowth',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { last60daysGrowth } }) => percentGrowthRenderer(last60daysGrowth),\n                    },\n                    {\n                        Header: '30',\n                        headerClassName: 'text-right',\n                        accessor: 'last30daysGrowth',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.XSMALL,\n                        Cell: ({ original: { last30daysGrowth } }) => percentGrowthRenderer(last30daysGrowth),\n                    },\n                ],\n            },\n            {\n                Header: 'IO/Week',\n                headerClassName: 'text-right',\n                accessor: 'ioPerWeek',\n\n                categories: [DEFAULT_TAB],\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                Cell: ({ original: { perWeekIopsRead, perWeekIopsWrite } }) =>\n                    listValueFormatter(perWeekIopsRead + perWeekIopsWrite, NUMBER_ABBREVIATE_FORMAT),\n            },\n            {\n                Header: 'Performance Policy',\n                accessor: 'performancePolicy',\n                categories: [PERFORMANCE_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                filterable: true,\n            },\n            {\n                Header: 'Avg IOPS (past week)',\n                headerClassName: 'text-center',\n                categories: [PERFORMANCE_TAB],\n                columns: [\n                    {\n                        Header: 'Read',\n                        headerClassName: 'text-right',\n                        accessor: 'avgReadsPerWeek',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgReadsPerWeek } }) => listValueFormatter(avgReadsPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                    },\n                    {\n                        Header: 'Write',\n                        headerClassName: 'text-right',\n                        accessor: 'avgWritesPerWeek',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgWritesPerWeek } }) => listValueFormatter(avgWritesPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                    },\n                    {\n                        Header: 'Overall',\n                        headerClassName: 'text-right',\n                        accessor: 'avgIopsPerWeek',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgIopsPerWeek } }) => listValueFormatter(avgIopsPerWeek, NUMBER_ABBREVIATE_FORMAT, IOPS_UNIT_ABBR),\n                    },\n                ],\n            },\n            {\n                Header: 'Avg Latency (past week)',\n                headerClassName: 'text-center',\n                categories: [PERFORMANCE_TAB],\n                columns: [\n                    {\n                        Header: 'Read',\n                        headerClassName: 'text-right',\n                        accessor: 'avgReadLatencyMs',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgReadLatencyMs } }) => listValueFormatter(avgReadLatencyMs, NUMBER_ABBREVIATE_FORMAT, LATENCY_UNIT_ABBR),\n                    },\n                    {\n                        Header: 'Write',\n                        headerClassName: 'text-right',\n                        accessor: 'avgWriteLatencyMs',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgWriteLatencyMs } }) => listValueFormatter(avgWriteLatencyMs, NUMBER_ABBREVIATE_FORMAT, LATENCY_UNIT_ABBR),\n                    },\n                    {\n                        Header: 'Overall',\n                        headerClassName: 'text-right',\n                        accessor: 'avgLatencyMs',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgLatencyMs } }) => listValueFormatter(avgLatencyMs, NUMBER_ABBREVIATE_FORMAT, LATENCY_UNIT_ABBR),\n                    },\n                ],\n            },\n            {\n                Header: 'Avg Throughput (past week)',\n                headerClassName: 'text-center',\n                categories: [PERFORMANCE_TAB],\n                columns: [\n                    {\n                        Header: 'Read',\n                        headerClassName: 'text-right',\n                        accessor: 'avgReadThroughput',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgReadThroughput } }) => listValueFormatter(avgReadThroughput, BYTE_FORMAT_PRECISION),\n                    },\n                    {\n                        Header: 'Write',\n                        headerClassName: 'text-right',\n                        accessor: 'avgWriteThroughput',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgWriteThroughput } }) => listValueFormatter(avgWriteThroughput, BYTE_FORMAT_PRECISION),\n                    },\n                    {\n                        Header: 'Overall',\n                        headerClassName: 'text-right',\n                        accessor: 'avgThroughput',\n\n                        className: 'text-right',\n                        minWidth: COLUMN_WIDTHS.SMALL,\n                        Cell: ({ original: { avgThroughput } }) => listValueFormatter(avgThroughput, BYTE_FORMAT_PRECISION),\n                    },\n                ],\n            },\n            {\n                Header: 'Cache Hit Rate',\n                headerClassName: 'text-right',\n                accessor: 'cacheHit',\n\n                categories: [PERFORMANCE_TAB],\n                className: 'text-right',\n                minWidth: COLUMN_WIDTHS.SMALL,\n                Cell: ({ original: { cacheHit } }) => listValueFormatter(cacheHit, NUMBER_FORMAT_PRECISION, PERCENT_ABBR),\n            },\n            {\n                Header: 'Volume Collection',\n                accessor: 'volumeCollection',\n                categories: [PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                filterable: true,\n            },\n            {\n                Header: 'Protection Level',\n                accessor: 'protectionLevel',\n                categories: [DEFAULT_TAB, PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                Cell: ({ original: { protectionLevel } }) =>\n                    <DataProtection protectionLevel={protectionLevel} inline />,\n                filterable: true,\n            },\n            {\n                Header: 'Replication Partner',\n                accessor: 'replicationPartner',\n                categories: [PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n                filterable: true,\n            },\n            {\n                Header: 'Last Snapped',\n                headerClassName: 'text-right',\n                accessor: 'lastSnapped',\n\n                className: 'text-right',\n                categories: [PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                Cell: ({ original: { lastSnapped } }) => (\n                    <div\n                        className=\"ellipsis-on-overflow\"\n                        title={formatDateTime(lastSnapped, FORMAT_MOMENT_DATE_TIME)}\n                    >\n                        {formatDateTime(lastSnapped, FORMAT_MOMENT_DATE_TIME)}\n                    </div>),\n            },\n            {\n                Header: 'Last Replicated',\n                headerClassName: 'text-right',\n                accessor: 'lastReplicated',\n\n                className: 'text-right',\n                categories: [PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.MEDIUM,\n                Cell: ({ original: { lastReplicated } }) => (\n                    <div\n                        className=\"ellipsis-on-overflow\"\n                        title={formatDateTime(lastReplicated, FORMAT_MOMENT_DATE_TIME)}\n                    >\n                        {formatDateTime(lastReplicated, FORMAT_MOMENT_DATE_TIME)}\n                    </div>),\n            },\n            {\n                Header: 'Replication Lag (days)',\n                headerClassName: 'text-right',\n                accessor: 'replicationBehindDays',\n\n                className: 'text-right',\n                categories: [PROTECTION_TAB],\n                minWidth: COLUMN_WIDTHS.LARGE,\n            },\n        ],\n    });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { ClientControlledTable } from '@infosight/elmer/dist/components/Table';\nimport { userSelector } from '../../../../../user/reducer';\nimport { getVolumes, reset, getVolumesCsv } from '../../actionCreators';\nimport { listSelector, csvSelector } from '../../reducer';\nimport getConfig from './getConfig';\n\nexport class ListContainer extends Component {\n    componentDidMount() {\n        const { scope, config, filters } = this.props;\n        this.props.getVolumes(config.convertToGenericQueryScope(scope), filters);\n    }\n\n    componentWillUnmount() {\n        this.props.resetVolumeListStore();\n    }\n\n    render() {\n        const { loadingVolumes, volumes, config, loadingVolumesCsv, scope, userName, enabledFieldSets, disableDefaultSort } = this.props;\n        const { columns, categories } = getConfig(config);\n\n        return (\n            <ClientControlledTable\n                tableId={`${userName}_NIMBLE_VOLUMES`}\n                data={volumes}\n                columns={columns}\n                categories={enabledFieldSets || categories}\n                loading={loadingVolumes}\n                defaultSorted={!disableDefaultSort ? [{ id: 'name', desc: false }] : undefined}\n                downloadCsv={() => this.props.getVolumesCsv(config.convertToGenericQueryScope(scope))}\n                downloadingCsv={loadingVolumesCsv}\n                {...this.props}\n            />\n        );\n    }\n}\n\nListContainer.propTypes = {\n    volumes: PropTypes.arrayOf(PropTypes.shape({\n        sn: PropTypes.string,\n        name: PropTypes.string,\n        groupName: PropTypes.string,\n        folderName: PropTypes.string,\n        poolName: PropTypes.string,\n        arraySn: PropTypes.string,\n        hostName: PropTypes.string,\n        arraySearchableName: PropTypes.string,\n        appCategory: PropTypes.string,\n        protectionLevel: PropTypes.string,\n        dataUsageBytes: PropTypes.number,\n        allocatedBytes: PropTypes.number,\n        percentFull: PropTypes.number,\n        snapshotCount: PropTypes.number,\n        snapshotBytes: PropTypes.number,\n        isCompressed: PropTypes.bool,\n        volumeCompression: PropTypes.number,\n        totalUsageBytes: PropTypes.number,\n        daysUntilFull: PropTypes.number,\n        last30daysGrowth: PropTypes.number,\n        last60daysGrowth: PropTypes.number,\n        last90daysGrowth: PropTypes.number,\n        performancePolicy: PropTypes.string,\n        cacheHit: PropTypes.number,\n        perWeekIopsRead: PropTypes.number,\n        perWeekIopsWrite: PropTypes.number,\n        ioPerWeek: PropTypes.number,\n        avgReadsPerWeek: PropTypes.number,\n        avgWritesPerWeek: PropTypes.number,\n        avgIopsPerWeek: PropTypes.number,\n        avgReadLatencyMs: PropTypes.number,\n        avgWriteLatencyMs: PropTypes.number,\n        avgLatencyMs: PropTypes.number,\n        avgReadThroughput: PropTypes.number,\n        avgWriteThroughput: PropTypes.number,\n        avgThroughput: PropTypes.number,\n        volumeCollection: PropTypes.string,\n        volumeClone: PropTypes.bool,\n        replicationPartner: PropTypes.string,\n    })),\n    filters: PropTypes.arrayOf(PropTypes.object),\n    getVolumes: PropTypes.func.isRequired,\n    resetVolumeListStore: PropTypes.func.isRequired,\n    loadingVolumes: PropTypes.bool.isRequired,\n    getVolumesCsv: PropTypes.func.isRequired,\n    loadingVolumesCsv: PropTypes.bool.isRequired,\n\n    // Injected by XX_INFRASTRUCTURE_XX\n    scope: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n    config: PropTypes.object.isRequired,\n    userName: PropTypes.string,\n    enabledFieldSets: PropTypes.array,\n    // TODO: Until elmer Table is fixed to support namespaced url params\n    disableDefaultSort: PropTypes.bool,\n};\n\nListContainer.defaultProps = {\n    loadingVolumes: false,\n    loadingVolumesCsv: false,\n};\n\nconst mapStateToProps = state => ({\n    ...listSelector(state),\n    ...csvSelector(state),\n    userName: userSelector(state).username,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ getVolumes, resetVolumeListStore: reset, getVolumesCsv }, dispatch);\n\n/*\n Reason for passing pure: false\n This component is being used in multiple places.\n In one of the place ie., Capacity Dashboard, the parent of this component does not pass match as a prop.\n So when the match (prop from child of this component ie., FacetedCollectionPage) changes\n this is not being rerendered as by default react-redux connect will make this component a Pure Component.\n So by passing {pure: false}, it will rerender even if none of the props were changed\n*/\nexport default connect(mapStateToProps, mapDispatchToProps, null, { pure: false })(ListContainer);\n","/* eslint-disable import/no-named-as-default */\nimport VolumesContainer from './ListContainer';\n\nexport default VolumesContainer;\n","import React from 'react';\nimport FlashNotification from '@infosight/elmer/dist/components/FlashNotification';\nimport { createReducersForAction } from '@infosight/elmer/dist/utils/redux';\nimport rootSelector from '../rootSelector';\nimport {\n    FETCH,\n    CHANGE_ROLE,\n    DELETE,\n    CREATE,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    users: null,\n};\n\nfunction changeRoleReducer(state, { success, user, error }) {\n    // This is a bit hacky to be doing \"rendering\" here, but all this is really doing is lightweight message formatting via JSX\n    // The actual rendering is done by the Global <FlashNotification /> component in the <AppContainer> tree\n    if (success) {\n        FlashNotification.success(<span>Successfully changed role for <b>{user.login}</b></span>);\n        return {\n            ...state,\n            users: state.users.map((u) => {\n                if (u.login !== user.login) {\n                    return u;\n                }\n                return user;\n            }),\n        };\n    }\n    FlashNotification.error(<span>Error changing role for <b>{user.login}</b>: {error}</span>);\n    return state;\n}\n\nfunction deleteUserReducer(state, { success, user, error }) {\n    if (success) {\n        FlashNotification.success(<span>Successfully deleted <b>{user.login}</b></span>);\n        return {\n            ...state,\n            users: state.users.filter(u => u.login !== user.login),\n        };\n    }\n    FlashNotification.error(<span>Error deleting <b>{user.login}</b>: {error}</span>);\n    return state;\n}\n\nfunction createUserReducer(state, { success, user, login, error }) {\n    if (success) {\n        FlashNotification.success(<span>Successfully created <b>{login}</b></span>);\n        return {\n            ...state,\n            users: [\n                ...state.users,\n                user,\n            ],\n        };\n    }\n    FlashNotification.error(<span>Error creating <b>{login}</b>: {error}</span>);\n    return state;\n}\n\nconst ACTION_HANDLERS = {\n    [RESET]: () => (initialState),\n    [CHANGE_ROLE]: changeRoleReducer,\n    [DELETE]: deleteUserReducer,\n    [CREATE]: createUserReducer,\n    ...createReducersForAction({ type: FETCH, stateKey: 'users' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nexport const userSelector = state => rootSelector(state).user;\n","import rootState from '../rootStateSelector';\n\nexport default state => rootState(state).settings;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title__2sApc\",\"legacyLink\":\"legacyLink__2qvJc\",\"header-container\":\"header-container__2hhxZ\",\"header\":\"header__1LY0k\",\"align-middle\":\"align-middle__3Bb2g\",\"time-range\":\"time-range__3DYeZ\",\"pool-selector\":\"pool-selector__23x66\",\"menu\":\"menu__263M_\",\"label\":\"label__pSZtp\",\"container\":\"container__10rp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-pools\":\"all-pools__32vmT\",\"selection\":\"selection__2Xngm\"};","import { getStore } from '../../../util/storeProvider';\nimport { nimbleTotalSelector } from '../inventory/reducer';\nimport { nimbleTenantAdminAccess, AUTHORITIES, PRIVILEGES, PERMISSION_TARGET, nimbleTenantPrimaryAccess } from '../../user/constants';\nimport { permissionsSelector, tenantSelector, AuthorizationEvaluator } from '../../user';\n\n/**\n * This is a \"static class\" that should encapsulate the complex conditions that define Nimble users.\n * Each function should synchronously return a value.\n * Functions should all handle any null refs, since they can be run even for users with no nimble products.\n */\nconst NimbleUserTenantHelpers = {\n    isReseller() {\n        return AuthorizationEvaluator.evaluate({ access: { authorities: AUTHORITIES.ATTRIBUTE_NIMBLE_RESELLER } });\n    },\n\n    isExternal() {\n        return AuthorizationEvaluator.evaluate({ access: { authorities: AUTHORITIES.REALM_EXTERNAL } });\n    },\n\n    isInternal() {\n        return AuthorizationEvaluator.evaluate({ access: { authorities: AUTHORITIES.REALM_INTERNAL } });\n    },\n\n    ownsSelectedTenant() {\n        return AuthorizationEvaluator.evaluate({ access: nimbleTenantAdminAccess });\n    },\n\n    isPrimaryTenant() {\n        return AuthorizationEvaluator.evaluate({ access: nimbleTenantPrimaryAccess });\n    },\n\n    hasArrays() {\n        try {\n            return !!nimbleTotalSelector(getStore().getState());\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    getAuthorizedTenantCount() {\n        try {\n            const permissions = permissionsSelector(getStore().getState());\n            if (!permissions) {\n                return 0;\n            }\n\n            let count = 0;\n            for (let i = 0; i < permissions.length; i += 1) {\n                const { privilege, targetType, targetId } = permissions[i];\n                if (privilege === PRIVILEGES.ACCESS && targetType === PERMISSION_TARGET.NIMBLE_TENANT) {\n                    if (targetId === PERMISSION_TARGET.GLOBAL_TARGET_ID) {\n                        return Infinity;\n                    }\n\n                    count += 1;\n                }\n            }\n\n            return count;\n        } catch (ex) {\n            return 0;\n        }\n    },\n\n    canAccessMultipleTenants() {\n        return NimbleUserTenantHelpers.getAuthorizedTenantCount() > 1;\n    },\n\n    getCurrentTenant() {\n        const tenant = tenantSelector(getStore().getState());\n        return tenant ? tenant.tenant : null;\n    },\n\n    currentTenantIsNimbleTenant() {\n        return !!this.getCurrentTenant();\n    },\n\n    /**\n     * Useful for debugging\n     */\n    toJSON() {\n        return Object.entries(NimbleUserTenantHelpers).reduce((json, [key, value]) => {\n            if (key !== NimbleUserTenantHelpers.toJSON.name) {\n                json[key] = value();\n            }\n\n            return json;\n        });\n    },\n};\n\nexport default NimbleUserTenantHelpers;\n","import { buildUrl } from '@infosight/elmer/dist/utils/url';\nimport { getStore } from '../../../util/storeProvider';\nimport NimbleUserTenantHelpers from './NimbleUserTenantHelpers';\nimport { tenantSelector } from '../../user';\n\nexport { NimbleUserTenantHelpers };\n\nexport const buildNimbleTenantUrl = (tenantId, ...rest) => buildUrl('org', encodeURIComponent(`urn:nimble:${tenantId}`), ...rest);\nexport const buildUrlForCurrentTenant = (...rest) => {\n    const nimbleTenant = tenantSelector(getStore().getState());\n    return nimbleTenant && nimbleTenant.tenant ? buildNimbleTenantUrl(nimbleTenant.tenant.id, ...rest) : undefined;\n};\n\n/**\n * Nimble Resellers all have their own tenant, but they tend to have no Nimble Arrays.\n * Thus, they have no use for a bunch of empty infrastructure analytics pages when their tenant is selected.\n * So don't display Nimble/VMWare options.\n *\n * For other user types, we can simply use the authority\n *\n * @return {boolean|undefined}\n *  Is this a reseller AND the current tenant is the reseller's account AND has >=1 arrays? -> TRUE\n *  Is this a reseller AND the current tenant is the reseller's account AND has 0 arrays? -> FALSE\n *  else -> undefined\n */\nexport const nimbleResellerAuthorizationEvaluator = () => {\n    if (NimbleUserTenantHelpers.isReseller() && NimbleUserTenantHelpers.ownsSelectedTenant()) {\n        return NimbleUserTenantHelpers.hasArrays() && NimbleUserTenantHelpers.currentTenantIsNimbleTenant();\n    }\n\n    return undefined;\n};\n","import { createReducersForAction, createSelector } from '@infosight/elmer/dist/utils/redux';\nimport rootSelector from '../rootStateSelector';\nimport { FETCH_INVENTORY, OBJECTS, RESET } from './constants';\nimport { getStore } from '../../../util/storeProvider';\nimport { USER_CONTEXT_CHANGED } from '../../user/constants';\n\nconst initialState = {\n    objects: { flat: null, index: null, indexedDescendants: null },\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => initialState,\n    ...createReducersForAction({ type: FETCH_INVENTORY, stateKey: 'objects' }),\n    [RESET]: () => initialState,\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootSelector(state).inventory;\n\nexport const inventorySelector = createSelector(baseSelector, 'objects');\n\nexport const indexedSelector = state => baseSelector(state).objects && baseSelector(state).objects.index;\n\nexport const nimbleTotalSelector = state =>\n    (indexedSelector(state) && indexedSelector(state)[OBJECTS.ARRAY] ?\n        Object.keys(indexedSelector(state)[OBJECTS.ARRAY]).length :\n        0);\n\nexport const findObject = (type, id) => {\n    const { objects } = inventorySelector(getStore().getState());\n    if (!objects || !objects.index) {\n        return undefined;\n    }\n\n    const { index } = objects;\n    const object = index && index[type] && index[type][id];\n    return object || undefined;\n};\n\nexport const getObjectTopology = (type, id) => {\n    const { objects } = inventorySelector(getStore().getState());\n    if (!objects || !objects.topology) {\n        return undefined;\n    }\n\n    const { topology } = objects;\n    const relations = topology && topology[type] && topology[type][id];\n    return relations || undefined;\n};\n\nexport const inventoryLoadedSelector = (state) => {\n    const it = inventorySelector(state);\n    return it && it.loadedObjects;\n};\n","const _ = require('underscore');\nvar $ = require('jquery');\nvar jQueryUI = require('jqueryui');\nvar Backbone = require('backbone');\nvar Marionette = require('backbone.marionette');\nrequire('datatables.net');\nrequire('progeny/components/GridView/DataTablesRenderer');\nvar BaseGridModel = require('app/models/grid/BaseGridModel');\nvar LocalGridModel = require('app/models/grid/LocalGridModel');\nvar CollectionGridModel = require('app/models/grid/CollectionGridModel');\nvar BulkLoadGridModel = require('app/models/grid/BulkLoadGridModel');\nvar RemoteGridModel = require('app/models/grid/RemoteGridModel');\nvar GridFilterView = require('./GridFilterView');\nvar GridSortCollection = require('./GridSortCollection');\nvar tpl = require('raw-loader!./GridView.html');\n\nvar RowSelectionMode = Object.freeze({\n    NONE: 'none',\n    SINGLE: 'single',\n    MULTI: 'multi',\n});\n\n// TODO move this.  currently doesn't play well outside of this file.\n$.fn.dataTableExt.oApi.fnSetFilteringDelay = function (oSettings, iDelay) {\n    var _that = this;\n\n    if (iDelay === undefined) {\n        iDelay = 250;\n    }\n\n    this.each(function (i) {\n        $.fn.dataTableExt.iApiIndex = i;\n        var\n            $this = this,\n            oTimerId = null,\n            sPreviousSearch = null,\n            anControl = $('input', _that.fnSettings().aanFeatures.f);\n\n        anControl.unbind('keyup search input').bind('keyup', function () {\n            var $$this = $this;\n\n            if (sPreviousSearch === null || sPreviousSearch != anControl.val()) {\n                window.clearTimeout(oTimerId);\n                sPreviousSearch = anControl.val();\n                oTimerId = window.setTimeout(function () {\n                    $.fn.dataTableExt.iApiIndex = i;\n                    _that.fnFilter(anControl.val());\n                }, iDelay);\n            }\n        });\n\n        return this;\n    });\n    return this;\n};\n\n/**\n * A sort pre-formatter for NimbleOS version strings of the form \"1.2.2.0-17686-opt\".\n *\n * Translates the raw version String into a String that, when lexically compared,\n * results in proper sort ordering.\n * Implementation pads each numerical component in the version string to 4 digits.\n * See http://datatables.net/plug-ins/sorting\n */\n$.fn.dataTable.ext.type.order['nimbleos-version-pre'] = function (version) {\n    var pad = '0000';\n    var parts = version.split(/\\.|\\-/);\n    return parts.slice(0, 4).map(function (part) {\n        return part.length >= pad.length ? part : (pad + part).slice(-pad.length);\n    }).join('.');\n};\n\n$.fn.dataTable.ext.search.push(function (settings, searchData, index, row, counter) {\n    var api = new $.fn.dataTable.Api(settings);\n    var view = api.init().view;\n    if (!view) {\n        // Some code uses DataTables directly and not via GridView\n        return true;\n    }\n\n    return view.getOption('_isRowIncluded').call(view, index, row, searchData);\n});\n\nmodule.exports = Marionette.LayoutView.extend(\n    /** @lends views/components/grid/GridView.prototype */ {\n\n        /**\n         * @classdesc <span style=\"color: red;\">Developer description to be added.</span>\n         * @name views/components/grid/GridView\n         * @constructor\n         * @augments Backbone.View\n         */\n\n        template: _.template(tpl),\n\n        className: 'grid-view',\n\n        regions: {\n            filterRegion: '.filter-region',\n        },\n\n        ui: {\n            selectAllCheckbox: 'th.row-selection-checkbox input',\n        },\n\n        events: {\n            'init.dt': 'onDataTableInit',\n            'draw.dt': 'onDraw',\n            'xhr.dt': 'onAjaxComplete',\n            'click tr:not(.child-row)': 'onRowClick',\n            'click @ui.selectAllCheckbox': 'onSelectAllClick',\n            'click td.details-control': 'toggleChildRow',\n        },\n\n        url: null,\n        columns: null,\n        chooseColumns: false,\n        childTemplate: null,\n        dataTableOptions: null,\n        rowSelectionMode: RowSelectionMode.NONE,\n        toolbar: null,\n        initialized: false,\n        highlightRowOnChange: true,\n\n        /**\n         * Overridden Backbone initialize method.\n         * @param  {Object} options Parameterized initialization object.\n         */\n        initialize: function (options) {\n\n            _.bindAll(this, 'selectRow', 'updateSelectionForRowVisibilityChange', 'refreshData', 'getDataTableApi');\n            //this.refreshData = _.debounce(this.refreshData, 300, true);\n\n            if (!this.model) {\n                // throw new Error('\"model\" must be provided to the GridView component.');\n            } else if (!(this.model instanceof BaseGridModel)) {\n                throw new Error('\"model\" must extend from the BaseGridModel class.');\n            } else if (!this.model.isValid()) {\n                // throw new Error('Model is not valid: ' + this.model.validationError );\n            }\n\n            // ensure a template is provided\n            if (!this.options.tableTemplate) {\n                throw new Error('\"tableTemplate\" must be provided to the GridView component.  ' +\n                    'It is expected to define the table structure for the grid.');\n            }\n\n            if (options.childTemplate) {\n                this.ChildView = Marionette.ItemView.extend({\n                    template: options.childTemplate,\n                });\n            } else {\n                this.ChildView = options.ChildView;\n            }\n            this.dataTableOptions = options.dataTableOptions;\n            if (options.rowSelectionMode) {\n                this.rowSelectionMode = options.rowSelectionMode;\n            }\n            if (options.toolbar) {\n                this.toolbar = options.toolbar;\n            }\n\n            /**\n             * sort can be specified in 3 ways:\n             * 1. A GridSortCollection object.  Useful if parent view needs to manipulate the Sort programmatically.\n             * 2. An array of column names:\n             *      [ 'Array SN', 'Volume Name ']\n             * 3. An array of GridSortModel attributes:\n             *      [ { column: 'Array SN', order: 'asc' }, { column: 'Volume Size', order: 'desc' } ]\n             */\n\n            if (options.sort instanceof GridSortCollection) {\n                this.sort = options.sort;\n            } else {\n                options.sort = options.sort || [];\n                if (options.sort.length && _.isString(options.sort[0])) {\n                    this.sort = new GridSortCollection(options.sort.map(function (columnName) {\n                        return { column: columnName };\n                    }));\n                } else {\n                    this.sort = new GridSortCollection(options.sort);\n                }\n            }\n            this.listenTo(this.sort, 'update', this.applyOrdering);\n            this.listenTo(this.sort, 'reset', this.applyOrdering);\n\n            if (this.model.get('showFilters')) {\n                this.filterView = new GridFilterView({\n                    grid: this,\n                });\n            }\n\n        },\n\n        onRender: function () {\n            var self = this;\n\n            if (this.options.tableTemplate instanceof $) {\n                console.warn('Use of existing DOM element as GridView template is deprecated - a template function (or HTML string) should be used instead');\n                this.$table = this.options.tableTemplate;\n            } else {\n                this.$table = $(_.result(this.options, 'tableTemplate'));\n            }\n\n            // datatables doesn't do much validation of the columns, so we'll do some additional\n            // checks up front before attempting to create the table.\n            if (this.$table.find('THEAD').length === 0) {\n                throw new Error('GridView[' + this.id + '] GridView template must specify a THEAD section.');\n            }\n\n            // TODO? Use a region for the table element instead of directly appending to the $el\n            this.$el.append(this.$table);\n\n            if (this.model.get('showFilters')) {\n                this.filterRegion.show(this.filterView);\n            }\n\n            var isRemote = this.model instanceof RemoteGridModel;\n            var columns = this.model.get('columns');\n            var pageLength = this.model.get('pageLength');\n            var emptyLabel = this.model.get('emptyLabel');\n            var groupBy = this.model.get('groupBy');\n\n            // Synthetic column headers always span the entire header row\n            var syntheticHeaderRowspan = this.$table.find('thead tr').length;\n\n            if (this.ChildView) {\n                this.$table.find('th:first').before($('<th/>').attr('rowspan', syntheticHeaderRowspan));\n                columns = $.merge([\n                    {\n                        data: null, 'class': 'details-control', orderable: false, defaultContent:\n                            '<span class=\"fa fa-caret-right\"/>',\n                    },\n                ], columns);\n            }\n\n            if (this.rowSelectionMode == RowSelectionMode.MULTI) {\n                this.$table.find('th:first').before($('<th><input type=\"checkbox\"/></th>').attr('rowspan', syntheticHeaderRowspan));\n                columns = $.merge([\n                    {\n                        data: null, 'class': 'row-selection-checkbox', orderable: false, defaultContent:\n                            '<input type=\"checkbox\"/>',\n                    },\n                ], columns);\n            }\n\n            this.model.set('columns', columns);\n\n            this.applyColumnNames();\n            this.applyColumnIndices();\n\n            // if ( columns.length != $table.find('THEAD TH').length ) {\n            //     throw new Error('GridView[' + this.id + '] Mismatch between the number of columns specified in the ' +\n            //         '\"columns\" parameter (' + columns.length + ') and the table headers ' +\n            //         'in the template (' + $table.find('THEAD TH').length + ').');\n            // }\n\n            var dataTableConfig = {\n                processing: isRemote,\n                serverSide: isRemote,\n                language: {\n                    emptyTable: emptyLabel,\n                },\n                pageLength: pageLength,\n\n                order: this.sortToDatatablesOrder(),\n                columns: columns,\n\n                dom: '<\"top\"C<\"toolbar\">f<\"clear\">lp<\"clear\"><\"custom-filter\">>' +\n                    'rt' +\n                    '<\"bottom\"p<\"clear\">>',\n\n                lengthMenu: [\n                    [10, 25, 50, 100],\n                    [10, 25, 50, 100],\n                ],\n                drawCallback: function (settings) {\n                    var api = this.api();\n                    var groupByColumn = groupBy(api);\n                    if (groupByColumn !== null) {\n                        self.insertGroupingRows(api, groupByColumn);\n                    }\n                },\n                createdRow: this.createdRow.bind(this),\n                view: this,\n            };\n\n            var errorHandler = function (xhr, textStatus, textThrown) {\n                console.log('GridView data load error - ' + textStatus + ': ' + textThrown);\n                self.trigger('error', xhr, textStatus, textThrown);\n                self.$table.dataTable().api().destroy();\n                self.$table.dataTable({\n                    \"info\": false,\n                    \"language\": {\n                        \"emptyTable\": \"Error while fetching data\"\n                    }\n                });\n            };\n            if (this.model instanceof LocalGridModel) {\n                dataTableConfig.data = this.model.get('data');\n            } else if (this.model instanceof CollectionGridModel) {\n                var collection = this.model.get('collection');\n                dataTableConfig.data = collection.toJSON();\n                this.listenTo(collection, 'add', this.refreshModelData);\n                this.listenTo(collection, 'remove', this.refreshModelData);\n                this.listenTo(collection, 'change', this.refreshModelData);\n                this.listenTo(collection, 'reset', this.refreshCollectionData);\n            } else if (this.model instanceof BulkLoadGridModel) {\n                var loadedData = this.model.get('data');\n                dataTableConfig.ajax = {\n                    url: self.model.url(),\n                    dataSrc: self.model.get('dataSrc'),\n                    error: errorHandler,\n                };\n            } else {\n                dataTableConfig.ajax = this.cachePipeline({\n                    url: this.model.get('url'),\n                    pages: this.model.get('pages'),\n                    error: errorHandler,//,\n                    // headers: {\n                    //     Accept: 'application/datatables+json'\n                    // }\n                });\n            }\n\n            $.extend(dataTableConfig, this.dataTableOptions);\n\n            this.$table.dataTable(dataTableConfig);\n\n            // this.$table.fnSetFilteringDelay(750);\n\n            return this;\n        },\n\n        onDataTableInit: function () {\n            var api = this.$table.DataTable();\n            var self = this;\n\n            // Show pagination if there is more than one page (> pageLength entries).\n            if (this.model instanceof CollectionGridModel) {\n                var collection = this.model.get('collection'),\n                    $paginationElements = this.$('.dataTables_paginate');\n\n                var togglePaginationControls = function () {\n                    var pageLength = self.model.get('pageLength');\n                    if (pageLength) {\n                        $paginationElements.toggle(collection.length > pageLength);\n                    } else {\n                        // If pageLength is undefined, use DataTables' default page length,\n                        // 10 entries per page.\n                        $paginationElements.toggle(collection.length > 10);\n                    }\n                };\n\n                togglePaginationControls();\n                this.listenTo(collection, 'sync', togglePaginationControls);\n                this.listenTo(collection, 'add', togglePaginationControls);\n                this.listenTo(collection, 'remove', togglePaginationControls);\n                this.listenTo(collection, 'reset', togglePaginationControls);\n            }\n\n            if (this.toolbar) {\n                this.$('.toolbar').html(this.toolbar);\n            }\n\n            // add tooltips to the headers\n            // Do not override the title if the header has already set it.\n            this.$table.find('TH:not(.row-selection-checkbox):not([title])').each(function (index, value) {\n                $(this).attr('title', 'Click to sort.  Shift click to sort by multiple columns.');\n            });\n\n            this.initialized = true;\n\n            // notify listeners grid is loaded\n            this.trigger('init', this);\n        },\n\n        applyColumnNames: function () {\n            var $table = this.$table;\n            this.model.get('columns').forEach(function (column, index) {\n                if (!column.name) {\n                    var $header = $table.find('thead > tr:first > th:nth-of-type(' + (index + 1) + ')');\n                    column.name = $header.text();\n                }\n            });\n        },\n\n        applyColumnIndices: function () {\n            this.model.get('columns').forEach(function (column, index) {\n                column.index = index;\n            });\n        },\n\n        /**\n         * Ensure clean up of DataTables objects and references when\n         * 'destroy' is called on region containing this view.\n         */\n        onDestroy: function () {\n            // Check that this.$table is non-null to prevent case where\n            // API user attempts to destroy not-yet-rendered GridView.\n            if (this.$table) {\n                this.$table.api().destroy();\n            }\n        },\n\n        /**\n         * Creates the filter widget.\n         * @param  {DataTableAPI} api   DataTables API instance.\n         * @param  {Array} columns      Columns\n         * @private\n         */\n\n        /**\n         * Returns the internal DataTable instance.\n         * @return {DataTable} Returns the DataTable instance.\n         * @public\n         */\n        getDataTable: function () {\n            return this.$table;\n        },\n\n        /**\n         * Returns the DataTable API\n         * @return {DataTableAPI} Returns a DataTable API instance\n         */\n        getDataTableApi: function () {\n            return this.$table.api();\n        },\n\n        onDraw: function () {\n            this.bindUIElements();\n            if (this.rowSelectionMode != RowSelectionMode.NONE) {\n                this.updateSelectionForRowVisibilityChange();\n            }\n        },\n\n        onRowClick: function (event) {\n            this.selectRow($(event.currentTarget));\n        },\n\n        selectRow: function ($row) {\n            if ($row.find('td').hasClass('dataTables_empty')) {\n                return;\n            }\n            if ($row.parents('tr.child-row').length) {\n                // TRs nested within child rows are not selectable\n                return;\n            }\n            if ($row.hasClass('unselectable')) {\n                return;\n            }\n            if (this.rowSelectionMode == RowSelectionMode.NONE) {\n                return;\n            }\n\n            if ($row.hasClass('selected')) {\n                $row.removeClass('selected');\n            } else {\n                if (this.rowSelectionMode == RowSelectionMode.SINGLE) {\n                    this.$table.find('TR.selected').removeClass('selected');\n                }\n                $row.addClass('selected');\n            }\n\n            this.$table.find('TR.selected TD.row-selection-checkbox INPUT').prop('checked', true);\n            this.$table.find('TR:not(.selected) TD.row-selection-checkbox INPUT').prop('checked', false);\n\n            this.updateSelectAllCheckbox();\n\n            this.trigger('row-selection:changed', this.$table.find('TR.selected'));\n        },\n\n        onSelectAllClick: function (event) {\n            var $input = $(event.currentTarget);\n            var $rows = this.getDataTableApi().$('TR', { page: 'current' });\n            if ($input.is(':checked')) {\n                $rows.addClass('selected');\n                $rows.find('TD.row-selection-checkbox INPUT').prop('checked', true);\n            } else {\n                $rows.removeClass('selected');\n                $rows.find('TD.row-selection-checkbox INPUT').prop('checked', false);\n            }\n\n            this.trigger('row-selection:changed', this.$table.find('TR.selected'));\n        },\n\n        updateSelectAllCheckbox: function () {\n            if (this.rowSelectionMode != RowSelectionMode.MULTI) {\n                return;\n            }\n\n            var $rows = this.getDataTableApi().$('TR', { page: 'current' });\n\n            if ($rows.filter('.selected').length === 0) {\n                this.ui.selectAllCheckbox.prop('checked', false);\n                this.ui.selectAllCheckbox.prop('indeterminate', false);\n            } else if ($rows.filter(':not(.selected)').length === 0) {\n                this.ui.selectAllCheckbox.prop('checked', true);\n                this.ui.selectAllCheckbox.prop('indeterminate', false);\n            } else {\n                this.ui.selectAllCheckbox.prop('indeterminate', true);\n            }\n        },\n\n        /**\n         * Update the selection state when the set of visible rows is changed via:\n         * <ul>\n         * <li>Search\n         * <li>Filter\n         * <li>Page change\n         * <li>Page length change\n         * </ul>\n         */\n        updateSelectionForRowVisibilityChange: function () {\n            var $allRows = this.getDataTableApi().$('TR');\n            var $visibleRows = this.getDataTableApi().$('TR', { page: 'current' });\n            var $invisibleRows = $allRows.filter(function () {\n                return !$(this).filter($visibleRows).length;\n            });\n\n            // Unselect everything no longer visible\n            $invisibleRows.removeClass('selected');\n            $invisibleRows.find('TD.row-selection-checkbox INPUT').prop('checked', false);\n\n            this.updateSelectAllCheckbox();\n\n            this.trigger('row-selection:changed', this.$table.find('TR.selected'));\n        },\n\n        /**\n         * Returns the data for the selected row.\n         * @return {Object} Returns the data used for the selected row.\n         */\n        getSelectedRowData: function () {\n            console.assert(this.rowSelectionMode == RowSelectionMode.SINGLE);\n            return this.getDataTableApi().row('.selected').data();\n        },\n\n        /**\n         * Returns the data for the selected rows.\n         * @return {Array} Returns an array of data objects for the selected rows.\n         */\n        getSelectedRowsData: function () {\n            console.assert(this.rowSelectionMode == RowSelectionMode.MULTI);\n            return this.getDataTableApi().rows('.selected').data();\n        },\n\n        /**\n         * Execute the provided function for each row in the datatable\n         */\n        eachRow: function (func) {\n            var api = this.getDataTableApi();\n            api.rows().eq(0).each(function (index) {\n                func(api.row(index));\n            });\n        },\n\n        refreshCollectionData: function () {\n            this.refreshData();\n        },\n\n        refreshModelData: function (model) {\n            if (this.getOption('highlightRowOnChange')) {\n                this.highlightRowsOnNextDraw(function (rowData) {\n                    return model.id === rowData.id;\n                });\n            }\n            this.refreshData();\n        },\n\n        refreshData: function () {\n            if (this.model instanceof LocalGridModel) {\n                // No-op (?)\n            } else if (this.model instanceof CollectionGridModel) {\n                this.getDataTableApi()\n                    .clear()\n                    .rows\n                    .add(this.model.get('collection').toJSON())\n                    .draw();\n                this.trigger('reload', this);\n            } else {\n                this.getDataTableApi().ajax.reload();\n            }\n        },\n\n        onAjaxComplete: function () {\n            if (!this.initialized) {\n                return;\n            }\n\n            // Defer the reload event until datatables has actually updated the table from the AJAX response\n            var self = this;\n            _.defer(function () {\n                self.trigger('reload', self);\n            });\n        },\n\n        highlightRowsOnNextDraw: function (predicate) {\n            var self = this;\n            this.getDataTableApi().one('draw', function () {\n                self.eachRow(function (row) {\n                    if (predicate(row.data())) {\n                        $(row.node()).find('> td').effect('highlight', { color: '#78c639' }, 3000);\n                    }\n                });\n            });\n        },\n\n        /**\n         * Helper for building the cache pipeline.\n         * @param  {Object} opts Parameterized object.\n         * @private\n         */\n        cachePipeline: function (opts) {\n            // Configuration options\n            var conf = $.extend({\n                pages: 5,     // number of pages to cache\n                url: '',      // script url\n                data: null,   // function or object with parameters to send to the server\n                              // matching how `ajax.data` works in DataTables\n                method: 'GET', // Ajax HTTP method\n            }, opts);\n\n            // Private variables for storing the cache\n            var cacheLower = -1;\n            var cacheUpper = null;\n            var cacheLastRequest = null;\n            var cacheLastJson = null;\n\n            return function (request, drawCallback, settings) {\n                var ajax = false;\n                var requestStart = request.start;\n                var requestLength = request.length;\n                var requestEnd = requestStart + requestLength;\n\n                if (settings.clearCache) {\n                    // API requested that the cache be cleared\n                    ajax = true;\n                    settings.clearCache = false;\n                } else if (cacheLower < 0 || requestStart < cacheLower || requestEnd > cacheUpper) {\n                    // outside cached data - need to make a request\n                    ajax = true;\n                } else if (JSON.stringify(request.order) !== JSON.stringify(cacheLastRequest.order) ||\n                    JSON.stringify(request.columns) !== JSON.stringify(cacheLastRequest.columns) ||\n                    JSON.stringify(request.search) !== JSON.stringify(cacheLastRequest.search)\n                ) {\n                    // properties changed (ordering, columns, searching)\n                    ajax = true;\n                }\n\n                // Store the request for checking next time around\n                cacheLastRequest = $.extend(true, {}, request);\n\n                if (ajax) {\n                    // Need data from the server\n                    if (requestStart < cacheLower) {\n                        requestStart = requestStart - (requestLength * (conf.pages - 1));\n\n                        if (requestStart < 0) {\n                            requestStart = 0;\n                        }\n                    }\n\n                    cacheLower = requestStart;\n                    cacheUpper = requestStart + (requestLength * conf.pages);\n\n                    request.start = requestStart;\n                    request.length = requestLength * conf.pages;\n\n                    // Provide the same `data` options as DataTables.\n                    if ($.isFunction(conf.data)) {\n                        // As a function it is executed with the data object as an arg\n                        // for manipulation. If an object is returned, it is used as the\n                        // data object to submit\n                        var d = conf.data(request);\n                        if (d) {\n                            $.extend(request, d);\n                        }\n                    } else if ($.isPlainObject(conf.data)) {\n                        // As an object, the data given extends the default\n                        $.extend(request, conf.data);\n                    }\n\n                    settings.jqXHR = $.ajax({\n                        'type': conf.method,\n                        'url': conf.url,\n                        'data': request,\n                        'dataType': 'json',\n                        'cache': false,\n                        'success': function (json) {\n                            cacheLastJson = $.extend(true, {}, json);\n\n                            if (cacheLower != requestStart) {\n                                json.data.splice(0, requestStart - cacheLower);\n                            }\n                            json.data.splice(requestLength, json.data.length);\n\n                            drawCallback(json);\n                        },\n                    });\n                } else {\n                    var json = $.extend(true, {}, cacheLastJson);\n                    json.draw = request.draw; // Update the echo for each response\n                    json.data.splice(0, requestStart - cacheLower);\n                    json.data.splice(requestLength, json.data.length);\n\n                    drawCallback(json);\n                }\n            };\n        },\n\n        /**\n         * Synthesize row grouping by inserting a row with the group name that spans the table.\n         * See https://datatables.net/examples/advanced_init/row_grouping.html for an overview of the approach.\n         *\n         * Note: this starts to look bad if the table is not sorted by the grouping column\n         * (or a column correlated to the grouping column).  See comment above about allowing\n         * specification of which sort column(s) enable the grouping.\n         */\n        insertGroupingRows: function (api, groupByColumn) {\n            var columns = this.model.get('columns');\n            var rows = api.rows({ page: 'current' }).nodes();\n            var last = null;\n\n            api.column(groupByColumn, { page: 'current' }).cache('order').each(function (group, i) {\n                if (last !== group) {\n                    $(rows).eq(i).before(\n                        `<tr class=\"rowgroup-header\"><td colspan=\"${columns.length}\">${group}</td></tr>`,\n                    );\n\n                    last = group;\n                }\n            });\n        },\n\n        toggleChildRow: function (event) {\n            console.assert(this.ChildView, 'Child view expected to be defined');\n\n            var api = this.getDataTableApi(),\n                tr = $(event.currentTarget).closest('tr'),\n                row = api.row(tr),\n                clickedRow = $(row.node()),\n                childRow = null,\n                rowData = row.data(),\n                childView,\n                childModel,\n                childCollection;\n\n            event.stopPropagation();\n\n            tr.find('SPAN').toggleClass('fa-caret-right fa-caret-down');\n\n            if (row.child.isShown()) {\n                childView = row.child().data('view');\n                childView.destroy();\n                // This row is already open - close it\n                row.child.remove();\n                childRow = clickedRow.next();\n                this.trigger('child-row:hide', clickedRow, rowData);\n            } else {\n                // Open this row\n                if (this.model instanceof CollectionGridModel) {\n                    childCollection = this.model.get('collection');\n                    var idAttr = childCollection.model.prototype.idAttribute || 'id';\n                    childModel = childCollection.get(rowData[idAttr]);\n                } else {\n                    childModel = new Backbone.Model(rowData);\n                }\n                childView = new this.ChildView({\n                    model: childModel,\n                    collection: childCollection,\n                    rowData: rowData,\n                });\n                row.child(childView.render().el).show();\n                row.child().data('view', childView);\n\n                childRow = clickedRow.next();\n                childRow\n                    .addClass('child-row')\n                    .css('background-color', 'white');\n                // tr.addClass('shown');\n                this.trigger('child-row:show', childRow, rowData);\n            }\n        },\n\n        /**\n         * True by default, can be overridden by passing in a 'rowFilter' function to the view\n         */\n        isRowIncluded: function () {\n            return true;\n        },\n\n        /**\n         * Called by our custom $.fn.dataTable.ext.search function\n         * Return true/false if a row should be included in the table.\n         * This is called on every draw()/redraw() of the DataTable\n         * A row is included if either:\n         *   The custom isRowIncluded function passed into GridView returns true\n         * OR\n         *   The filter state (select dropdowns) represented by GridFilterView matches the row\n         */\n        _isRowIncluded: function (rowIndex, rowObject, rowSearchData) {\n            return this.getOption('isRowIncluded')(rowIndex, rowObject, rowSearchData)\n                && (this.filterView ? this.filterView.isRowIncluded(rowIndex, rowObject, rowSearchData) : true);\n        },\n\n        redraw: function () {\n            this.getDataTableApi().draw();\n        },\n\n        rawRows: function () {\n            return this.getDataTableApi().rows({ 'search': 'applied' });\n        },\n\n        sortToDatatablesOrder: function () {\n            var columns = this.model.get('columns');\n\n            return this.sort.map(function (sort) {\n                return [\n                    _.findIndex(columns, function (column) {\n                        return column.name == sort.get('column');\n                    }),\n                    sort.get('order'),\n                ];\n            });\n        },\n\n        applyOrdering: function () {\n            this.getDataTableApi()\n                .order(this.sortToDatatablesOrder())\n                .draw();\n        },\n\n        createdRow: function (row, data, dataIndex) {\n            if (data.id) {\n                $(row).attr('data-model-id', data.id);\n            }\n        },\n    },\n    {\n        RowSelectionMode: RowSelectionMode,\n    });\n","\n// api actions\n\nexport const FETCH_CASE_HEADERS_OK = 'FETCH_CASE_HEADERS_OK';\nexport const FETCH_CASE_HEADERS_FAIL = 'FETCH_CASE_HEADERS_FAIL';\n\nexport const FETCH_CASE_DETAIL_OK = 'FETCH_CASE_DETAIL_OK';\nexport const FETCH_CASE_DETAIL_FAIL = 'FETCH_CASE_DETAIL_FAIL';\n\nexport const FETCH_CASE_COMMENTS_OK = 'FETCH_CASE_COMMENTS_OK';\nexport const FETCH_CASE_COMMENTS_FAIL = 'FETCH_CASE_COMMENTS_FAIL';\n\nexport const FETCH_CASE_ATTACHMENTS_OK = 'FETCH_CASE_ATTACHMENTS_OK';\nexport const FETCH_CASE_ATTACHMENTS_FAIL = 'FETCH_CASE_ATTACHMENTS_FAIL';\n\nexport const FETCH_CASE_RMALABELS_OK = 'FETCH_CASE_RMALABELS_OK';\nexport const FETCH_CASE_RMALABELS_FAIL = 'FETCH_CASE_RMALABELS_FAIL';\n\nexport const POST_CASE_OK = 'POST_CASE_OK';\nexport const POST_CASE_FAIL = 'POST_CASE_FAIL';\n\nexport const POST_CASE_COMMENT_OK = 'POST_CASE_COMMENT_OK';\nexport const POST_CASE_COMMENT_FAIL = 'POST_CASE_COMMENT_FAIL';\n\nexport const POST_CASE_ATTACHMENT_OK = 'POST_CASE_ATTACHMENT_OK';\nexport const POST_CASE_ATTACHMENT_FAIL = 'POST_CASE_ATTACHMENT_FAIL';\n\nexport const POST_CASE_RESOLUTION_OK = 'POST_CASE_RESOLUTION_OK';\nexport const POST_CASE_RESOLUTION_FAIL = 'POST_CASE_RESOLUTION_FAIL';\n\n\n// interaction actions\n\nexport const BROWSE_LIST_MODE_UPDATE = 'BROWSE_LIST_MODE_UPDATE'; // TODO: que es eso?\nexport const FILTER_CASE_STATUS = 'FILTER_CASE_STATUS';\nexport const FILTER_CASE_PRIORITY = 'FILTER_CASE_PRIORITY';\nexport const FILTER_CASE_PARAMS = 'FILTER_CASE_PARAMS';\n\n// KCS stuff\n\nexport const FETCH_SUGGESTED_TERMS_OK = 'FETCH_SUGGESTED_TERMS_OK';\nexport const FETCH_SUGGESTED_TERMS_FAIL = 'FETCH_SUGGESTED_TERMS_FAIL';\n\nexport const SEARCH_KCS_SOLUTIONS_OK = 'SEARCH_KCS_SOLUTIONS_OK';\nexport const SEARCH_KCS_SOLUTIONS_FAIL = 'SEARCH_KCS_SOLUTIONS_FAIL';\n\nexport const FETCH_KCS_SOLUTION_OK = 'FETCH_KCS_SOLUTION_OK';\nexport const FETCH_KCS_SOLUTION_FAIL = 'FETCH_KCS_SOLUTION_FAIL';\n\nexport const FETCH_KCS_RELATED_SOLUTIONS_OK = 'FETCH_KCS_RELATED_SOLUTIONS_OK';\nexport const FETCH_KCS_RELATED_SOLUTIONS_FAIL = 'FETCH_KCS_RELATED_SOLUTIONS_FAIL';\n\nexport const FETCH_KCS_SUPPORTED_METHODS_OK = 'FETCH_KCS_SUPPORTED_METHODS_OK';\nexport const FETCH_KCS_SUPPORTED_METHODS_FAIL = 'FETCH_KCS_SUPPORTED_METHODS_FAIL';\n\n// Core stuff\nexport const FETCH_SFDC_CONTACT = 'FETCH_SFDC_CONTACT';\n","module.exports = __webpack_public_path__ + \"nmbl-sharepoint-app-category-5657936c8d227414d7c5306fce263562.png\";","module.exports = __webpack_public_path__ + \"nmbl-virtual-server-app-category-e1b953caa9855bba9773db754d74b2a9.png\";","module.exports = __webpack_public_path__ + \"nmbl-virtual-desktop-app-category-06e451821e1e04e12ad08eb016c2753c.png\";","module.exports = __webpack_public_path__ + \"nmbl-file-server-app-category-5507ee917e0b9f09905a093001cb3371.png\";","module.exports = __webpack_public_path__ + \"nmbl-other-app-category-5bd1ff203b39c69d10fbf47d518e0754.png\";","module.exports = __webpack_public_path__ + \"nmbl-unassigned-app-category-1fc7e5e6d45254d7c4f8155fae54d22d.png\";","module.exports = __webpack_public_path__ + \"nmbl-remote-replica-4c21bd9575b5beaf0960867ad3c2f3f8.png\";","module.exports = __webpack_public_path__ + \"nmbl-local-replication-c5b17fabb276c92cd8749bae1438a782.png\";","module.exports = __webpack_public_path__ + \"images/nmbl-dashboard-heartbeat-down.png\";","module.exports = __webpack_public_path__ + \"images/nmbl-dashboard-heartbeat-up.png\";","module.exports = __webpack_public_path__ + \"images/nmbl-dashboard-asup-down.png\";","module.exports = __webpack_public_path__ + \"images/nmbl-dashboard-asup-up.png\";"],"sourceRoot":""}