{"version":3,"sources":["webpack:///./progeny/modules/bootstrapper/legacy_bootstrap_components.js","webpack:///../node_modules/redux-thunk/es/index.js","webpack:///../node_modules/redux-form/es/deleteInWithCleanUp.js","webpack:///../node_modules/redux-form/es/createReducer.js","webpack:///../node_modules/redux-form/es/reducer.js","webpack:///./progeny/modules/capacityReport/reducer/poolContext/index.js","webpack:///./progeny/modules/capacityReport/reducer/folderContext/index.js","webpack:///./progeny/modules/capacityReport/reducer/index.js","webpack:///./progeny/modules/capacityReport/index.js","webpack:///./progeny/modules/support/reducer/support-kcs.js","webpack:///./progeny/modules/support/reducer/support-filtering.js","webpack:///./progeny/modules/support/reducer/index.js","webpack:///./progeny/modules/arrays/constants.js","webpack:///./progeny/modules/arrays/reducer/arraysReducer.js","webpack:///./progeny/modules/arrays/reducer/index.js","webpack:///./progeny/modules/bulletins/reducer.js","webpack:///./progeny/modules/bulletins/components/BulletinController.js","webpack:///./progeny/modules/bulletins/components/Bulletins.js","webpack:///./progeny/modules/nimble/folders/collection/constants.js","webpack:///./progeny/modules/nimble/folders/collection/reducer.js","webpack:///./progeny/modules/nimble/settings/reducer.js","webpack:///./progeny/modules/nimble/reducer.js","webpack:///./progeny/store/reducers.js","webpack:///./progeny/store/middleware/legacyEventEmitter.js","webpack:///./progeny/store/createStore.js","webpack:///./progeny/modules/bootstrapper/initialize.js"],"names":["bs_button","window","nimbleShims","jQuery_1_11_1","$","fn","button","noConflict","bs_tooltip","tooltip","createThunkMiddleware","extraArgument","_ref","dispatch","getState","next","action","thunk","withExtraArgument","redux_thunk_es","es_deleteInWithCleanUp","structure","shouldDeleteDefault","state","path","undefined","getIn","deepEqual","empty","deleteIn","setIn","shouldDelete","arguments","length","deleteInWithCleanUp","pathTokens","Object","toPath","pop","join","result","dotIndex","lastIndexOf","parentPath","substring","_parent","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","createReducer_shouldDelete","initialValuesPath","startsWith","replace","initialValueComparison","createReducer_isReduxFormAction","type","actionTypes","es_reducer","_behaviors","forEach","fromJS","size","some","splice","plainDeleteInWithCleanUp","plain","doSplice","field","index","removeNum","force","existing","doPlainSplice","slice","rootKeys","arraySplice","nonValuesValue","behaviors","_ref2","_ref2$meta","meta","payload","_ref3","_ref3$meta","from","to","array","_ref4","_ref5","_ref6","_ref6$meta","_ref7","_ref8","_ref9","_ref9$meta","_ref10","_ref10$meta","indexA","indexB","valueA","valueB","_ref11","_ref12","_ref13","_ref13$meta","touch","_ref14","_ref14$meta","persistentSubmitErrors","_ref15","_ref16","_ref16$meta","keepTouched","fields","anyTouched","_ref17","previouslyActive","_ref18","_ref18$meta","keepDirty","keepSubmitSucceeded","updateUnregisteredFields","keepValues","mapData","warning","syncWarnings","error","syncErrors","registeredFields","previousValues","previousInitialValues","newInitialValues","newValues","overwritePristineValue","name","previousInitialValue","previousValue","newInitialValue","_ref19","_ref19$payload","count","values","_ref20","sections","section","_ref21","_ref22","_error","fieldErrors","_ref23","_ref24","_ref25","_ref26","_ref26$payload","destroyOnUnmount","_ref27","_ref28","_ref28$payload","_ref29","_ref29$payload","decorate","plugin","reducers","_this","this","callPlugin","processed","previousState","nextState","form","reduce","reducer","formState","byForm","behavior","initialState","timeSeries","loadingTimeSeries","applications","loadingApplications","folders","loadingFolders","summary","loadingSummary","arrayCapacity","loadingArrayCapacity","pools","loadingPools","topPoolsTimeSeries","loadingTopPoolsTimeSeries","volumes","loadingVolumes","ACTION_HANDLERS","USER_CONTEXT_CHANGED","poolContext_defineProperty","_extends2","POOL_CAPACITY_RESET","createReducersForAction","POOL_CAPACITY_SUMMARY_FETCH","stateKey","POOL_CAPACITY_APPLICATIONS_FETCH","POOL_CAPACITY_FOLDERS_FETCH","POOL_CAPACITY_TIME_SERIES_FETCH","POOL_CAPACITY_ARRAY_CAPACITY_FETCH","TOP_POOLS_CAPACITY_TIME_SERIES_FETCH","folderContext_defineProperty","folderContext_extends2","FOLDER_CAPACITY_RESET","FOLDER_CAPACITY_SUMMARY_FETCH","FOLDER_CAPACITY_APPLICATIONS_FETCH","FOLDER_CAPACITY_TIME_SERIES_FETCH","poolContext","folderContext","objectRelationships","capacityReport_reducer","reduced","handler","modified","CapacityReport","caseStatus","justMine","priority","startDate","endDate","textQuery","hideAutoCases","combineReducers","filtering","types","assign","filterParams","cases","kcs","core","assets","isloading","arraysReducer_extends","arraysReducer","getInitialState","RESET","FETCH_BULLETINS","bulletinsSelector","createSelector","bulletins","shownOnce","BulletinController","props","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","open","Component","location","pathname","match","fetchActiveBulletins","getStore","setState","console","_context","t0","_this2","external_React_default","a","createElement","BulletinsModal","closeModal","propTypes","PropTypes","arrayOf","shape","id","number","isRequired","contents","string","connect","cx","classnames","bind","style","Bulletins","Bulletins_classCallCheck","Bulletins_possibleConstructorReturn","autobind","fetchAllBulletins","reset","_props","loadingBulletins","margin","Async_default","loading","map","Card_default","className","dangerouslySetInnerHTML","__html","bool","func","defaultProps","ns","actionNamespacer","FOLDERS_LIST_FETCH","FOLDERS_CAPACITY_FETCH","FOLDERS_THROUGHPUT_FETCH","FOLDERS_LATENCY_FETCH","capacity","loadingCapacity","performance","loadingPerformance","loadedPerformance","loadedFolders","collection_reducer_defineProperty","reducer_extends2","baseSelector","rootState","folderCollection","user","address","poolCollection","poolDetail","volumeCollection","volumeDetail","groupCollection","arrayCollection","arrayDetail","inventory","resellerArrays","settings","makeRootReducer","asyncReducers","capacityReport","supportTab","arrayList","preferences","nimble","legacyEventEmitter","legacyApp","App","actionRegistry","get","event","createStore","store","composeWithDevTools","applyMiddleware","storeProvider","__webpack_exports__","initialize_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","prev","Promise","resolve","reject","on","initializeLegacyControllers","start","e","loadTenant","fetchInventory","t1","sent","stop","apply"],"mappings":"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","file":"3-40d45abe8f939ea7832d.js","sourcesContent":["/*** IMPORTS FROM imports-loader ***/\nvar jQuery = window.nimbleShims.jQuery_1_11_1;\n\n// Legacy - Must be done here to ensure bootstrap is loaded after jqueryui\n/* eslint-disable */\nimport $ from 'jquery';\nimport 'jqueryui';\nimport 'bootstrap';\nconst bs_button = $.fn.button.noConflict(); // reverts $.fn.button to jqueryui\n$.fn.bs_button = bs_button;\nconst bs_tooltip = $.fn.tooltip.noConflict(); // reverts $.fn.tooltip to jqueryui\n$.fn.bs_tooltip = bs_tooltip;\n\n","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","import _toPath from 'lodash-es/toPath';\n\n\nfunction createDeleteInWithCleanUp(structure) {\n  var shouldDeleteDefault = function shouldDeleteDefault(structure) {\n    return function (state, path) {\n      return structure.getIn(state, path) !== undefined;\n    };\n  };\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      getIn = structure.getIn,\n      deleteIn = structure.deleteIn,\n      setIn = structure.setIn;\n\n\n  return function () {\n    var shouldDelete = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : shouldDeleteDefault;\n\n    var deleteInWithCleanUp = function deleteInWithCleanUp(state, path) {\n      if (path[path.length - 1] === ']') {\n        // array path\n        var pathTokens = _toPath(path);\n        pathTokens.pop();\n        var parent = getIn(state, pathTokens.join('.'));\n        return parent ? setIn(state, path) : state;\n      }\n\n      var result = state;\n\n      if (shouldDelete(structure)(state, path)) {\n        result = deleteIn(state, path);\n      }\n\n      var dotIndex = path.lastIndexOf('.');\n      if (dotIndex > 0) {\n        var parentPath = path.substring(0, dotIndex);\n        if (parentPath[parentPath.length - 1] !== ']') {\n          var _parent = getIn(result, parentPath);\n          if (deepEqual(_parent, empty)) {\n            return deleteInWithCleanUp(result, parentPath);\n          }\n        }\n      }\n      return result;\n    };\n\n    return deleteInWithCleanUp;\n  };\n}\n\nexport default createDeleteInWithCleanUp;","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { ARRAY_INSERT, ARRAY_MOVE, ARRAY_POP, ARRAY_PUSH, ARRAY_REMOVE, ARRAY_REMOVE_ALL, ARRAY_SHIFT, ARRAY_SPLICE, ARRAY_SWAP, ARRAY_UNSHIFT, AUTOFILL, BLUR, CHANGE, CLEAR_ASYNC_ERROR, CLEAR_SUBMIT, CLEAR_SUBMIT_ERRORS, DESTROY, FOCUS, INITIALIZE, prefix, REGISTER_FIELD, RESET, RESET_SECTION, SET_SUBMIT_FAILED, SET_SUBMIT_SUCCEEDED, START_ASYNC_VALIDATION, START_SUBMIT, STOP_ASYNC_VALIDATION, STOP_SUBMIT, SUBMIT, TOUCH, UNREGISTER_FIELD, UNTOUCH, UPDATE_SYNC_ERRORS, CLEAR_FIELDS, UPDATE_SYNC_WARNINGS } from './actionTypes';\nimport createDeleteInWithCleanUp from './deleteInWithCleanUp';\nimport plain from './structure/plain';\n\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (path.startsWith('values')) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > prefix.length && action.type.substring(0, prefix.length) === prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n\n  var deleteInWithCleanUp = createDeleteInWithCleanUp(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = createDeleteInWithCleanUp(plain)(shouldDelete);\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + '.' + field);\n    return existing || force ? setIn(state, key + '.' + field, splice(existing, index, removeNum, value)) : state;\n  };\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n    var existing = plain.getIn(slice, field);\n    return existing || force ? setIn(state, key, plain.setIn(slice, field, plain.splice(existing, index, removeNum, value))) : state;\n  };\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _defineProperty(_behaviors, ARRAY_INSERT, function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n\n    return arraySplice(state, field, index, 0, payload);\n  }), _defineProperty(_behaviors, ARRAY_MOVE, function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n\n    var array = getIn(state, 'values.' + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + '.' + field;\n        if (getIn(result, path)) {\n          var value = getIn(result, path + '[' + from + ']');\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n    return result;\n  }), _defineProperty(_behaviors, ARRAY_POP, function (state, _ref4) {\n    var field = _ref4.meta.field;\n\n    var array = getIn(state, 'values.' + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }), _defineProperty(_behaviors, ARRAY_PUSH, function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n\n    var array = getIn(state, 'values.' + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }), _defineProperty(_behaviors, ARRAY_REMOVE, function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n\n    return arraySplice(state, field, index, 1);\n  }), _defineProperty(_behaviors, ARRAY_REMOVE_ALL, function (state, _ref7) {\n    var field = _ref7.meta.field;\n\n    var array = getIn(state, 'values.' + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }), _defineProperty(_behaviors, ARRAY_SHIFT, function (state, _ref8) {\n    var field = _ref8.meta.field;\n\n    return arraySplice(state, field, 0, 1);\n  }), _defineProperty(_behaviors, ARRAY_SPLICE, function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n\n    return arraySplice(state, field, index, removeNum, payload);\n  }), _defineProperty(_behaviors, ARRAY_SWAP, function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + '.' + field + '[' + indexA + ']');\n      var valueB = getIn(result, key + '.' + field + '[' + indexB + ']');\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + '.' + field + '[' + indexA + ']', valueB);\n        result = setIn(result, key + '.' + field + '[' + indexB + ']', valueA);\n      }\n    });\n    return result;\n  }), _defineProperty(_behaviors, ARRAY_UNSHIFT, function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n\n    return arraySplice(state, field, 0, 0, payload);\n  }), _defineProperty(_behaviors, AUTOFILL, function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n\n    var result = state;\n    result = deleteInWithCleanUp(result, 'asyncErrors.' + field);\n    result = deleteInWithCleanUp(result, 'submitErrors.' + field);\n    result = setIn(result, 'fields.' + field + '.autofilled', true);\n    result = setIn(result, 'values.' + field, payload);\n    return result;\n  }), _defineProperty(_behaviors, BLUR, function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n\n    var result = state;\n    var initial = getIn(result, 'initial.' + field);\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, 'values.' + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, 'values.' + field, payload);\n    }\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n    result = deleteIn(result, 'fields.' + field + '.active');\n    if (touch) {\n      result = setIn(result, 'fields.' + field + '.touched', true);\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }), _defineProperty(_behaviors, CHANGE, function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n\n    var result = state;\n    var initial = getIn(result, 'initial.' + field);\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, 'values.' + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, 'values.' + field, payload);\n    }\n    result = deleteInWithCleanUp(result, 'asyncErrors.' + field);\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, 'submitErrors.' + field);\n    }\n    result = deleteInWithCleanUp(result, 'fields.' + field + '.autofilled');\n    if (touch) {\n      result = setIn(result, 'fields.' + field + '.touched', true);\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }), _defineProperty(_behaviors, CLEAR_SUBMIT, function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }), _defineProperty(_behaviors, CLEAR_SUBMIT_ERRORS, function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }), _defineProperty(_behaviors, CLEAR_ASYNC_ERROR, function (state, _ref15) {\n    var field = _ref15.meta.field;\n\n    return deleteIn(state, 'asyncErrors.' + field);\n  }), _defineProperty(_behaviors, CLEAR_FIELDS, function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, 'values.' + field);\n      result = deleteInWithCleanUp(result, 'asyncErrors.' + field);\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, 'submitErrors.' + field);\n      }\n      result = deleteInWithCleanUp(result, 'fields.' + field + '.autofilled');\n      if (!keepTouched) {\n        result = deleteIn(result, 'fields.' + field + '.touched');\n      }\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, 'fields.' + key + '.touched');\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }), _defineProperty(_behaviors, FOCUS, function (state, _ref17) {\n    var field = _ref17.meta.field;\n\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, 'fields.' + previouslyActive + '.active');\n    result = setIn(result, 'fields.' + field + '.visited', true);\n    result = setIn(result, 'fields.' + field + '.active', true);\n    result = setIn(result, 'active', field);\n    return result;\n  }), _defineProperty(_behaviors, INITIALIZE, function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n    var warning = getIn(state, 'warning');\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n    var syncWarnings = getIn(state, 'syncWarnings');\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    }\n\n    // persist old errors, they will get recalculated if the new form values are different from the old values\n    var error = getIn(state, 'error');\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n    var syncErrors = getIn(state, 'syncErrors');\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name);\n\n            // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n\n        newValues = setIn(newValues, name, previousValue);\n      });\n\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }), _defineProperty(_behaviors, REGISTER_FIELD, function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n\n    var key = 'registeredFields[\\'' + name + '\\']';\n    var field = getIn(state, key);\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({ name: name, type: type, count: 1 });\n    }\n    return setIn(state, key, field);\n  }), _defineProperty(_behaviors, RESET, function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n    var values = getIn(state, 'initial');\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n    return result;\n  }), _defineProperty(_behaviors, RESET_SECTION, function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n\n    var result = state;\n\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, 'asyncErrors.' + section);\n      result = deleteInWithCleanUp(result, 'submitErrors.' + section);\n      result = deleteInWithCleanUp(result, 'fields.' + section);\n\n      var values = getIn(state, 'initial.' + section);\n      result = values ? setIn(result, 'values.' + section, values) : deleteInWithCleanUp(result, 'values.' + section);\n    });\n\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, 'fields.' + key + '.touched');\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n\n    return result;\n  }), _defineProperty(_behaviors, SUBMIT, function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }), _defineProperty(_behaviors, START_ASYNC_VALIDATION, function (state, _ref21) {\n    var field = _ref21.meta.field;\n\n    return setIn(state, 'asyncValidating', field || true);\n  }), _defineProperty(_behaviors, START_SUBMIT, function (state) {\n    return setIn(state, 'submitting', true);\n  }), _defineProperty(_behaviors, STOP_ASYNC_VALIDATION, function (state, _ref22) {\n    var payload = _ref22.payload;\n\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutProperties(payload, ['_error']);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n    return result;\n  }), _defineProperty(_behaviors, STOP_SUBMIT, function (state, _ref23) {\n    var payload = _ref23.payload;\n\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = _objectWithoutProperties(payload, ['_error']);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n    return result;\n  }), _defineProperty(_behaviors, SET_SUBMIT_FAILED, function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, 'fields.' + field + '.touched', true);\n    });\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n    return result;\n  }), _defineProperty(_behaviors, SET_SUBMIT_SUCCEEDED, function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }), _defineProperty(_behaviors, TOUCH, function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, 'fields.' + field + '.touched', true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }), _defineProperty(_behaviors, UNREGISTER_FIELD, function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n\n    var result = state;\n    var key = 'registeredFields[\\'' + name + '\\']';\n    var field = getIn(result, key);\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n      var syncErrors = getIn(result, 'syncErrors');\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n        if (plain.deepEqual(syncErrors, plain.empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n      var syncWarnings = getIn(result, 'syncWarnings');\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n        if (plain.deepEqual(syncWarnings, plain.empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n      result = deleteInWithCleanUp(result, 'submitErrors.' + name);\n      result = deleteInWithCleanUp(result, 'asyncErrors.' + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n    return result;\n  }), _defineProperty(_behaviors, UNTOUCH, function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, 'fields.' + field + '.touched');\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, 'fields.' + key + '.touched');\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }), _defineProperty(_behaviors, UPDATE_SYNC_ERRORS, function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n\n    var result = state;\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n    return result;\n  }), _defineProperty(_behaviors, UPDATE_SYNC_WARNINGS, function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n\n    var result = state;\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n    return result;\n  }), _behaviors);\n\n  var reducer = function reducer() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;\n    var action = arguments[1];\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;\n      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { type: 'NONE' };\n\n      var form = action && action.meta && action.meta.form;\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n      if (action.type === DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n\n  /**\n   * Adds additional functionality to the reducer\n   */\n  function decorate(target) {\n    target.plugin = function (reducers) {\n      var _this = this;\n\n      // use 'function' keyword to enable 'this'\n      return decorate(function () {\n        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;\n        var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { type: 'NONE' };\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n        var form = action && action.meta && action.meta.form;\n\n        if (form) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nexport default createReducer;","import createReducer from './createReducer';\nimport plain from './structure/plain';\n\nexport default createReducer(plain);","import { createReducersForAction } from '@infosight/elmer/dist/utils/redux';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport * as selectors from './selectors';\nimport {\n    POOL_CAPACITY_TIME_SERIES_FETCH,\n    POOL_CAPACITY_APPLICATIONS_FETCH,\n    POOL_CAPACITY_FOLDERS_FETCH,\n    POOL_CAPACITY_SUMMARY_FETCH,\n    POOL_CAPACITY_RESET,\n    POOL_CAPACITY_ARRAY_CAPACITY_FETCH,\n    TOP_POOLS_CAPACITY_TIME_SERIES_FETCH,\n} from '../../constants';\n\nconst initialState = {\n    timeSeries: null,\n    loadingTimeSeries: false,\n    applications: null,\n    loadingApplications: false,\n    folders: null,\n    loadingFolders: false,\n    summary: null,\n    loadingSummary: false,\n    arrayCapacity: null,\n    loadingArrayCapacity: false,\n    pools: null,\n    loadingPools: false,\n    topPoolsTimeSeries: null,\n    loadingTopPoolsTimeSeries: false,\n    volumes: null,\n    loadingVolumes: false,\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [POOL_CAPACITY_RESET]: () => (initialState),\n    ...createReducersForAction({ type: POOL_CAPACITY_SUMMARY_FETCH, stateKey: 'summary' }),\n    ...createReducersForAction({ type: POOL_CAPACITY_APPLICATIONS_FETCH, stateKey: 'applications' }),\n    ...createReducersForAction({ type: POOL_CAPACITY_FOLDERS_FETCH, stateKey: 'folders' }),\n    ...createReducersForAction({ type: POOL_CAPACITY_TIME_SERIES_FETCH, stateKey: 'timeSeries' }),\n    ...createReducersForAction({ type: POOL_CAPACITY_ARRAY_CAPACITY_FETCH, stateKey: 'arrayCapacity' }),\n    ...createReducersForAction({ type: TOP_POOLS_CAPACITY_TIME_SERIES_FETCH, stateKey: 'topPoolsTimeSeries' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nexport { selectors };\n","import { createReducersForAction } from '@infosight/elmer/dist/utils/redux';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    FOLDER_CAPACITY_TIME_SERIES_FETCH,\n    FOLDER_CAPACITY_APPLICATIONS_FETCH,\n    FOLDER_CAPACITY_SUMMARY_FETCH,\n    FOLDER_CAPACITY_RESET,\n} from '../../constants';\n\nconst initialState = {\n    timeSeries: null,\n    loadingTimeSeries: false,\n    applications: null,\n    loadingApplications: false,\n    summary: null,\n    loadingSummary: false,\n    volumes: null,\n    loadingVolumes: false,\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [FOLDER_CAPACITY_RESET]: () => (initialState),\n    ...createReducersForAction({ type: FOLDER_CAPACITY_SUMMARY_FETCH, stateKey: 'summary' }),\n    ...createReducersForAction({ type: FOLDER_CAPACITY_APPLICATIONS_FETCH, stateKey: 'applications' }),\n    ...createReducersForAction({ type: FOLDER_CAPACITY_TIME_SERIES_FETCH, stateKey: 'timeSeries' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n","import poolContext from './poolContext';\nimport folderContext from './folderContext';\nimport objectRelationships from './objectRelationships';\n\n// Undefined allows child \"slices\" of state to initialize themselves. No need to worry about checking for nulls.\nconst initialState = {\n    poolContext: undefined,\n    folderContext: undefined,\n    objectRelationships: undefined,\n};\n\nexport default function (state = initialState, action) {\n    const reduced = {\n        poolContext: poolContext(state.poolContext, action),\n        folderContext: folderContext(state.folderContext, action),\n        objectRelationships: objectRelationships(state.objectRelationships, action),\n    };\n\n    const returnReduced = Object\n        .keys(reduced)\n        .reduce((modified, key) => (modified || state[key] !== reduced[key]), false);\n    return returnReduced ? reduced : state;\n}\n","import CapacityReport from './components/containers/CapacityContainer';\n\nexport { default as reducer } from './reducer/index';\nexport default CapacityReport;\n","import { USER_CONTEXT_CHANGED } from '../../user/constants';\nimport * as types from '../actions/constants';\n\nconst initialState = null; // null means it's uninitialized, {} means empty collection\n\n// function reduceCaseList(state, action) {\n//     const restate = action.gotsData\n//     .reduce((r, n) => {\n//         const ik = n.id;\n//         // this is ok to do here:\n//         r[ik] = n;  // eslint-disable-line\n//         return r;\n//     }, {});\n//     return Object.assign({}, state, restate);\n// }\n\n// function reduceCase(state, action) {\n//     const restate = {};\n//     const caseId = action.gotsData.id;\n//     restate[caseId] = Object.assign({}, action.gotsData); // item\n//     return Object.assign({}, state, restate); // collectiion\n// }\n\nexport default function kcsReducer(state = initialState, action) {\n    switch (action.type) {\n    case USER_CONTEXT_CHANGED:\n        return {};\n\n    case types.FETCH_KCS_SOLUTION_OK:\n        return state;\n    case types.FETCH_KCS_SOLUTION_FAIL:\n        return state;\n\n\n    default:\n    }\n    return state;\n}\n","import { USER_CONTEXT_CHANGED } from '../../user/constants';\nimport * as types from '../actions/constants';\n\nconst initialState = {\n    caseStatus: null,\n    justMine: false,\n    priority: 0,\n    startDate: null,\n    endDate: null,\n    textQuery: '',\n    hideAutoCases: false,\n};\n\nexport default function supportFiltering(state = initialState, action) {\n    switch (action.type) {\n    case USER_CONTEXT_CHANGED:\n        return {};\n\n    case types.FILTER_CASE_STATUS:\n        return Object.assign({}, state, { caseStatus: action.caseStatus });\n\n    case types.FILTER_CASE_PRIORITY:\n        return Object.assign({}, state, { priority: action.priority });\n\n    case types.FILTER_CASE_PARAMS:\n        return Object.assign({}, state, action.filterParams);\n\n    default:\n    }\n    return state;\n}\n","// index.js\n\nimport { combineReducers } from 'redux';\nimport core from './core';\nimport cases from './support-cases';\nimport kcs from './support-kcs';\nimport filtering from './support-filtering';\n\nexport default combineReducers({\n    filtering,\n    cases,\n    kcs,\n    core,\n});\n","// Copy Arrays\nexport const COPY_ARRAY_DATA = 'COPY_ARRAY_DATA';\n\n// Fetch Arrays\nexport const FETCH_ARRAYS_REQUEST = 'FETCH_ARRAYS_REQUEST';\nexport const FETCH_ARRAYS_SUCCESS = 'FETCH_ARRAYS_SUCCESS';\nexport const FETCH_ARRAYS_FAILURE = 'FETCH_ARRAYS_FAILURE';\n\n// Select Array\nexport const SELECT_ARRAY_REQUEST = 'SELECT_ARRAY_REQUEST';\n\n\nexport const ARRAY = 'ARRAY';\n","import {\n    COPY_ARRAY_DATA,\n    // FETCH_ARRAYS_REQUEST,\n    // FETCH_ARRAYS_SUCCESS,\n} from '../constants';\n\nconst initialState = {\n    assets: {},\n    isloading: false,\n};\n\nconst ACTION_HANDLERS = {\n\n    [COPY_ARRAY_DATA]: (state, { assets }) => ({\n        ...state,\n        assets,\n    }),\n\n    // [FETCH_ARRAYS_REQUEST]: state => ({\n    //     ...state,\n    // }),\n    // [FETCH_ARRAYS_SUCCESS]: (state, { payload }) => ({\n    //     ...state,\n    //     assets: payload,\n    //     isloading: true,\n    // }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    const statedump = handler ? handler(state, action) : state;\n    return statedump;\n}\n","import arraysReducer from './arraysReducer';\n\nexport default arraysReducer;\n","import { createReducersForAction, createSelector, getInitialState } from '@infosight/elmer/dist/utils/redux';\n\nimport { FETCH_BULLETINS, RESET } from './constants';\n\nconst initialState = {\n    ...getInitialState('bulletins'),\n};\n\nconst ACTION_HANDLERS = {\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: FETCH_BULLETINS, stateKey: 'bulletins' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => state.bulletins;\nexport const bulletinsSelector = createSelector(baseSelector, 'bulletins');\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getStore } from '../../../util/storeProvider';\nimport { fetchActiveBulletins } from '../actionCreators';\nimport { bulletinsSelector } from '../reducer';\nimport BulletinsModal from '../components/BulletinsModal';\n\nlet shownOnce = false;\n\nclass BulletinController extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { open: false };\n    }\n\n    async componentDidMount() {\n        // User has chosen to ignore the bulletin for this session; don't show them again.\n        if (shownOnce) {\n            return;\n        }\n\n        // If a user starts the app at particular URLs, we don't want to show bulletins.\n        const ignorePaths = [\n            /settings\\/admin\\/bulletins/,\n            /user\\/bulletins/,\n        ];\n\n        if (ignorePaths.some(path => window.location.pathname.match(path))) {\n            return;\n        }\n\n        try {\n            const bulletins = await fetchActiveBulletins()(getStore().dispatch);\n            if (bulletins && bulletins.length) {\n                this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state\n                shownOnce = true;\n            }\n        } catch (ex) {\n            console.error('Error loading bulletins', ex);\n        }\n    }\n\n    render() {\n        if (this.state.open) {\n            return <BulletinsModal closeModal={() => this.setState({ open: false })} bulletins={this.props.bulletins} />;\n        }\n\n        return null;\n    }\n}\n\nBulletinController.propTypes = {\n    bulletins: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        contents: PropTypes.string.isRequired,\n    })),\n};\n\nconst mapStateToProps = state => bulletinsSelector(state);\nexport default connect(mapStateToProps, null)(BulletinController);\n","/* eslint-disable react/no-danger */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport autobind from 'react-autobind';\nimport { connect } from 'react-redux';\nimport Async from '@infosight/elmer/dist/components/Async';\nimport Card from '@infosight/elmer/dist/components/Card';\nimport classnames from 'classnames/bind';\nimport { reset, fetchAllBulletins } from '../actionCreators';\nimport { bulletinsSelector } from '../reducer';\nimport style from './Bulletins.scss';\n\nconst cx = classnames.bind(style);\n\nclass Bulletins extends Component {\n    constructor(props) {\n        super(props);\n        autobind(this);\n    }\n\n    componentDidMount() {\n        this.props.fetchAllBulletins();\n    }\n\n    componentWillUnmount() {\n        this.props.reset();\n    }\n\n    render() {\n        const { bulletins, loadingBulletins } = this.props;\n        return (\n            <div>\n                <h2 style={{ margin: '10px 30px' }}>Bulletins</h2>\n                <Async loading={loadingBulletins}>\n                    {() => {\n                        if (!bulletins || !bulletins.length) {\n                            return (\n                                <div className=\"card\">\n                                    <div className=\"card-section\">\n                                        <h1>You haven&#39;t received any bulletins.</h1>\n                                    </div>\n                                </div>\n                            );\n                        }\n\n                        return bulletins.map(({ contents, id }) => (\n                            <Card key={id}>\n                                <div className={cx('bulletin')} dangerouslySetInnerHTML={{ __html: contents }} />\n                            </Card>\n                        ));\n                    }}\n                </Async>\n            </div>\n        );\n    }\n}\n\nBulletins.propTypes = {\n    loadingBulletins: PropTypes.bool,\n    bulletins: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        contents: PropTypes.string.isRequired,\n    })),\n    reset: PropTypes.func.isRequired,\n    fetchAllBulletins: PropTypes.func.isRequired,\n};\n\nBulletins.defaultProps = {};\n\nconst mapStateToProps = state => bulletinsSelector(state);\nexport default connect(mapStateToProps, { reset, fetchAllBulletins })(Bulletins);\n","import { actionNamespacer } from '@infosight/elmer/dist/utils/redux';\n\n// Store Actions\nconst ns = actionNamespacer('FOLDERS_COLLECTION');\n\nexport const FOLDERS_LIST_FETCH = ns('LIST_FETCH');\nexport const FOLDERS_CAPACITY_FETCH = ns('CAPACITY_FETCH');\nexport const FOLDERS_THROUGHPUT_FETCH = ns('THROUGHPUT_FETCH');\nexport const FOLDERS_LATENCY_FETCH = ns('LATENCY_FETCH');\nexport const RESET = ns('RESET');\n\n// Other\nexport const FOLDER = 'FOLDER';\nexport const SUMMARY_TAB = 'summary';\nexport const SPACE_TAB = 'space';\nexport const PERFORMANCE_TAB = 'performance';\nexport const PROTECTION_TAB = 'protection';\n","import { createReducersForAction, createSelector } from '@infosight/elmer/dist/utils/redux';\nimport rootState from '../../rootStateSelector';\nimport { USER_CONTEXT_CHANGED } from '../../../user/constants';\nimport {\n    FOLDERS_CAPACITY_FETCH,\n    FOLDERS_THROUGHPUT_FETCH,\n    FOLDERS_LATENCY_FETCH,\n    FOLDERS_LIST_FETCH,\n    RESET,\n} from './constants';\n\nconst initialState = {\n    capacity: null,\n    loadingCapacity: false,\n    performance: null,\n    loadingPerformance: false,\n    loadedPerformance: false,\n    folders: null,\n    loadingFolders: false,\n    loadedFolders: false,\n};\n\nconst ACTION_HANDLERS = {\n    [USER_CONTEXT_CHANGED]: () => (initialState),\n    [RESET]: () => (initialState),\n    ...createReducersForAction({ type: FOLDERS_CAPACITY_FETCH, stateKey: 'capacity' }),\n    ...createReducersForAction({ type: FOLDERS_THROUGHPUT_FETCH, stateKey: 'throughputTimeseries' }),\n    ...createReducersForAction({ type: FOLDERS_LATENCY_FETCH, stateKey: 'latencyTimeseries' }),\n    ...createReducersForAction({ type: FOLDERS_LIST_FETCH, stateKey: 'folders' }),\n};\n\nexport default function reducer(state = initialState, action) {\n    const handler = ACTION_HANDLERS[action.type];\n    return handler ? handler(state, action) : state;\n}\n\nconst baseSelector = state => rootState(state).folderCollection;\nexport const capacitySelector = createSelector(baseSelector, 'capacity');\nexport const throughputTimeseriesSelector = createSelector(baseSelector, 'throughputTimeseries');\nexport const latencyTimeseriesSelector = createSelector(baseSelector, 'latencyTimeseries');\nexport const listSelector = createSelector(baseSelector, 'folders');\n","import { combineReducers } from 'redux';\n\nimport user from './user/reducer';\n\nexport default combineReducers({\n    user,\n});\n","import { combineReducers } from 'redux';\nimport address from './address/reducer';\nimport poolCollection from './pools/collection/reducer';\nimport poolDetail from './pools/detail/reducer';\nimport folderCollection from './folders/collection/reducer';\nimport volumeCollection from './volumes/collection/reducer';\nimport volumeDetail from './volumes/detail/reducer';\nimport arrayCollection from './arrays/collection/reducer';\nimport arrayDetail from './arrays/detail/reducer';\nimport groupCollection from './groups/collection/reducer';\nimport inventory from './inventory/reducer';\nimport resellerArrays from './resellerDashboard/reducer';\nimport settings from './settings/reducer';\n\nexport default combineReducers({\n    address,\n    poolCollection,\n    poolDetail,\n    folderCollection,\n    volumeCollection,\n    volumeDetail,\n    groupCollection,\n    arrayCollection,\n    arrayDetail,\n    inventory,\n    resellerArrays,\n    settings,\n});\n","import { combineReducers } from 'redux';\nimport { reducer as form } from 'redux-form';\nimport { reducer as capacityReport } from '../modules/capacityReport';\nimport objectRelationships from '../modules/capacityReport/reducer/objectRelationships';\nimport supportTab from '../modules/support/reducer';\nimport { reducer as arrayList } from '../modules/arrays';\nimport { reducer as user } from '../modules/user';\nimport { reducer as bulletins } from '../modules/bulletins';\nimport preferences from '../modules/preferences/reducer';\nimport nimble from '../modules/nimble/reducer';\n\nconst makeRootReducer = asyncReducers => combineReducers({\n    capacityReport,\n    supportTab,\n    user,\n    objectRelationships,\n    arrayList,\n    form,\n    bulletins,\n    preferences,\n    nimble,\n    ...asyncReducers,\n});\n\nexport default makeRootReducer;\n","import App from 'app/Application';\nimport { actionRegistry } from './legacyEventEmitterActions';\n\nexport default () => next => (action) => {\n    const legacyApp = App;\n\n    if (legacyApp && actionRegistry.get(action.type)) {\n        legacyApp.event('progeny', action.type, action);\n    }\n\n    return next(action);\n};\n","import '@infosight/elmer/dist/global';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport makeRootReducer from './reducers';\nimport storeProvider from '../util/storeProvider';\nimport legacyEventEmitter from './middleware/legacyEventEmitter';\n\nexport default (initialState = {}) => {\n    const store = createStore(\n        makeRootReducer(),\n        initialState,\n        composeWithDevTools({ name: 'nimble' })(applyMiddleware(thunk, legacyEventEmitter))\n    );\n\n    store.asyncReducers = {};\n\n    storeProvider(store);\n\n    return store;\n};\n","/*** IMPORTS FROM imports-loader ***/\nvar jQuery = window.nimbleShims.jQuery_1_11_1;\n\nimport './legacy_bootstrap_components';\nimport createStore from '../../store/createStore';\nimport { fetchInventory } from '../nimble/inventory';\nimport App from '../../../app/Application';\nimport { loadTenant } from '../user/actionsCreators';\n\nconst startLegacyApp = () => new Promise(((resolve, reject) => {\n    try {\n        App.on('start', () => {\n            App.initializeLegacyControllers();\n            resolve();\n        });\n\n        App.start();\n    } catch (e) {\n        reject(e);\n    }\n}));\n\nexport default async function initialize() {\n    const store = createStore();\n    await startLegacyApp();\n    await loadTenant()(store.dispatch);\n    store.dispatch(await fetchInventory());\n}\n\n"],"sourceRoot":""}